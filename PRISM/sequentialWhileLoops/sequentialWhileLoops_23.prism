mdp

module TestMDP

pc : [0..49] init 0;
y : [0..253] init 0;
x : [0..1] init 0;

[] (pc=0) -> (pc'=25) & (y'=230);
[] (pc=25) -> (pc'=24) & (x'=1);
[] (pc=24) & (((x<230)&(y>230))) -> (pc'=26);
[] (pc=26) -> (pc'=24) & (y'=(y-x));
[] (pc=24) & (!(((x<230)&(y>230)))) -> (pc'=23);
[] (pc=23) & (((x<220)&(y>220))) -> (pc'=27);
[] (pc=27) -> (pc'=23) & (y'=(y-x));
[] (pc=23) & (!(((x<220)&(y>220)))) -> (pc'=22);
[] (pc=22) & (((x<210)&(y>210))) -> (pc'=28);
[] (pc=28) -> (pc'=22) & (y'=(y-x));
[] (pc=22) & (!(((x<210)&(y>210)))) -> (pc'=21);
[] (pc=21) & (((x<200)&(y>200))) -> (pc'=29);
[] (pc=29) -> (pc'=21) & (y'=(y-x));
[] (pc=21) & (!(((x<200)&(y>200)))) -> (pc'=20);
[] (pc=20) & (((x<190)&(y>190))) -> (pc'=30);
[] (pc=30) -> (pc'=20) & (y'=(y-x));
[] (pc=20) & (!(((x<190)&(y>190)))) -> (pc'=19);
[] (pc=19) & (((x<180)&(y>180))) -> (pc'=31);
[] (pc=31) -> (pc'=19) & (y'=(y-x));
[] (pc=19) & (!(((x<180)&(y>180)))) -> (pc'=18);
[] (pc=18) & (((x<170)&(y>170))) -> (pc'=32);
[] (pc=32) -> (pc'=18) & (y'=(y-x));
[] (pc=18) & (!(((x<170)&(y>170)))) -> (pc'=17);
[] (pc=17) & (((x<160)&(y>160))) -> (pc'=33);
[] (pc=33) -> (pc'=17) & (y'=(y-x));
[] (pc=17) & (!(((x<160)&(y>160)))) -> (pc'=16);
[] (pc=16) & (((x<150)&(y>150))) -> (pc'=34);
[] (pc=34) -> (pc'=16) & (y'=(y-x));
[] (pc=16) & (!(((x<150)&(y>150)))) -> (pc'=15);
[] (pc=15) & (((x<140)&(y>140))) -> (pc'=35);
[] (pc=35) -> (pc'=15) & (y'=(y-x));
[] (pc=15) & (!(((x<140)&(y>140)))) -> (pc'=14);
[] (pc=14) & (((x<130)&(y>130))) -> (pc'=36);
[] (pc=36) -> (pc'=14) & (y'=(y-x));
[] (pc=14) & (!(((x<130)&(y>130)))) -> (pc'=13);
[] (pc=13) & (((x<120)&(y>120))) -> (pc'=37);
[] (pc=37) -> (pc'=13) & (y'=(y-x));
[] (pc=13) & (!(((x<120)&(y>120)))) -> (pc'=12);
[] (pc=12) & (((x<110)&(y>110))) -> (pc'=38);
[] (pc=38) -> (pc'=12) & (y'=(y-x));
[] (pc=12) & (!(((x<110)&(y>110)))) -> (pc'=11);
[] (pc=11) & (((x<100)&(y>100))) -> (pc'=39);
[] (pc=39) -> (pc'=11) & (y'=(y-x));
[] (pc=11) & (!(((x<100)&(y>100)))) -> (pc'=10);
[] (pc=10) & (((x<90)&(y>90))) -> (pc'=40);
[] (pc=40) -> (pc'=10) & (y'=(y-x));
[] (pc=10) & (!(((x<90)&(y>90)))) -> (pc'=9);
[] (pc=9) & (((x<80)&(y>80))) -> (pc'=41);
[] (pc=41) -> (pc'=9) & (y'=(y-x));
[] (pc=9) & (!(((x<80)&(y>80)))) -> (pc'=8);
[] (pc=8) & (((x<70)&(y>70))) -> (pc'=42);
[] (pc=42) -> (pc'=8) & (y'=(y-x));
[] (pc=8) & (!(((x<70)&(y>70)))) -> (pc'=7);
[] (pc=7) & (((x<60)&(y>60))) -> (pc'=43);
[] (pc=43) -> (pc'=7) & (y'=(y-x));
[] (pc=7) & (!(((x<60)&(y>60)))) -> (pc'=6);
[] (pc=6) & (((x<50)&(y>50))) -> (pc'=44);
[] (pc=44) -> (pc'=6) & (y'=(y-x));
[] (pc=6) & (!(((x<50)&(y>50)))) -> (pc'=5);
[] (pc=5) & (((x<40)&(y>40))) -> (pc'=45);
[] (pc=45) -> (pc'=5) & (y'=(y-x));
[] (pc=5) & (!(((x<40)&(y>40)))) -> (pc'=4);
[] (pc=4) & (((x<30)&(y>30))) -> (pc'=46);
[] (pc=46) -> (pc'=4) & (y'=(y-x));
[] (pc=4) & (!(((x<30)&(y>30)))) -> (pc'=3);
[] (pc=3) & (((x<20)&(y>20))) -> (pc'=47);
[] (pc=47) -> (pc'=3) & (y'=(y-x));
[] (pc=3) & (!(((x<20)&(y>20)))) -> (pc'=2);
[] (pc=2) & (((x<10)&(y>10))) -> (pc'=48);
[] (pc=48) -> (pc'=2) & (y'=(y-x));
[] (pc=2) & (!(((x<10)&(y>10)))) -> (pc'=1);
[] (pc=1) -> (pc'=49);
[] (pc=49) -> (pc'=49);

endmodule

rewards "post"

pc=1 : y;

endrewards

