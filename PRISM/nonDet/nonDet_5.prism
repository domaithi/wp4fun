mdp

module TestMDP

pc : [0..64] init 0;
x : [0..100] init 0;

[] (pc=0) -> (pc'=2);
[] (pc=2) -> (pc'=3);
[] (pc=3) -> (pc'=4);
[] (pc=4) -> (pc'=5);
[] (pc=5) -> (pc'=6);
[] (pc=6) -> (pc'=1) & (x'=67);
[] (pc=5) -> (pc'=7);
[] (pc=7) -> (pc'=1) & (x'=94);
[] (pc=4) -> (pc'=8);
[] (pc=8) -> (pc'=9);
[] (pc=9) -> (pc'=1) & (x'=78);
[] (pc=8) -> (pc'=10);
[] (pc=10) -> (pc'=1) & (x'=11);
[] (pc=3) -> (pc'=11);
[] (pc=11) -> (pc'=12);
[] (pc=12) -> (pc'=13);
[] (pc=13) -> (pc'=1) & (x'=46);
[] (pc=12) -> (pc'=14);
[] (pc=14) -> (pc'=1) & (x'=63);
[] (pc=11) -> (pc'=15);
[] (pc=15) -> (pc'=16);
[] (pc=16) -> (pc'=1) & (x'=80);
[] (pc=15) -> (pc'=17);
[] (pc=17) -> (pc'=1) & (x'=52);
[] (pc=2) -> (pc'=18);
[] (pc=18) -> (pc'=19);
[] (pc=19) -> (pc'=20);
[] (pc=20) -> (pc'=21);
[] (pc=21) -> (pc'=1) & (x'=82);
[] (pc=20) -> (pc'=22);
[] (pc=22) -> (pc'=1) & (x'=35);
[] (pc=19) -> (pc'=23);
[] (pc=23) -> (pc'=24);
[] (pc=24) -> (pc'=1) & (x'=71);
[] (pc=23) -> (pc'=25);
[] (pc=25) -> (pc'=1) & (x'=76);
[] (pc=18) -> (pc'=26);
[] (pc=26) -> (pc'=27);
[] (pc=27) -> (pc'=28);
[] (pc=28) -> (pc'=1) & (x'=47);
[] (pc=27) -> (pc'=29);
[] (pc=29) -> (pc'=1) & (x'=7);
[] (pc=26) -> (pc'=30);
[] (pc=30) -> (pc'=31);
[] (pc=31) -> (pc'=1) & (x'=9);
[] (pc=30) -> (pc'=32);
[] (pc=32) -> (pc'=1) & (x'=30);
[] (pc=0) -> (pc'=33);
[] (pc=33) -> (pc'=34);
[] (pc=34) -> (pc'=35);
[] (pc=35) -> (pc'=36);
[] (pc=36) -> (pc'=37);
[] (pc=37) -> (pc'=1) & (x'=42);
[] (pc=36) -> (pc'=38);
[] (pc=38) -> (pc'=1) & (x'=96);
[] (pc=35) -> (pc'=39);
[] (pc=39) -> (pc'=40);
[] (pc=40) -> (pc'=1) & (x'=22);
[] (pc=39) -> (pc'=41);
[] (pc=41) -> (pc'=1) & (x'=69);
[] (pc=34) -> (pc'=42);
[] (pc=42) -> (pc'=43);
[] (pc=43) -> (pc'=44);
[] (pc=44) -> (pc'=1) & (x'=78);
[] (pc=43) -> (pc'=45);
[] (pc=45) -> (pc'=1) & (x'=68);
[] (pc=42) -> (pc'=46);
[] (pc=46) -> (pc'=47);
[] (pc=47) -> (pc'=1) & (x'=66);
[] (pc=46) -> (pc'=48);
[] (pc=48) -> (pc'=1) & (x'=71);
[] (pc=33) -> (pc'=49);
[] (pc=49) -> (pc'=50);
[] (pc=50) -> (pc'=51);
[] (pc=51) -> (pc'=52);
[] (pc=52) -> (pc'=1) & (x'=42);
[] (pc=51) -> (pc'=53);
[] (pc=53) -> (pc'=1) & (x'=27);
[] (pc=50) -> (pc'=54);
[] (pc=54) -> (pc'=55);
[] (pc=55) -> (pc'=1) & (x'=93);
[] (pc=54) -> (pc'=56);
[] (pc=56) -> (pc'=1) & (x'=15);
[] (pc=49) -> (pc'=57);
[] (pc=57) -> (pc'=58);
[] (pc=58) -> (pc'=59);
[] (pc=59) -> (pc'=1) & (x'=25);
[] (pc=58) -> (pc'=60);
[] (pc=60) -> (pc'=1) & (x'=47);
[] (pc=57) -> (pc'=61);
[] (pc=61) -> (pc'=62);
[] (pc=62) -> (pc'=1) & (x'=93);
[] (pc=61) -> (pc'=63);
[] (pc=63) -> (pc'=1) & (x'=4);
[] (pc=1) -> (pc'=64);
[] (pc=64) -> (pc'=64);

endmodule

rewards "post"

pc=1 : x;

endrewards

