mdp

module TestMDP

pc : [0..1046639] init 0;
x : [0..100] init 0;

[] (pc=1046581) -> (pc'=1) & (x'=21);
[] (pc=1046582) -> (pc'=1) & (x'=11);
[] (pc=1046580) -> (65/71): (pc'=1046581) + (1-(65/71)): (pc'=1046582);
[] (pc=1046584) -> (pc'=1) & (x'=77);
[] (pc=1046585) -> (pc'=1) & (x'=7);
[] (pc=1046583) -> (56/81): (pc'=1046584) + (1-(56/81)): (pc'=1046585);
[] (pc=1046579) -> (44/81): (pc'=1046580) + (1-(44/81)): (pc'=1046583);
[] (pc=1046588) -> (pc'=1) & (x'=45);
[] (pc=1046589) -> (pc'=1) & (x'=96);
[] (pc=1046587) -> (3/12): (pc'=1046588) + (1-(3/12)): (pc'=1046589);
[] (pc=1046591) -> (pc'=1) & (x'=59);
[] (pc=1046592) -> (pc'=1) & (x'=9);
[] (pc=1046590) -> (10/32): (pc'=1046591) + (1-(10/32)): (pc'=1046592);
[] (pc=1046586) -> (17/90): (pc'=1046587) + (1-(17/90)): (pc'=1046590);
[] (pc=1046578) -> (13/76): (pc'=1046579) + (1-(13/76)): (pc'=1046586);
[] (pc=1046596) -> (pc'=1) & (x'=93);
[] (pc=1046597) -> (pc'=1) & (x'=73);
[] (pc=1046595) -> (24/90): (pc'=1046596) + (1-(24/90)): (pc'=1046597);
[] (pc=1046599) -> (pc'=1) & (x'=94);
[] (pc=1046600) -> (pc'=1) & (x'=49);
[] (pc=1046598) -> (14/23): (pc'=1046599) + (1-(14/23)): (pc'=1046600);
[] (pc=1046594) -> (9/20): (pc'=1046595) + (1-(9/20)): (pc'=1046598);
[] (pc=1046603) -> (pc'=1) & (x'=56);
[] (pc=1046604) -> (pc'=1) & (x'=82);
[] (pc=1046602) -> (12/84): (pc'=1046603) + (1-(12/84)): (pc'=1046604);
[] (pc=1046606) -> (pc'=1) & (x'=86);
[] (pc=1046607) -> (pc'=1) & (x'=96);
[] (pc=1046605) -> (22/65): (pc'=1046606) + (1-(22/65)): (pc'=1046607);
[] (pc=1046601) -> (39/85): (pc'=1046602) + (1-(39/85)): (pc'=1046605);
[] (pc=1046593) -> (22/41): (pc'=1046594) + (1-(22/41)): (pc'=1046601);
[] (pc=1046577) -> (84/99): (pc'=1046578) + (1-(84/99)): (pc'=1046593);
[] (pc=1046612) -> (pc'=1) & (x'=45);
[] (pc=1046613) -> (pc'=1) & (x'=8);
[] (pc=1046611) -> (9/32): (pc'=1046612) + (1-(9/32)): (pc'=1046613);
[] (pc=1046615) -> (pc'=1) & (x'=6);
[] (pc=1046616) -> (pc'=1) & (x'=86);
[] (pc=1046614) -> (84/87): (pc'=1046615) + (1-(84/87)): (pc'=1046616);
[] (pc=1046610) -> (35/47): (pc'=1046611) + (1-(35/47)): (pc'=1046614);
[] (pc=1046619) -> (pc'=1) & (x'=95);
[] (pc=1046620) -> (pc'=1) & (x'=76);
[] (pc=1046618) -> (60/92): (pc'=1046619) + (1-(60/92)): (pc'=1046620);
[] (pc=1046622) -> (pc'=1) & (x'=67);
[] (pc=1046623) -> (pc'=1) & (x'=41);
[] (pc=1046621) -> (21/65): (pc'=1046622) + (1-(21/65)): (pc'=1046623);
[] (pc=1046617) -> (21/90): (pc'=1046618) + (1-(21/90)): (pc'=1046621);
[] (pc=1046609) -> (60/89): (pc'=1046610) + (1-(60/89)): (pc'=1046617);
[] (pc=1046627) -> (pc'=1) & (x'=88);
[] (pc=1046628) -> (pc'=1) & (x'=82);
[] (pc=1046626) -> (23/79): (pc'=1046627) + (1-(23/79)): (pc'=1046628);
[] (pc=1046630) -> (pc'=1) & (x'=83);
[] (pc=1046631) -> (pc'=1) & (x'=20);
[] (pc=1046629) -> (55/59): (pc'=1046630) + (1-(55/59)): (pc'=1046631);
[] (pc=1046625) -> (68/77): (pc'=1046626) + (1-(68/77)): (pc'=1046629);
[] (pc=1046634) -> (pc'=1) & (x'=40);
[] (pc=1046635) -> (pc'=1) & (x'=98);
[] (pc=1046633) -> (29/37): (pc'=1046634) + (1-(29/37)): (pc'=1046635);
[] (pc=1046637) -> (pc'=1) & (x'=18);
[] (pc=1046638) -> (pc'=1) & (x'=25);
[] (pc=1046636) -> (23/80): (pc'=1046637) + (1-(23/80)): (pc'=1046638);
[] (pc=1046632) -> (9/53): (pc'=1046633) + (1-(9/53)): (pc'=1046636);
[] (pc=1046624) -> (28/84): (pc'=1046625) + (1-(28/84)): (pc'=1046632);
[] (pc=1046608) -> (10/14): (pc'=1046609) + (1-(10/14)): (pc'=1046624);
[] (pc=0) -> (10/11): (pc'=1046577) + (1-(10/11)): (pc'=1046608);
[] (pc=1) -> (pc'=1046639);
[] (pc=1046639) -> (pc'=1046639);

endmodule

rewards "post"

pc=1 : x;

endrewards

