mdp

module TestMDP

pc : [0..1046576] init 0;
x : [0..100] init 0;

[] (pc=1046549) -> (pc'=1) & (x'=19);
[] (pc=1046550) -> (pc'=1) & (x'=35);
[] (pc=1046548) -> (3/54): (pc'=1046549) + (1-(3/54)): (pc'=1046550);
[] (pc=1046552) -> (pc'=1) & (x'=77);
[] (pc=1046553) -> (pc'=1) & (x'=65);
[] (pc=1046551) -> (12/60): (pc'=1046552) + (1-(12/60)): (pc'=1046553);
[] (pc=1046547) -> (22/76): (pc'=1046548) + (1-(22/76)): (pc'=1046551);
[] (pc=1046556) -> (pc'=1) & (x'=5);
[] (pc=1046557) -> (pc'=1) & (x'=59);
[] (pc=1046555) -> (18/43): (pc'=1046556) + (1-(18/43)): (pc'=1046557);
[] (pc=1046559) -> (pc'=1) & (x'=36);
[] (pc=1046560) -> (pc'=1) & (x'=18);
[] (pc=1046558) -> (19/81): (pc'=1046559) + (1-(19/81)): (pc'=1046560);
[] (pc=1046554) -> (23/72): (pc'=1046555) + (1-(23/72)): (pc'=1046558);
[] (pc=1046546) -> (34/64): (pc'=1046547) + (1-(34/64)): (pc'=1046554);
[] (pc=1046564) -> (pc'=1) & (x'=64);
[] (pc=1046565) -> (pc'=1) & (x'=60);
[] (pc=1046563) -> (44/83): (pc'=1046564) + (1-(44/83)): (pc'=1046565);
[] (pc=1046567) -> (pc'=1) & (x'=22);
[] (pc=1046568) -> (pc'=1) & (x'=81);
[] (pc=1046566) -> (79/93): (pc'=1046567) + (1-(79/93)): (pc'=1046568);
[] (pc=1046562) -> (13/26): (pc'=1046563) + (1-(13/26)): (pc'=1046566);
[] (pc=1046571) -> (pc'=1) & (x'=44);
[] (pc=1046572) -> (pc'=1) & (x'=31);
[] (pc=1046570) -> (52/80): (pc'=1046571) + (1-(52/80)): (pc'=1046572);
[] (pc=1046574) -> (pc'=1) & (x'=41);
[] (pc=1046575) -> (pc'=1) & (x'=8);
[] (pc=1046573) -> (62/92): (pc'=1046574) + (1-(62/92)): (pc'=1046575);
[] (pc=1046569) -> (58/86): (pc'=1046570) + (1-(58/86)): (pc'=1046573);
[] (pc=1046561) -> (26/76): (pc'=1046562) + (1-(26/76)): (pc'=1046569);
[] (pc=0) -> (7/24): (pc'=1046546) + (1-(7/24)): (pc'=1046561);
[] (pc=1) -> (pc'=1046576);
[] (pc=1046576) -> (pc'=1046576);

endmodule

rewards "post"

pc=1 : x;

endrewards

