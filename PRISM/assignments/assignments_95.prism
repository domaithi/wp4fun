mdp

module TestMDP

pc : [0..45067] init 0;
x : [0..9500] init 0;
n : [0..95] init 0;

[] (pc=0) -> (pc'=45066) & (x'=0);
[] (pc=45066) -> (pc'=45065) & (n'=95);
[] (pc=45065) -> (pc'=45064) & (x'=(x+15));
[] (pc=45064) -> (pc'=45063) & (x'=(x+67));
[] (pc=45063) -> (pc'=45062) & (x'=(x+96));
[] (pc=45062) -> (pc'=45061) & (x'=(x+68));
[] (pc=45061) -> (pc'=45060) & (x'=(x+37));
[] (pc=45060) -> (pc'=45059) & (x'=(x+47));
[] (pc=45059) -> (pc'=45058) & (x'=(x+36));
[] (pc=45058) -> (pc'=45057) & (x'=(x+80));
[] (pc=45057) -> (pc'=45056) & (x'=(x+19));
[] (pc=45056) -> (pc'=45055) & (x'=(x+93));
[] (pc=45055) -> (pc'=45054) & (x'=(x+35));
[] (pc=45054) -> (pc'=45053) & (x'=(x+42));
[] (pc=45053) -> (pc'=45052) & (x'=(x+39));
[] (pc=45052) -> (pc'=45051) & (x'=(x+37));
[] (pc=45051) -> (pc'=45050) & (x'=(x+96));
[] (pc=45050) -> (pc'=45049) & (x'=(x+78));
[] (pc=45049) -> (pc'=45048) & (x'=(x+33));
[] (pc=45048) -> (pc'=45047) & (x'=(x+53));
[] (pc=45047) -> (pc'=45046) & (x'=(x+31));
[] (pc=45046) -> (pc'=45045) & (x'=(x+46));
[] (pc=45045) -> (pc'=45044) & (x'=(x+2));
[] (pc=45044) -> (pc'=45043) & (x'=(x+47));
[] (pc=45043) -> (pc'=45042) & (x'=(x+30));
[] (pc=45042) -> (pc'=45041) & (x'=(x+30));
[] (pc=45041) -> (pc'=45040) & (x'=(x+35));
[] (pc=45040) -> (pc'=45039) & (x'=(x+64));
[] (pc=45039) -> (pc'=45038) & (x'=(x+35));
[] (pc=45038) -> (pc'=45037) & (x'=(x+57));
[] (pc=45037) -> (pc'=45036) & (x'=(x+29));
[] (pc=45036) -> (pc'=45035) & (x'=(x+5));
[] (pc=45035) -> (pc'=45034) & (x'=(x+66));
[] (pc=45034) -> (pc'=45033) & (x'=(x+68));
[] (pc=45033) -> (pc'=45032) & (x'=(x+39));
[] (pc=45032) -> (pc'=45031) & (x'=(x+5));
[] (pc=45031) -> (pc'=45030) & (x'=(x+45));
[] (pc=45030) -> (pc'=45029) & (x'=(x+15));
[] (pc=45029) -> (pc'=45028) & (x'=(x+64));
[] (pc=45028) -> (pc'=45027) & (x'=(x+62));
[] (pc=45027) -> (pc'=45026) & (x'=(x+72));
[] (pc=45026) -> (pc'=45025) & (x'=(x+85));
[] (pc=45025) -> (pc'=45024) & (x'=(x+95));
[] (pc=45024) -> (pc'=45023) & (x'=(x+76));
[] (pc=45023) -> (pc'=45022) & (x'=(x+35));
[] (pc=45022) -> (pc'=45021) & (x'=(x+16));
[] (pc=45021) -> (pc'=45020) & (x'=(x+88));
[] (pc=45020) -> (pc'=45019) & (x'=(x+55));
[] (pc=45019) -> (pc'=45018) & (x'=(x+76));
[] (pc=45018) -> (pc'=45017) & (x'=(x+32));
[] (pc=45017) -> (pc'=45016) & (x'=(x+88));
[] (pc=45016) -> (pc'=45015) & (x'=(x+57));
[] (pc=45015) -> (pc'=45014) & (x'=(x+58));
[] (pc=45014) -> (pc'=45013) & (x'=(x+39));
[] (pc=45013) -> (pc'=45012) & (x'=(x+33));
[] (pc=45012) -> (pc'=45011) & (x'=(x+6));
[] (pc=45011) -> (pc'=45010) & (x'=(x+28));
[] (pc=45010) -> (pc'=45009) & (x'=(x+77));
[] (pc=45009) -> (pc'=45008) & (x'=(x+1));
[] (pc=45008) -> (pc'=45007) & (x'=(x+55));
[] (pc=45007) -> (pc'=45006) & (x'=(x+69));
[] (pc=45006) -> (pc'=45005) & (x'=(x+92));
[] (pc=45005) -> (pc'=45004) & (x'=(x+42));
[] (pc=45004) -> (pc'=45003) & (x'=(x+44));
[] (pc=45003) -> (pc'=45002) & (x'=(x+83));
[] (pc=45002) -> (pc'=45001) & (x'=(x+28));
[] (pc=45001) -> (pc'=45000) & (x'=(x+87));
[] (pc=45000) -> (pc'=44999) & (x'=(x+65));
[] (pc=44999) -> (pc'=44998) & (x'=(x+33));
[] (pc=44998) -> (pc'=44997) & (x'=(x+68));
[] (pc=44997) -> (pc'=44996) & (x'=(x+96));
[] (pc=44996) -> (pc'=44995) & (x'=(x+63));
[] (pc=44995) -> (pc'=44994) & (x'=(x+30));
[] (pc=44994) -> (pc'=44993) & (x'=(x+31));
[] (pc=44993) -> (pc'=44992) & (x'=(x+83));
[] (pc=44992) -> (pc'=44991) & (x'=(x+1));
[] (pc=44991) -> (pc'=44990) & (x'=(x+91));
[] (pc=44990) -> (pc'=44989) & (x'=(x+42));
[] (pc=44989) -> (pc'=44988) & (x'=(x+92));
[] (pc=44988) -> (pc'=44987) & (x'=(x+9));
[] (pc=44987) -> (pc'=44986) & (x'=(x+45));
[] (pc=44986) -> (pc'=44985) & (x'=(x+59));
[] (pc=44985) -> (pc'=44984) & (x'=(x+40));
[] (pc=44984) -> (pc'=44983) & (x'=(x+30));
[] (pc=44983) -> (pc'=44982) & (x'=(x+93));
[] (pc=44982) -> (pc'=44981) & (x'=(x+23));
[] (pc=44981) -> (pc'=44980) & (x'=(x+32));
[] (pc=44980) -> (pc'=44979) & (x'=(x+78));
[] (pc=44979) -> (pc'=44978) & (x'=(x+38));
[] (pc=44978) -> (pc'=44977) & (x'=(x+98));
[] (pc=44977) -> (pc'=44976) & (x'=(x+92));
[] (pc=44976) -> (pc'=44975) & (x'=(x+66));
[] (pc=44975) -> (pc'=44974) & (x'=(x+89));
[] (pc=44974) -> (pc'=44973) & (x'=(x+42));
[] (pc=44973) -> (pc'=44972) & (x'=(x+56));
[] (pc=44972) -> (pc'=44971) & (x'=(x+84));
[] (pc=44971) -> (pc'=1) & (x'=(x+62));
[] (pc=1) -> (pc'=45067);
[] (pc=45067) -> (pc'=45067);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

