mdp

module TestMDP

pc : [0..2767] init 0;
x : [0..12300] init 0;
n : [0..123] init 0;

[] (pc=0) -> (pc'=2766) & (x'=0);
[] (pc=2766) -> (pc'=2765) & (n'=123);
[] (pc=2765) -> (pc'=2764) & (x'=(x+100));
[] (pc=2764) -> (pc'=2763) & (x'=(x+78));
[] (pc=2763) -> (pc'=2762) & (x'=(x+90));
[] (pc=2762) -> (pc'=2761) & (x'=(x+46));
[] (pc=2761) -> (pc'=2760) & (x'=(x+99));
[] (pc=2760) -> (pc'=2759) & (x'=(x+69));
[] (pc=2759) -> (pc'=2758) & (x'=(x+7));
[] (pc=2758) -> (pc'=2757) & (x'=(x+5));
[] (pc=2757) -> (pc'=2756) & (x'=(x+92));
[] (pc=2756) -> (pc'=2755) & (x'=(x+4));
[] (pc=2755) -> (pc'=2754) & (x'=(x+30));
[] (pc=2754) -> (pc'=2753) & (x'=(x+70));
[] (pc=2753) -> (pc'=2752) & (x'=(x+65));
[] (pc=2752) -> (pc'=2751) & (x'=(x+86));
[] (pc=2751) -> (pc'=2750) & (x'=(x+32));
[] (pc=2750) -> (pc'=2749) & (x'=(x+41));
[] (pc=2749) -> (pc'=2748) & (x'=(x+82));
[] (pc=2748) -> (pc'=2747) & (x'=(x+20));
[] (pc=2747) -> (pc'=2746) & (x'=(x+87));
[] (pc=2746) -> (pc'=2745) & (x'=(x+77));
[] (pc=2745) -> (pc'=2744) & (x'=(x+52));
[] (pc=2744) -> (pc'=2743) & (x'=(x+20));
[] (pc=2743) -> (pc'=2742) & (x'=(x+75));
[] (pc=2742) -> (pc'=2741) & (x'=(x+59));
[] (pc=2741) -> (pc'=2740) & (x'=(x+34));
[] (pc=2740) -> (pc'=2739) & (x'=(x+80));
[] (pc=2739) -> (pc'=2738) & (x'=(x+64));
[] (pc=2738) -> (pc'=2737) & (x'=(x+42));
[] (pc=2737) -> (pc'=2736) & (x'=(x+46));
[] (pc=2736) -> (pc'=2735) & (x'=(x+96));
[] (pc=2735) -> (pc'=2734) & (x'=(x+95));
[] (pc=2734) -> (pc'=2733) & (x'=(x+27));
[] (pc=2733) -> (pc'=2732) & (x'=(x+45));
[] (pc=2732) -> (pc'=2731) & (x'=(x+10));
[] (pc=2731) -> (pc'=2730) & (x'=(x+38));
[] (pc=2730) -> (pc'=2729) & (x'=(x+27));
[] (pc=2729) -> (pc'=2728) & (x'=(x+41));
[] (pc=2728) -> (pc'=2727) & (x'=(x+78));
[] (pc=2727) -> (pc'=2726) & (x'=(x+26));
[] (pc=2726) -> (pc'=2725) & (x'=(x+25));
[] (pc=2725) -> (pc'=2724) & (x'=(x+5));
[] (pc=2724) -> (pc'=2723) & (x'=(x+41));
[] (pc=2723) -> (pc'=2722) & (x'=(x+26));
[] (pc=2722) -> (pc'=2721) & (x'=(x+16));
[] (pc=2721) -> (pc'=2720) & (x'=(x+1));
[] (pc=2720) -> (pc'=2719) & (x'=(x+95));
[] (pc=2719) -> (pc'=2718) & (x'=(x+27));
[] (pc=2718) -> (pc'=2717) & (x'=(x+94));
[] (pc=2717) -> (pc'=2716) & (x'=(x+51));
[] (pc=2716) -> (pc'=2715) & (x'=(x+89));
[] (pc=2715) -> (pc'=2714) & (x'=(x+80));
[] (pc=2714) -> (pc'=2713) & (x'=(x+57));
[] (pc=2713) -> (pc'=2712) & (x'=(x+91));
[] (pc=2712) -> (pc'=2711) & (x'=(x+83));
[] (pc=2711) -> (pc'=2710) & (x'=(x+75));
[] (pc=2710) -> (pc'=2709) & (x'=(x+9));
[] (pc=2709) -> (pc'=2708) & (x'=(x+80));
[] (pc=2708) -> (pc'=2707) & (x'=(x+64));
[] (pc=2707) -> (pc'=2706) & (x'=(x+37));
[] (pc=2706) -> (pc'=2705) & (x'=(x+73));
[] (pc=2705) -> (pc'=2704) & (x'=(x+71));
[] (pc=2704) -> (pc'=2703) & (x'=(x+36));
[] (pc=2703) -> (pc'=2702) & (x'=(x+52));
[] (pc=2702) -> (pc'=2701) & (x'=(x+43));
[] (pc=2701) -> (pc'=2700) & (x'=(x+9));
[] (pc=2700) -> (pc'=2699) & (x'=(x+78));
[] (pc=2699) -> (pc'=2698) & (x'=(x+15));
[] (pc=2698) -> (pc'=2697) & (x'=(x+64));
[] (pc=2697) -> (pc'=2696) & (x'=(x+14));
[] (pc=2696) -> (pc'=2695) & (x'=(x+36));
[] (pc=2695) -> (pc'=2694) & (x'=(x+4));
[] (pc=2694) -> (pc'=2693) & (x'=(x+39));
[] (pc=2693) -> (pc'=2692) & (x'=(x+90));
[] (pc=2692) -> (pc'=2691) & (x'=(x+43));
[] (pc=2691) -> (pc'=2690) & (x'=(x+17));
[] (pc=2690) -> (pc'=2689) & (x'=(x+34));
[] (pc=2689) -> (pc'=2688) & (x'=(x+95));
[] (pc=2688) -> (pc'=2687) & (x'=(x+35));
[] (pc=2687) -> (pc'=2686) & (x'=(x+69));
[] (pc=2686) -> (pc'=2685) & (x'=(x+69));
[] (pc=2685) -> (pc'=2684) & (x'=(x+32));
[] (pc=2684) -> (pc'=2683) & (x'=(x+81));
[] (pc=2683) -> (pc'=2682) & (x'=(x+3));
[] (pc=2682) -> (pc'=2681) & (x'=(x+28));
[] (pc=2681) -> (pc'=2680) & (x'=(x+46));
[] (pc=2680) -> (pc'=2679) & (x'=(x+24));
[] (pc=2679) -> (pc'=2678) & (x'=(x+17));
[] (pc=2678) -> (pc'=2677) & (x'=(x+59));
[] (pc=2677) -> (pc'=2676) & (x'=(x+91));
[] (pc=2676) -> (pc'=2675) & (x'=(x+45));
[] (pc=2675) -> (pc'=2674) & (x'=(x+83));
[] (pc=2674) -> (pc'=2673) & (x'=(x+85));
[] (pc=2673) -> (pc'=2672) & (x'=(x+72));
[] (pc=2672) -> (pc'=2671) & (x'=(x+96));
[] (pc=2671) -> (pc'=2670) & (x'=(x+26));
[] (pc=2670) -> (pc'=2669) & (x'=(x+23));
[] (pc=2669) -> (pc'=2668) & (x'=(x+72));
[] (pc=2668) -> (pc'=2667) & (x'=(x+42));
[] (pc=2667) -> (pc'=2666) & (x'=(x+60));
[] (pc=2666) -> (pc'=2665) & (x'=(x+44));
[] (pc=2665) -> (pc'=2664) & (x'=(x+9));
[] (pc=2664) -> (pc'=2663) & (x'=(x+37));
[] (pc=2663) -> (pc'=2662) & (x'=(x+37));
[] (pc=2662) -> (pc'=2661) & (x'=(x+56));
[] (pc=2661) -> (pc'=2660) & (x'=(x+92));
[] (pc=2660) -> (pc'=2659) & (x'=(x+85));
[] (pc=2659) -> (pc'=2658) & (x'=(x+96));
[] (pc=2658) -> (pc'=2657) & (x'=(x+96));
[] (pc=2657) -> (pc'=2656) & (x'=(x+84));
[] (pc=2656) -> (pc'=2655) & (x'=(x+73));
[] (pc=2655) -> (pc'=2654) & (x'=(x+12));
[] (pc=2654) -> (pc'=2653) & (x'=(x+30));
[] (pc=2653) -> (pc'=2652) & (x'=(x+18));
[] (pc=2652) -> (pc'=2651) & (x'=(x+95));
[] (pc=2651) -> (pc'=2650) & (x'=(x+42));
[] (pc=2650) -> (pc'=2649) & (x'=(x+45));
[] (pc=2649) -> (pc'=2648) & (x'=(x+11));
[] (pc=2648) -> (pc'=2647) & (x'=(x+76));
[] (pc=2647) -> (pc'=2646) & (x'=(x+94));
[] (pc=2646) -> (pc'=2645) & (x'=(x+66));
[] (pc=2645) -> (pc'=2644) & (x'=(x+60));
[] (pc=2644) -> (pc'=2643) & (x'=(x+59));
[] (pc=2643) -> (pc'=1) & (x'=(x+17));
[] (pc=1) -> (pc'=2767);
[] (pc=2767) -> (pc'=2767);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

