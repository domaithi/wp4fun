mdp

module TestMDP

pc : [0..42046] init 0;
x : [0..5700] init 0;
n : [0..57] init 0;

[] (pc=0) -> (pc'=42045) & (x'=0);
[] (pc=42045) -> (pc'=42044) & (n'=57);
[] (pc=42044) -> (pc'=42043) & (x'=(x+13));
[] (pc=42043) -> (pc'=42042) & (x'=(x+98));
[] (pc=42042) -> (pc'=42041) & (x'=(x+74));
[] (pc=42041) -> (pc'=42040) & (x'=(x+96));
[] (pc=42040) -> (pc'=42039) & (x'=(x+78));
[] (pc=42039) -> (pc'=42038) & (x'=(x+99));
[] (pc=42038) -> (pc'=42037) & (x'=(x+80));
[] (pc=42037) -> (pc'=42036) & (x'=(x+20));
[] (pc=42036) -> (pc'=42035) & (x'=(x+60));
[] (pc=42035) -> (pc'=42034) & (x'=(x+55));
[] (pc=42034) -> (pc'=42033) & (x'=(x+56));
[] (pc=42033) -> (pc'=42032) & (x'=(x+66));
[] (pc=42032) -> (pc'=42031) & (x'=(x+98));
[] (pc=42031) -> (pc'=42030) & (x'=(x+79));
[] (pc=42030) -> (pc'=42029) & (x'=(x+65));
[] (pc=42029) -> (pc'=42028) & (x'=(x+51));
[] (pc=42028) -> (pc'=42027) & (x'=(x+49));
[] (pc=42027) -> (pc'=42026) & (x'=(x+2));
[] (pc=42026) -> (pc'=42025) & (x'=(x+1));
[] (pc=42025) -> (pc'=42024) & (x'=(x+9));
[] (pc=42024) -> (pc'=42023) & (x'=(x+65));
[] (pc=42023) -> (pc'=42022) & (x'=(x+9));
[] (pc=42022) -> (pc'=42021) & (x'=(x+93));
[] (pc=42021) -> (pc'=42020) & (x'=(x+34));
[] (pc=42020) -> (pc'=42019) & (x'=(x+11));
[] (pc=42019) -> (pc'=42018) & (x'=(x+27));
[] (pc=42018) -> (pc'=42017) & (x'=(x+51));
[] (pc=42017) -> (pc'=42016) & (x'=(x+91));
[] (pc=42016) -> (pc'=42015) & (x'=(x+11));
[] (pc=42015) -> (pc'=42014) & (x'=(x+51));
[] (pc=42014) -> (pc'=42013) & (x'=(x+5));
[] (pc=42013) -> (pc'=42012) & (x'=(x+69));
[] (pc=42012) -> (pc'=42011) & (x'=(x+94));
[] (pc=42011) -> (pc'=42010) & (x'=(x+98));
[] (pc=42010) -> (pc'=42009) & (x'=(x+95));
[] (pc=42009) -> (pc'=42008) & (x'=(x+43));
[] (pc=42008) -> (pc'=42007) & (x'=(x+24));
[] (pc=42007) -> (pc'=42006) & (x'=(x+56));
[] (pc=42006) -> (pc'=42005) & (x'=(x+18));
[] (pc=42005) -> (pc'=42004) & (x'=(x+43));
[] (pc=42004) -> (pc'=42003) & (x'=(x+27));
[] (pc=42003) -> (pc'=42002) & (x'=(x+53));
[] (pc=42002) -> (pc'=42001) & (x'=(x+19));
[] (pc=42001) -> (pc'=42000) & (x'=(x+64));
[] (pc=42000) -> (pc'=41999) & (x'=(x+85));
[] (pc=41999) -> (pc'=41998) & (x'=(x+42));
[] (pc=41998) -> (pc'=41997) & (x'=(x+62));
[] (pc=41997) -> (pc'=41996) & (x'=(x+73));
[] (pc=41996) -> (pc'=41995) & (x'=(x+33));
[] (pc=41995) -> (pc'=41994) & (x'=(x+52));
[] (pc=41994) -> (pc'=41993) & (x'=(x+30));
[] (pc=41993) -> (pc'=41992) & (x'=(x+33));
[] (pc=41992) -> (pc'=41991) & (x'=(x+72));
[] (pc=41991) -> (pc'=41990) & (x'=(x+55));
[] (pc=41990) -> (pc'=41989) & (x'=(x+27));
[] (pc=41989) -> (pc'=41988) & (x'=(x+63));
[] (pc=41988) -> (pc'=1) & (x'=(x+29));
[] (pc=1) -> (pc'=42046);
[] (pc=42046) -> (pc'=42046);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

