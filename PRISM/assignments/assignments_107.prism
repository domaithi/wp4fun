mdp

module TestMDP

pc : [0..860] init 0;
x : [0..10700] init 0;
n : [0..107] init 0;

[] (pc=0) -> (pc'=859) & (x'=0);
[] (pc=859) -> (pc'=858) & (n'=107);
[] (pc=858) -> (pc'=857) & (x'=(x+40));
[] (pc=857) -> (pc'=856) & (x'=(x+79));
[] (pc=856) -> (pc'=855) & (x'=(x+48));
[] (pc=855) -> (pc'=854) & (x'=(x+86));
[] (pc=854) -> (pc'=853) & (x'=(x+79));
[] (pc=853) -> (pc'=852) & (x'=(x+72));
[] (pc=852) -> (pc'=851) & (x'=(x+44));
[] (pc=851) -> (pc'=850) & (x'=(x+31));
[] (pc=850) -> (pc'=849) & (x'=(x+2));
[] (pc=849) -> (pc'=848) & (x'=(x+39));
[] (pc=848) -> (pc'=847) & (x'=(x+1));
[] (pc=847) -> (pc'=846) & (x'=(x+12));
[] (pc=846) -> (pc'=845) & (x'=(x+35));
[] (pc=845) -> (pc'=844) & (x'=(x+61));
[] (pc=844) -> (pc'=843) & (x'=(x+98));
[] (pc=843) -> (pc'=842) & (x'=(x+51));
[] (pc=842) -> (pc'=841) & (x'=(x+40));
[] (pc=841) -> (pc'=840) & (x'=(x+40));
[] (pc=840) -> (pc'=839) & (x'=(x+71));
[] (pc=839) -> (pc'=838) & (x'=(x+4));
[] (pc=838) -> (pc'=837) & (x'=(x+62));
[] (pc=837) -> (pc'=836) & (x'=(x+55));
[] (pc=836) -> (pc'=835) & (x'=(x+40));
[] (pc=835) -> (pc'=834) & (x'=(x+50));
[] (pc=834) -> (pc'=833) & (x'=(x+39));
[] (pc=833) -> (pc'=832) & (x'=(x+46));
[] (pc=832) -> (pc'=831) & (x'=(x+12));
[] (pc=831) -> (pc'=830) & (x'=(x+85));
[] (pc=830) -> (pc'=829) & (x'=(x+91));
[] (pc=829) -> (pc'=828) & (x'=(x+14));
[] (pc=828) -> (pc'=827) & (x'=(x+71));
[] (pc=827) -> (pc'=826) & (x'=(x+61));
[] (pc=826) -> (pc'=825) & (x'=(x+29));
[] (pc=825) -> (pc'=824) & (x'=(x+6));
[] (pc=824) -> (pc'=823) & (x'=(x+51));
[] (pc=823) -> (pc'=822) & (x'=(x+89));
[] (pc=822) -> (pc'=821) & (x'=(x+32));
[] (pc=821) -> (pc'=820) & (x'=(x+92));
[] (pc=820) -> (pc'=819) & (x'=(x+3));
[] (pc=819) -> (pc'=818) & (x'=(x+61));
[] (pc=818) -> (pc'=817) & (x'=(x+12));
[] (pc=817) -> (pc'=816) & (x'=(x+23));
[] (pc=816) -> (pc'=815) & (x'=(x+61));
[] (pc=815) -> (pc'=814) & (x'=(x+55));
[] (pc=814) -> (pc'=813) & (x'=(x+14));
[] (pc=813) -> (pc'=812) & (x'=(x+44));
[] (pc=812) -> (pc'=811) & (x'=(x+96));
[] (pc=811) -> (pc'=810) & (x'=(x+42));
[] (pc=810) -> (pc'=809) & (x'=(x+24));
[] (pc=809) -> (pc'=808) & (x'=(x+22));
[] (pc=808) -> (pc'=807) & (x'=(x+92));
[] (pc=807) -> (pc'=806) & (x'=(x+20));
[] (pc=806) -> (pc'=805) & (x'=(x+89));
[] (pc=805) -> (pc'=804) & (x'=(x+71));
[] (pc=804) -> (pc'=803) & (x'=(x+28));
[] (pc=803) -> (pc'=802) & (x'=(x+95));
[] (pc=802) -> (pc'=801) & (x'=(x+39));
[] (pc=801) -> (pc'=800) & (x'=(x+81));
[] (pc=800) -> (pc'=799) & (x'=(x+64));
[] (pc=799) -> (pc'=798) & (x'=(x+74));
[] (pc=798) -> (pc'=797) & (x'=(x+13));
[] (pc=797) -> (pc'=796) & (x'=(x+81));
[] (pc=796) -> (pc'=795) & (x'=(x+79));
[] (pc=795) -> (pc'=794) & (x'=(x+20));
[] (pc=794) -> (pc'=793) & (x'=(x+32));
[] (pc=793) -> (pc'=792) & (x'=(x+15));
[] (pc=792) -> (pc'=791) & (x'=(x+100));
[] (pc=791) -> (pc'=790) & (x'=(x+3));
[] (pc=790) -> (pc'=789) & (x'=(x+9));
[] (pc=789) -> (pc'=788) & (x'=(x+64));
[] (pc=788) -> (pc'=787) & (x'=(x+34));
[] (pc=787) -> (pc'=786) & (x'=(x+93));
[] (pc=786) -> (pc'=785) & (x'=(x+55));
[] (pc=785) -> (pc'=784) & (x'=(x+5));
[] (pc=784) -> (pc'=783) & (x'=(x+70));
[] (pc=783) -> (pc'=782) & (x'=(x+58));
[] (pc=782) -> (pc'=781) & (x'=(x+14));
[] (pc=781) -> (pc'=780) & (x'=(x+80));
[] (pc=780) -> (pc'=779) & (x'=(x+45));
[] (pc=779) -> (pc'=778) & (x'=(x+17));
[] (pc=778) -> (pc'=777) & (x'=(x+66));
[] (pc=777) -> (pc'=776) & (x'=(x+55));
[] (pc=776) -> (pc'=775) & (x'=(x+60));
[] (pc=775) -> (pc'=774) & (x'=(x+60));
[] (pc=774) -> (pc'=773) & (x'=(x+2));
[] (pc=773) -> (pc'=772) & (x'=(x+10));
[] (pc=772) -> (pc'=771) & (x'=(x+75));
[] (pc=771) -> (pc'=770) & (x'=(x+30));
[] (pc=770) -> (pc'=769) & (x'=(x+52));
[] (pc=769) -> (pc'=768) & (x'=(x+24));
[] (pc=768) -> (pc'=767) & (x'=(x+62));
[] (pc=767) -> (pc'=766) & (x'=(x+47));
[] (pc=766) -> (pc'=765) & (x'=(x+66));
[] (pc=765) -> (pc'=764) & (x'=(x+9));
[] (pc=764) -> (pc'=763) & (x'=(x+73));
[] (pc=763) -> (pc'=762) & (x'=(x+61));
[] (pc=762) -> (pc'=761) & (x'=(x+59));
[] (pc=761) -> (pc'=760) & (x'=(x+24));
[] (pc=760) -> (pc'=759) & (x'=(x+54));
[] (pc=759) -> (pc'=758) & (x'=(x+8));
[] (pc=758) -> (pc'=757) & (x'=(x+22));
[] (pc=757) -> (pc'=756) & (x'=(x+33));
[] (pc=756) -> (pc'=755) & (x'=(x+46));
[] (pc=755) -> (pc'=754) & (x'=(x+20));
[] (pc=754) -> (pc'=753) & (x'=(x+40));
[] (pc=753) -> (pc'=752) & (x'=(x+51));
[] (pc=752) -> (pc'=1) & (x'=(x+1));
[] (pc=1) -> (pc'=860);
[] (pc=860) -> (pc'=860);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

