mdp

module TestMDP

pc : [0..10202] init 0;
x : [0..17200] init 0;
n : [0..172] init 0;

[] (pc=0) -> (pc'=10201) & (x'=0);
[] (pc=10201) -> (pc'=10200) & (n'=172);
[] (pc=10200) -> (pc'=10199) & (x'=(x+12));
[] (pc=10199) -> (pc'=10198) & (x'=(x+94));
[] (pc=10198) -> (pc'=10197) & (x'=(x+53));
[] (pc=10197) -> (pc'=10196) & (x'=(x+36));
[] (pc=10196) -> (pc'=10195) & (x'=(x+65));
[] (pc=10195) -> (pc'=10194) & (x'=(x+73));
[] (pc=10194) -> (pc'=10193) & (x'=(x+38));
[] (pc=10193) -> (pc'=10192) & (x'=(x+18));
[] (pc=10192) -> (pc'=10191) & (x'=(x+20));
[] (pc=10191) -> (pc'=10190) & (x'=(x+69));
[] (pc=10190) -> (pc'=10189) & (x'=(x+37));
[] (pc=10189) -> (pc'=10188) & (x'=(x+90));
[] (pc=10188) -> (pc'=10187) & (x'=(x+51));
[] (pc=10187) -> (pc'=10186) & (x'=(x+9));
[] (pc=10186) -> (pc'=10185) & (x'=(x+43));
[] (pc=10185) -> (pc'=10184) & (x'=(x+42));
[] (pc=10184) -> (pc'=10183) & (x'=(x+55));
[] (pc=10183) -> (pc'=10182) & (x'=(x+23));
[] (pc=10182) -> (pc'=10181) & (x'=(x+39));
[] (pc=10181) -> (pc'=10180) & (x'=(x+100));
[] (pc=10180) -> (pc'=10179) & (x'=(x+75));
[] (pc=10179) -> (pc'=10178) & (x'=(x+78));
[] (pc=10178) -> (pc'=10177) & (x'=(x+41));
[] (pc=10177) -> (pc'=10176) & (x'=(x+68));
[] (pc=10176) -> (pc'=10175) & (x'=(x+42));
[] (pc=10175) -> (pc'=10174) & (x'=(x+13));
[] (pc=10174) -> (pc'=10173) & (x'=(x+58));
[] (pc=10173) -> (pc'=10172) & (x'=(x+75));
[] (pc=10172) -> (pc'=10171) & (x'=(x+44));
[] (pc=10171) -> (pc'=10170) & (x'=(x+36));
[] (pc=10170) -> (pc'=10169) & (x'=(x+5));
[] (pc=10169) -> (pc'=10168) & (x'=(x+70));
[] (pc=10168) -> (pc'=10167) & (x'=(x+21));
[] (pc=10167) -> (pc'=10166) & (x'=(x+14));
[] (pc=10166) -> (pc'=10165) & (x'=(x+36));
[] (pc=10165) -> (pc'=10164) & (x'=(x+95));
[] (pc=10164) -> (pc'=10163) & (x'=(x+55));
[] (pc=10163) -> (pc'=10162) & (x'=(x+27));
[] (pc=10162) -> (pc'=10161) & (x'=(x+7));
[] (pc=10161) -> (pc'=10160) & (x'=(x+45));
[] (pc=10160) -> (pc'=10159) & (x'=(x+90));
[] (pc=10159) -> (pc'=10158) & (x'=(x+68));
[] (pc=10158) -> (pc'=10157) & (x'=(x+52));
[] (pc=10157) -> (pc'=10156) & (x'=(x+94));
[] (pc=10156) -> (pc'=10155) & (x'=(x+95));
[] (pc=10155) -> (pc'=10154) & (x'=(x+79));
[] (pc=10154) -> (pc'=10153) & (x'=(x+97));
[] (pc=10153) -> (pc'=10152) & (x'=(x+25));
[] (pc=10152) -> (pc'=10151) & (x'=(x+43));
[] (pc=10151) -> (pc'=10150) & (x'=(x+21));
[] (pc=10150) -> (pc'=10149) & (x'=(x+27));
[] (pc=10149) -> (pc'=10148) & (x'=(x+45));
[] (pc=10148) -> (pc'=10147) & (x'=(x+8));
[] (pc=10147) -> (pc'=10146) & (x'=(x+53));
[] (pc=10146) -> (pc'=10145) & (x'=(x+25));
[] (pc=10145) -> (pc'=10144) & (x'=(x+25));
[] (pc=10144) -> (pc'=10143) & (x'=(x+82));
[] (pc=10143) -> (pc'=10142) & (x'=(x+93));
[] (pc=10142) -> (pc'=10141) & (x'=(x+48));
[] (pc=10141) -> (pc'=10140) & (x'=(x+38));
[] (pc=10140) -> (pc'=10139) & (x'=(x+49));
[] (pc=10139) -> (pc'=10138) & (x'=(x+61));
[] (pc=10138) -> (pc'=10137) & (x'=(x+2));
[] (pc=10137) -> (pc'=10136) & (x'=(x+29));
[] (pc=10136) -> (pc'=10135) & (x'=(x+99));
[] (pc=10135) -> (pc'=10134) & (x'=(x+74));
[] (pc=10134) -> (pc'=10133) & (x'=(x+39));
[] (pc=10133) -> (pc'=10132) & (x'=(x+34));
[] (pc=10132) -> (pc'=10131) & (x'=(x+2));
[] (pc=10131) -> (pc'=10130) & (x'=(x+32));
[] (pc=10130) -> (pc'=10129) & (x'=(x+18));
[] (pc=10129) -> (pc'=10128) & (x'=(x+87));
[] (pc=10128) -> (pc'=10127) & (x'=(x+58));
[] (pc=10127) -> (pc'=10126) & (x'=(x+3));
[] (pc=10126) -> (pc'=10125) & (x'=(x+39));
[] (pc=10125) -> (pc'=10124) & (x'=(x+33));
[] (pc=10124) -> (pc'=10123) & (x'=(x+67));
[] (pc=10123) -> (pc'=10122) & (x'=(x+66));
[] (pc=10122) -> (pc'=10121) & (x'=(x+96));
[] (pc=10121) -> (pc'=10120) & (x'=(x+17));
[] (pc=10120) -> (pc'=10119) & (x'=(x+66));
[] (pc=10119) -> (pc'=10118) & (x'=(x+69));
[] (pc=10118) -> (pc'=10117) & (x'=(x+77));
[] (pc=10117) -> (pc'=10116) & (x'=(x+3));
[] (pc=10116) -> (pc'=10115) & (x'=(x+72));
[] (pc=10115) -> (pc'=10114) & (x'=(x+76));
[] (pc=10114) -> (pc'=10113) & (x'=(x+2));
[] (pc=10113) -> (pc'=10112) & (x'=(x+74));
[] (pc=10112) -> (pc'=10111) & (x'=(x+63));
[] (pc=10111) -> (pc'=10110) & (x'=(x+22));
[] (pc=10110) -> (pc'=10109) & (x'=(x+82));
[] (pc=10109) -> (pc'=10108) & (x'=(x+28));
[] (pc=10108) -> (pc'=10107) & (x'=(x+25));
[] (pc=10107) -> (pc'=10106) & (x'=(x+93));
[] (pc=10106) -> (pc'=10105) & (x'=(x+30));
[] (pc=10105) -> (pc'=10104) & (x'=(x+20));
[] (pc=10104) -> (pc'=10103) & (x'=(x+45));
[] (pc=10103) -> (pc'=10102) & (x'=(x+30));
[] (pc=10102) -> (pc'=10101) & (x'=(x+59));
[] (pc=10101) -> (pc'=10100) & (x'=(x+34));
[] (pc=10100) -> (pc'=10099) & (x'=(x+100));
[] (pc=10099) -> (pc'=10098) & (x'=(x+100));
[] (pc=10098) -> (pc'=10097) & (x'=(x+98));
[] (pc=10097) -> (pc'=10096) & (x'=(x+10));
[] (pc=10096) -> (pc'=10095) & (x'=(x+64));
[] (pc=10095) -> (pc'=10094) & (x'=(x+97));
[] (pc=10094) -> (pc'=10093) & (x'=(x+67));
[] (pc=10093) -> (pc'=10092) & (x'=(x+1));
[] (pc=10092) -> (pc'=10091) & (x'=(x+100));
[] (pc=10091) -> (pc'=10090) & (x'=(x+97));
[] (pc=10090) -> (pc'=10089) & (x'=(x+17));
[] (pc=10089) -> (pc'=10088) & (x'=(x+69));
[] (pc=10088) -> (pc'=10087) & (x'=(x+62));
[] (pc=10087) -> (pc'=10086) & (x'=(x+71));
[] (pc=10086) -> (pc'=10085) & (x'=(x+53));
[] (pc=10085) -> (pc'=10084) & (x'=(x+26));
[] (pc=10084) -> (pc'=10083) & (x'=(x+7));
[] (pc=10083) -> (pc'=10082) & (x'=(x+16));
[] (pc=10082) -> (pc'=10081) & (x'=(x+7));
[] (pc=10081) -> (pc'=10080) & (x'=(x+90));
[] (pc=10080) -> (pc'=10079) & (x'=(x+12));
[] (pc=10079) -> (pc'=10078) & (x'=(x+37));
[] (pc=10078) -> (pc'=10077) & (x'=(x+45));
[] (pc=10077) -> (pc'=10076) & (x'=(x+1));
[] (pc=10076) -> (pc'=10075) & (x'=(x+34));
[] (pc=10075) -> (pc'=10074) & (x'=(x+62));
[] (pc=10074) -> (pc'=10073) & (x'=(x+51));
[] (pc=10073) -> (pc'=10072) & (x'=(x+76));
[] (pc=10072) -> (pc'=10071) & (x'=(x+10));
[] (pc=10071) -> (pc'=10070) & (x'=(x+36));
[] (pc=10070) -> (pc'=10069) & (x'=(x+68));
[] (pc=10069) -> (pc'=10068) & (x'=(x+47));
[] (pc=10068) -> (pc'=10067) & (x'=(x+95));
[] (pc=10067) -> (pc'=10066) & (x'=(x+78));
[] (pc=10066) -> (pc'=10065) & (x'=(x+83));
[] (pc=10065) -> (pc'=10064) & (x'=(x+17));
[] (pc=10064) -> (pc'=10063) & (x'=(x+58));
[] (pc=10063) -> (pc'=10062) & (x'=(x+86));
[] (pc=10062) -> (pc'=10061) & (x'=(x+87));
[] (pc=10061) -> (pc'=10060) & (x'=(x+76));
[] (pc=10060) -> (pc'=10059) & (x'=(x+45));
[] (pc=10059) -> (pc'=10058) & (x'=(x+97));
[] (pc=10058) -> (pc'=10057) & (x'=(x+65));
[] (pc=10057) -> (pc'=10056) & (x'=(x+10));
[] (pc=10056) -> (pc'=10055) & (x'=(x+35));
[] (pc=10055) -> (pc'=10054) & (x'=(x+40));
[] (pc=10054) -> (pc'=10053) & (x'=(x+21));
[] (pc=10053) -> (pc'=10052) & (x'=(x+53));
[] (pc=10052) -> (pc'=10051) & (x'=(x+40));
[] (pc=10051) -> (pc'=10050) & (x'=(x+100));
[] (pc=10050) -> (pc'=10049) & (x'=(x+4));
[] (pc=10049) -> (pc'=10048) & (x'=(x+47));
[] (pc=10048) -> (pc'=10047) & (x'=(x+89));
[] (pc=10047) -> (pc'=10046) & (x'=(x+52));
[] (pc=10046) -> (pc'=10045) & (x'=(x+38));
[] (pc=10045) -> (pc'=10044) & (x'=(x+83));
[] (pc=10044) -> (pc'=10043) & (x'=(x+44));
[] (pc=10043) -> (pc'=10042) & (x'=(x+69));
[] (pc=10042) -> (pc'=10041) & (x'=(x+63));
[] (pc=10041) -> (pc'=10040) & (x'=(x+9));
[] (pc=10040) -> (pc'=10039) & (x'=(x+67));
[] (pc=10039) -> (pc'=10038) & (x'=(x+87));
[] (pc=10038) -> (pc'=10037) & (x'=(x+47));
[] (pc=10037) -> (pc'=10036) & (x'=(x+84));
[] (pc=10036) -> (pc'=10035) & (x'=(x+66));
[] (pc=10035) -> (pc'=10034) & (x'=(x+30));
[] (pc=10034) -> (pc'=10033) & (x'=(x+56));
[] (pc=10033) -> (pc'=10032) & (x'=(x+58));
[] (pc=10032) -> (pc'=10031) & (x'=(x+86));
[] (pc=10031) -> (pc'=10030) & (x'=(x+15));
[] (pc=10030) -> (pc'=10029) & (x'=(x+19));
[] (pc=10029) -> (pc'=1) & (x'=(x+49));
[] (pc=1) -> (pc'=10202);
[] (pc=10202) -> (pc'=10202);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

