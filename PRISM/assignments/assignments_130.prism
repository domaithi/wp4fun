mdp

module TestMDP

pc : [0..3685] init 0;
x : [0..13000] init 0;
n : [0..130] init 0;

[] (pc=0) -> (pc'=3684) & (x'=0);
[] (pc=3684) -> (pc'=3683) & (n'=130);
[] (pc=3683) -> (pc'=3682) & (x'=(x+81));
[] (pc=3682) -> (pc'=3681) & (x'=(x+32));
[] (pc=3681) -> (pc'=3680) & (x'=(x+78));
[] (pc=3680) -> (pc'=3679) & (x'=(x+46));
[] (pc=3679) -> (pc'=3678) & (x'=(x+75));
[] (pc=3678) -> (pc'=3677) & (x'=(x+40));
[] (pc=3677) -> (pc'=3676) & (x'=(x+99));
[] (pc=3676) -> (pc'=3675) & (x'=(x+46));
[] (pc=3675) -> (pc'=3674) & (x'=(x+31));
[] (pc=3674) -> (pc'=3673) & (x'=(x+99));
[] (pc=3673) -> (pc'=3672) & (x'=(x+94));
[] (pc=3672) -> (pc'=3671) & (x'=(x+99));
[] (pc=3671) -> (pc'=3670) & (x'=(x+91));
[] (pc=3670) -> (pc'=3669) & (x'=(x+6));
[] (pc=3669) -> (pc'=3668) & (x'=(x+73));
[] (pc=3668) -> (pc'=3667) & (x'=(x+24));
[] (pc=3667) -> (pc'=3666) & (x'=(x+65));
[] (pc=3666) -> (pc'=3665) & (x'=(x+56));
[] (pc=3665) -> (pc'=3664) & (x'=(x+31));
[] (pc=3664) -> (pc'=3663) & (x'=(x+6));
[] (pc=3663) -> (pc'=3662) & (x'=(x+21));
[] (pc=3662) -> (pc'=3661) & (x'=(x+46));
[] (pc=3661) -> (pc'=3660) & (x'=(x+11));
[] (pc=3660) -> (pc'=3659) & (x'=(x+60));
[] (pc=3659) -> (pc'=3658) & (x'=(x+90));
[] (pc=3658) -> (pc'=3657) & (x'=(x+32));
[] (pc=3657) -> (pc'=3656) & (x'=(x+35));
[] (pc=3656) -> (pc'=3655) & (x'=(x+2));
[] (pc=3655) -> (pc'=3654) & (x'=(x+65));
[] (pc=3654) -> (pc'=3653) & (x'=(x+39));
[] (pc=3653) -> (pc'=3652) & (x'=(x+83));
[] (pc=3652) -> (pc'=3651) & (x'=(x+50));
[] (pc=3651) -> (pc'=3650) & (x'=(x+62));
[] (pc=3650) -> (pc'=3649) & (x'=(x+43));
[] (pc=3649) -> (pc'=3648) & (x'=(x+65));
[] (pc=3648) -> (pc'=3647) & (x'=(x+36));
[] (pc=3647) -> (pc'=3646) & (x'=(x+22));
[] (pc=3646) -> (pc'=3645) & (x'=(x+60));
[] (pc=3645) -> (pc'=3644) & (x'=(x+7));
[] (pc=3644) -> (pc'=3643) & (x'=(x+76));
[] (pc=3643) -> (pc'=3642) & (x'=(x+78));
[] (pc=3642) -> (pc'=3641) & (x'=(x+94));
[] (pc=3641) -> (pc'=3640) & (x'=(x+72));
[] (pc=3640) -> (pc'=3639) & (x'=(x+41));
[] (pc=3639) -> (pc'=3638) & (x'=(x+44));
[] (pc=3638) -> (pc'=3637) & (x'=(x+5));
[] (pc=3637) -> (pc'=3636) & (x'=(x+69));
[] (pc=3636) -> (pc'=3635) & (x'=(x+10));
[] (pc=3635) -> (pc'=3634) & (x'=(x+59));
[] (pc=3634) -> (pc'=3633) & (x'=(x+56));
[] (pc=3633) -> (pc'=3632) & (x'=(x+55));
[] (pc=3632) -> (pc'=3631) & (x'=(x+63));
[] (pc=3631) -> (pc'=3630) & (x'=(x+89));
[] (pc=3630) -> (pc'=3629) & (x'=(x+37));
[] (pc=3629) -> (pc'=3628) & (x'=(x+73));
[] (pc=3628) -> (pc'=3627) & (x'=(x+34));
[] (pc=3627) -> (pc'=3626) & (x'=(x+75));
[] (pc=3626) -> (pc'=3625) & (x'=(x+65));
[] (pc=3625) -> (pc'=3624) & (x'=(x+6));
[] (pc=3624) -> (pc'=3623) & (x'=(x+24));
[] (pc=3623) -> (pc'=3622) & (x'=(x+25));
[] (pc=3622) -> (pc'=3621) & (x'=(x+19));
[] (pc=3621) -> (pc'=3620) & (x'=(x+28));
[] (pc=3620) -> (pc'=3619) & (x'=(x+2));
[] (pc=3619) -> (pc'=3618) & (x'=(x+45));
[] (pc=3618) -> (pc'=3617) & (x'=(x+59));
[] (pc=3617) -> (pc'=3616) & (x'=(x+18));
[] (pc=3616) -> (pc'=3615) & (x'=(x+58));
[] (pc=3615) -> (pc'=3614) & (x'=(x+37));
[] (pc=3614) -> (pc'=3613) & (x'=(x+82));
[] (pc=3613) -> (pc'=3612) & (x'=(x+56));
[] (pc=3612) -> (pc'=3611) & (x'=(x+58));
[] (pc=3611) -> (pc'=3610) & (x'=(x+2));
[] (pc=3610) -> (pc'=3609) & (x'=(x+75));
[] (pc=3609) -> (pc'=3608) & (x'=(x+66));
[] (pc=3608) -> (pc'=3607) & (x'=(x+52));
[] (pc=3607) -> (pc'=3606) & (x'=(x+79));
[] (pc=3606) -> (pc'=3605) & (x'=(x+6));
[] (pc=3605) -> (pc'=3604) & (x'=(x+23));
[] (pc=3604) -> (pc'=3603) & (x'=(x+63));
[] (pc=3603) -> (pc'=3602) & (x'=(x+77));
[] (pc=3602) -> (pc'=3601) & (x'=(x+98));
[] (pc=3601) -> (pc'=3600) & (x'=(x+33));
[] (pc=3600) -> (pc'=3599) & (x'=(x+4));
[] (pc=3599) -> (pc'=3598) & (x'=(x+30));
[] (pc=3598) -> (pc'=3597) & (x'=(x+29));
[] (pc=3597) -> (pc'=3596) & (x'=(x+56));
[] (pc=3596) -> (pc'=3595) & (x'=(x+35));
[] (pc=3595) -> (pc'=3594) & (x'=(x+64));
[] (pc=3594) -> (pc'=3593) & (x'=(x+82));
[] (pc=3593) -> (pc'=3592) & (x'=(x+72));
[] (pc=3592) -> (pc'=3591) & (x'=(x+16));
[] (pc=3591) -> (pc'=3590) & (x'=(x+98));
[] (pc=3590) -> (pc'=3589) & (x'=(x+79));
[] (pc=3589) -> (pc'=3588) & (x'=(x+71));
[] (pc=3588) -> (pc'=3587) & (x'=(x+88));
[] (pc=3587) -> (pc'=3586) & (x'=(x+70));
[] (pc=3586) -> (pc'=3585) & (x'=(x+78));
[] (pc=3585) -> (pc'=3584) & (x'=(x+8));
[] (pc=3584) -> (pc'=3583) & (x'=(x+51));
[] (pc=3583) -> (pc'=3582) & (x'=(x+26));
[] (pc=3582) -> (pc'=3581) & (x'=(x+99));
[] (pc=3581) -> (pc'=3580) & (x'=(x+61));
[] (pc=3580) -> (pc'=3579) & (x'=(x+61));
[] (pc=3579) -> (pc'=3578) & (x'=(x+38));
[] (pc=3578) -> (pc'=3577) & (x'=(x+89));
[] (pc=3577) -> (pc'=3576) & (x'=(x+42));
[] (pc=3576) -> (pc'=3575) & (x'=(x+94));
[] (pc=3575) -> (pc'=3574) & (x'=(x+64));
[] (pc=3574) -> (pc'=3573) & (x'=(x+47));
[] (pc=3573) -> (pc'=3572) & (x'=(x+31));
[] (pc=3572) -> (pc'=3571) & (x'=(x+78));
[] (pc=3571) -> (pc'=3570) & (x'=(x+29));
[] (pc=3570) -> (pc'=3569) & (x'=(x+38));
[] (pc=3569) -> (pc'=3568) & (x'=(x+11));
[] (pc=3568) -> (pc'=3567) & (x'=(x+35));
[] (pc=3567) -> (pc'=3566) & (x'=(x+89));
[] (pc=3566) -> (pc'=3565) & (x'=(x+30));
[] (pc=3565) -> (pc'=3564) & (x'=(x+74));
[] (pc=3564) -> (pc'=3563) & (x'=(x+72));
[] (pc=3563) -> (pc'=3562) & (x'=(x+35));
[] (pc=3562) -> (pc'=3561) & (x'=(x+77));
[] (pc=3561) -> (pc'=3560) & (x'=(x+80));
[] (pc=3560) -> (pc'=3559) & (x'=(x+41));
[] (pc=3559) -> (pc'=3558) & (x'=(x+76));
[] (pc=3558) -> (pc'=3557) & (x'=(x+26));
[] (pc=3557) -> (pc'=3556) & (x'=(x+12));
[] (pc=3556) -> (pc'=3555) & (x'=(x+88));
[] (pc=3555) -> (pc'=3554) & (x'=(x+20));
[] (pc=3554) -> (pc'=1) & (x'=(x+86));
[] (pc=1) -> (pc'=3685);
[] (pc=3685) -> (pc'=3685);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

