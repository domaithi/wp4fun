mdp

module TestMDP

pc : [0..43706] init 0;
x : [0..8000] init 0;
n : [0..80] init 0;

[] (pc=0) -> (pc'=43705) & (x'=0);
[] (pc=43705) -> (pc'=43704) & (n'=80);
[] (pc=43704) -> (pc'=43703) & (x'=(x+61));
[] (pc=43703) -> (pc'=43702) & (x'=(x+10));
[] (pc=43702) -> (pc'=43701) & (x'=(x+28));
[] (pc=43701) -> (pc'=43700) & (x'=(x+20));
[] (pc=43700) -> (pc'=43699) & (x'=(x+75));
[] (pc=43699) -> (pc'=43698) & (x'=(x+48));
[] (pc=43698) -> (pc'=43697) & (x'=(x+46));
[] (pc=43697) -> (pc'=43696) & (x'=(x+62));
[] (pc=43696) -> (pc'=43695) & (x'=(x+61));
[] (pc=43695) -> (pc'=43694) & (x'=(x+2));
[] (pc=43694) -> (pc'=43693) & (x'=(x+17));
[] (pc=43693) -> (pc'=43692) & (x'=(x+59));
[] (pc=43692) -> (pc'=43691) & (x'=(x+37));
[] (pc=43691) -> (pc'=43690) & (x'=(x+87));
[] (pc=43690) -> (pc'=43689) & (x'=(x+8));
[] (pc=43689) -> (pc'=43688) & (x'=(x+37));
[] (pc=43688) -> (pc'=43687) & (x'=(x+98));
[] (pc=43687) -> (pc'=43686) & (x'=(x+89));
[] (pc=43686) -> (pc'=43685) & (x'=(x+85));
[] (pc=43685) -> (pc'=43684) & (x'=(x+3));
[] (pc=43684) -> (pc'=43683) & (x'=(x+3));
[] (pc=43683) -> (pc'=43682) & (x'=(x+18));
[] (pc=43682) -> (pc'=43681) & (x'=(x+35));
[] (pc=43681) -> (pc'=43680) & (x'=(x+59));
[] (pc=43680) -> (pc'=43679) & (x'=(x+31));
[] (pc=43679) -> (pc'=43678) & (x'=(x+48));
[] (pc=43678) -> (pc'=43677) & (x'=(x+54));
[] (pc=43677) -> (pc'=43676) & (x'=(x+81));
[] (pc=43676) -> (pc'=43675) & (x'=(x+22));
[] (pc=43675) -> (pc'=43674) & (x'=(x+37));
[] (pc=43674) -> (pc'=43673) & (x'=(x+7));
[] (pc=43673) -> (pc'=43672) & (x'=(x+40));
[] (pc=43672) -> (pc'=43671) & (x'=(x+99));
[] (pc=43671) -> (pc'=43670) & (x'=(x+100));
[] (pc=43670) -> (pc'=43669) & (x'=(x+3));
[] (pc=43669) -> (pc'=43668) & (x'=(x+40));
[] (pc=43668) -> (pc'=43667) & (x'=(x+31));
[] (pc=43667) -> (pc'=43666) & (x'=(x+77));
[] (pc=43666) -> (pc'=43665) & (x'=(x+75));
[] (pc=43665) -> (pc'=43664) & (x'=(x+84));
[] (pc=43664) -> (pc'=43663) & (x'=(x+21));
[] (pc=43663) -> (pc'=43662) & (x'=(x+98));
[] (pc=43662) -> (pc'=43661) & (x'=(x+94));
[] (pc=43661) -> (pc'=43660) & (x'=(x+57));
[] (pc=43660) -> (pc'=43659) & (x'=(x+91));
[] (pc=43659) -> (pc'=43658) & (x'=(x+49));
[] (pc=43658) -> (pc'=43657) & (x'=(x+89));
[] (pc=43657) -> (pc'=43656) & (x'=(x+28));
[] (pc=43656) -> (pc'=43655) & (x'=(x+61));
[] (pc=43655) -> (pc'=43654) & (x'=(x+13));
[] (pc=43654) -> (pc'=43653) & (x'=(x+2));
[] (pc=43653) -> (pc'=43652) & (x'=(x+71));
[] (pc=43652) -> (pc'=43651) & (x'=(x+6));
[] (pc=43651) -> (pc'=43650) & (x'=(x+51));
[] (pc=43650) -> (pc'=43649) & (x'=(x+63));
[] (pc=43649) -> (pc'=43648) & (x'=(x+52));
[] (pc=43648) -> (pc'=43647) & (x'=(x+33));
[] (pc=43647) -> (pc'=43646) & (x'=(x+51));
[] (pc=43646) -> (pc'=43645) & (x'=(x+16));
[] (pc=43645) -> (pc'=43644) & (x'=(x+94));
[] (pc=43644) -> (pc'=43643) & (x'=(x+68));
[] (pc=43643) -> (pc'=43642) & (x'=(x+74));
[] (pc=43642) -> (pc'=43641) & (x'=(x+58));
[] (pc=43641) -> (pc'=43640) & (x'=(x+55));
[] (pc=43640) -> (pc'=43639) & (x'=(x+18));
[] (pc=43639) -> (pc'=43638) & (x'=(x+74));
[] (pc=43638) -> (pc'=43637) & (x'=(x+86));
[] (pc=43637) -> (pc'=43636) & (x'=(x+35));
[] (pc=43636) -> (pc'=43635) & (x'=(x+31));
[] (pc=43635) -> (pc'=43634) & (x'=(x+32));
[] (pc=43634) -> (pc'=43633) & (x'=(x+98));
[] (pc=43633) -> (pc'=43632) & (x'=(x+50));
[] (pc=43632) -> (pc'=43631) & (x'=(x+4));
[] (pc=43631) -> (pc'=43630) & (x'=(x+9));
[] (pc=43630) -> (pc'=43629) & (x'=(x+69));
[] (pc=43629) -> (pc'=43628) & (x'=(x+4));
[] (pc=43628) -> (pc'=43627) & (x'=(x+100));
[] (pc=43627) -> (pc'=43626) & (x'=(x+47));
[] (pc=43626) -> (pc'=43625) & (x'=(x+83));
[] (pc=43625) -> (pc'=1) & (x'=(x+55));
[] (pc=1) -> (pc'=43706);
[] (pc=43706) -> (pc'=43706);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

