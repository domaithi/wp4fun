mdp

module TestMDP

pc : [0..1081] init 0;
x : [0..10900] init 0;
n : [0..109] init 0;

[] (pc=0) -> (pc'=1080) & (x'=0);
[] (pc=1080) -> (pc'=1079) & (n'=109);
[] (pc=1079) -> (pc'=1078) & (x'=(x+59));
[] (pc=1078) -> (pc'=1077) & (x'=(x+95));
[] (pc=1077) -> (pc'=1076) & (x'=(x+72));
[] (pc=1076) -> (pc'=1075) & (x'=(x+36));
[] (pc=1075) -> (pc'=1074) & (x'=(x+73));
[] (pc=1074) -> (pc'=1073) & (x'=(x+40));
[] (pc=1073) -> (pc'=1072) & (x'=(x+85));
[] (pc=1072) -> (pc'=1071) & (x'=(x+24));
[] (pc=1071) -> (pc'=1070) & (x'=(x+21));
[] (pc=1070) -> (pc'=1069) & (x'=(x+21));
[] (pc=1069) -> (pc'=1068) & (x'=(x+4));
[] (pc=1068) -> (pc'=1067) & (x'=(x+84));
[] (pc=1067) -> (pc'=1066) & (x'=(x+42));
[] (pc=1066) -> (pc'=1065) & (x'=(x+33));
[] (pc=1065) -> (pc'=1064) & (x'=(x+32));
[] (pc=1064) -> (pc'=1063) & (x'=(x+49));
[] (pc=1063) -> (pc'=1062) & (x'=(x+43));
[] (pc=1062) -> (pc'=1061) & (x'=(x+29));
[] (pc=1061) -> (pc'=1060) & (x'=(x+84));
[] (pc=1060) -> (pc'=1059) & (x'=(x+78));
[] (pc=1059) -> (pc'=1058) & (x'=(x+62));
[] (pc=1058) -> (pc'=1057) & (x'=(x+8));
[] (pc=1057) -> (pc'=1056) & (x'=(x+87));
[] (pc=1056) -> (pc'=1055) & (x'=(x+24));
[] (pc=1055) -> (pc'=1054) & (x'=(x+25));
[] (pc=1054) -> (pc'=1053) & (x'=(x+25));
[] (pc=1053) -> (pc'=1052) & (x'=(x+76));
[] (pc=1052) -> (pc'=1051) & (x'=(x+69));
[] (pc=1051) -> (pc'=1050) & (x'=(x+95));
[] (pc=1050) -> (pc'=1049) & (x'=(x+13));
[] (pc=1049) -> (pc'=1048) & (x'=(x+15));
[] (pc=1048) -> (pc'=1047) & (x'=(x+32));
[] (pc=1047) -> (pc'=1046) & (x'=(x+69));
[] (pc=1046) -> (pc'=1045) & (x'=(x+60));
[] (pc=1045) -> (pc'=1044) & (x'=(x+20));
[] (pc=1044) -> (pc'=1043) & (x'=(x+72));
[] (pc=1043) -> (pc'=1042) & (x'=(x+40));
[] (pc=1042) -> (pc'=1041) & (x'=(x+36));
[] (pc=1041) -> (pc'=1040) & (x'=(x+8));
[] (pc=1040) -> (pc'=1039) & (x'=(x+80));
[] (pc=1039) -> (pc'=1038) & (x'=(x+47));
[] (pc=1038) -> (pc'=1037) & (x'=(x+45));
[] (pc=1037) -> (pc'=1036) & (x'=(x+5));
[] (pc=1036) -> (pc'=1035) & (x'=(x+62));
[] (pc=1035) -> (pc'=1034) & (x'=(x+63));
[] (pc=1034) -> (pc'=1033) & (x'=(x+59));
[] (pc=1033) -> (pc'=1032) & (x'=(x+92));
[] (pc=1032) -> (pc'=1031) & (x'=(x+6));
[] (pc=1031) -> (pc'=1030) & (x'=(x+12));
[] (pc=1030) -> (pc'=1029) & (x'=(x+86));
[] (pc=1029) -> (pc'=1028) & (x'=(x+77));
[] (pc=1028) -> (pc'=1027) & (x'=(x+44));
[] (pc=1027) -> (pc'=1026) & (x'=(x+45));
[] (pc=1026) -> (pc'=1025) & (x'=(x+38));
[] (pc=1025) -> (pc'=1024) & (x'=(x+94));
[] (pc=1024) -> (pc'=1023) & (x'=(x+64));
[] (pc=1023) -> (pc'=1022) & (x'=(x+53));
[] (pc=1022) -> (pc'=1021) & (x'=(x+9));
[] (pc=1021) -> (pc'=1020) & (x'=(x+70));
[] (pc=1020) -> (pc'=1019) & (x'=(x+37));
[] (pc=1019) -> (pc'=1018) & (x'=(x+26));
[] (pc=1018) -> (pc'=1017) & (x'=(x+71));
[] (pc=1017) -> (pc'=1016) & (x'=(x+68));
[] (pc=1016) -> (pc'=1015) & (x'=(x+87));
[] (pc=1015) -> (pc'=1014) & (x'=(x+70));
[] (pc=1014) -> (pc'=1013) & (x'=(x+52));
[] (pc=1013) -> (pc'=1012) & (x'=(x+50));
[] (pc=1012) -> (pc'=1011) & (x'=(x+83));
[] (pc=1011) -> (pc'=1010) & (x'=(x+17));
[] (pc=1010) -> (pc'=1009) & (x'=(x+9));
[] (pc=1009) -> (pc'=1008) & (x'=(x+35));
[] (pc=1008) -> (pc'=1007) & (x'=(x+91));
[] (pc=1007) -> (pc'=1006) & (x'=(x+36));
[] (pc=1006) -> (pc'=1005) & (x'=(x+44));
[] (pc=1005) -> (pc'=1004) & (x'=(x+39));
[] (pc=1004) -> (pc'=1003) & (x'=(x+14));
[] (pc=1003) -> (pc'=1002) & (x'=(x+59));
[] (pc=1002) -> (pc'=1001) & (x'=(x+63));
[] (pc=1001) -> (pc'=1000) & (x'=(x+25));
[] (pc=1000) -> (pc'=999) & (x'=(x+93));
[] (pc=999) -> (pc'=998) & (x'=(x+61));
[] (pc=998) -> (pc'=997) & (x'=(x+53));
[] (pc=997) -> (pc'=996) & (x'=(x+74));
[] (pc=996) -> (pc'=995) & (x'=(x+13));
[] (pc=995) -> (pc'=994) & (x'=(x+23));
[] (pc=994) -> (pc'=993) & (x'=(x+31));
[] (pc=993) -> (pc'=992) & (x'=(x+78));
[] (pc=992) -> (pc'=991) & (x'=(x+36));
[] (pc=991) -> (pc'=990) & (x'=(x+22));
[] (pc=990) -> (pc'=989) & (x'=(x+82));
[] (pc=989) -> (pc'=988) & (x'=(x+1));
[] (pc=988) -> (pc'=987) & (x'=(x+8));
[] (pc=987) -> (pc'=986) & (x'=(x+12));
[] (pc=986) -> (pc'=985) & (x'=(x+31));
[] (pc=985) -> (pc'=984) & (x'=(x+28));
[] (pc=984) -> (pc'=983) & (x'=(x+88));
[] (pc=983) -> (pc'=982) & (x'=(x+68));
[] (pc=982) -> (pc'=981) & (x'=(x+31));
[] (pc=981) -> (pc'=980) & (x'=(x+54));
[] (pc=980) -> (pc'=979) & (x'=(x+40));
[] (pc=979) -> (pc'=978) & (x'=(x+57));
[] (pc=978) -> (pc'=977) & (x'=(x+49));
[] (pc=977) -> (pc'=976) & (x'=(x+34));
[] (pc=976) -> (pc'=975) & (x'=(x+21));
[] (pc=975) -> (pc'=974) & (x'=(x+11));
[] (pc=974) -> (pc'=973) & (x'=(x+33));
[] (pc=973) -> (pc'=972) & (x'=(x+92));
[] (pc=972) -> (pc'=971) & (x'=(x+92));
[] (pc=971) -> (pc'=1) & (x'=(x+30));
[] (pc=1) -> (pc'=1081);
[] (pc=1081) -> (pc'=1081);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

