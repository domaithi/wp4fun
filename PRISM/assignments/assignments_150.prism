mdp

module TestMDP

pc : [0..6568] init 0;
x : [0..15000] init 0;
n : [0..150] init 0;

[] (pc=0) -> (pc'=6567) & (x'=0);
[] (pc=6567) -> (pc'=6566) & (n'=150);
[] (pc=6566) -> (pc'=6565) & (x'=(x+41));
[] (pc=6565) -> (pc'=6564) & (x'=(x+26));
[] (pc=6564) -> (pc'=6563) & (x'=(x+17));
[] (pc=6563) -> (pc'=6562) & (x'=(x+61));
[] (pc=6562) -> (pc'=6561) & (x'=(x+9));
[] (pc=6561) -> (pc'=6560) & (x'=(x+94));
[] (pc=6560) -> (pc'=6559) & (x'=(x+99));
[] (pc=6559) -> (pc'=6558) & (x'=(x+9));
[] (pc=6558) -> (pc'=6557) & (x'=(x+44));
[] (pc=6557) -> (pc'=6556) & (x'=(x+81));
[] (pc=6556) -> (pc'=6555) & (x'=(x+78));
[] (pc=6555) -> (pc'=6554) & (x'=(x+94));
[] (pc=6554) -> (pc'=6553) & (x'=(x+60));
[] (pc=6553) -> (pc'=6552) & (x'=(x+44));
[] (pc=6552) -> (pc'=6551) & (x'=(x+65));
[] (pc=6551) -> (pc'=6550) & (x'=(x+65));
[] (pc=6550) -> (pc'=6549) & (x'=(x+45));
[] (pc=6549) -> (pc'=6548) & (x'=(x+100));
[] (pc=6548) -> (pc'=6547) & (x'=(x+89));
[] (pc=6547) -> (pc'=6546) & (x'=(x+19));
[] (pc=6546) -> (pc'=6545) & (x'=(x+22));
[] (pc=6545) -> (pc'=6544) & (x'=(x+16));
[] (pc=6544) -> (pc'=6543) & (x'=(x+78));
[] (pc=6543) -> (pc'=6542) & (x'=(x+62));
[] (pc=6542) -> (pc'=6541) & (x'=(x+58));
[] (pc=6541) -> (pc'=6540) & (x'=(x+74));
[] (pc=6540) -> (pc'=6539) & (x'=(x+88));
[] (pc=6539) -> (pc'=6538) & (x'=(x+35));
[] (pc=6538) -> (pc'=6537) & (x'=(x+99));
[] (pc=6537) -> (pc'=6536) & (x'=(x+8));
[] (pc=6536) -> (pc'=6535) & (x'=(x+9));
[] (pc=6535) -> (pc'=6534) & (x'=(x+44));
[] (pc=6534) -> (pc'=6533) & (x'=(x+79));
[] (pc=6533) -> (pc'=6532) & (x'=(x+46));
[] (pc=6532) -> (pc'=6531) & (x'=(x+12));
[] (pc=6531) -> (pc'=6530) & (x'=(x+22));
[] (pc=6530) -> (pc'=6529) & (x'=(x+44));
[] (pc=6529) -> (pc'=6528) & (x'=(x+51));
[] (pc=6528) -> (pc'=6527) & (x'=(x+39));
[] (pc=6527) -> (pc'=6526) & (x'=(x+48));
[] (pc=6526) -> (pc'=6525) & (x'=(x+48));
[] (pc=6525) -> (pc'=6524) & (x'=(x+64));
[] (pc=6524) -> (pc'=6523) & (x'=(x+76));
[] (pc=6523) -> (pc'=6522) & (x'=(x+64));
[] (pc=6522) -> (pc'=6521) & (x'=(x+100));
[] (pc=6521) -> (pc'=6520) & (x'=(x+67));
[] (pc=6520) -> (pc'=6519) & (x'=(x+87));
[] (pc=6519) -> (pc'=6518) & (x'=(x+64));
[] (pc=6518) -> (pc'=6517) & (x'=(x+76));
[] (pc=6517) -> (pc'=6516) & (x'=(x+56));
[] (pc=6516) -> (pc'=6515) & (x'=(x+69));
[] (pc=6515) -> (pc'=6514) & (x'=(x+36));
[] (pc=6514) -> (pc'=6513) & (x'=(x+2));
[] (pc=6513) -> (pc'=6512) & (x'=(x+85));
[] (pc=6512) -> (pc'=6511) & (x'=(x+79));
[] (pc=6511) -> (pc'=6510) & (x'=(x+63));
[] (pc=6510) -> (pc'=6509) & (x'=(x+69));
[] (pc=6509) -> (pc'=6508) & (x'=(x+84));
[] (pc=6508) -> (pc'=6507) & (x'=(x+7));
[] (pc=6507) -> (pc'=6506) & (x'=(x+77));
[] (pc=6506) -> (pc'=6505) & (x'=(x+17));
[] (pc=6505) -> (pc'=6504) & (x'=(x+49));
[] (pc=6504) -> (pc'=6503) & (x'=(x+24));
[] (pc=6503) -> (pc'=6502) & (x'=(x+82));
[] (pc=6502) -> (pc'=6501) & (x'=(x+45));
[] (pc=6501) -> (pc'=6500) & (x'=(x+52));
[] (pc=6500) -> (pc'=6499) & (x'=(x+96));
[] (pc=6499) -> (pc'=6498) & (x'=(x+6));
[] (pc=6498) -> (pc'=6497) & (x'=(x+50));
[] (pc=6497) -> (pc'=6496) & (x'=(x+95));
[] (pc=6496) -> (pc'=6495) & (x'=(x+27));
[] (pc=6495) -> (pc'=6494) & (x'=(x+10));
[] (pc=6494) -> (pc'=6493) & (x'=(x+45));
[] (pc=6493) -> (pc'=6492) & (x'=(x+57));
[] (pc=6492) -> (pc'=6491) & (x'=(x+41));
[] (pc=6491) -> (pc'=6490) & (x'=(x+63));
[] (pc=6490) -> (pc'=6489) & (x'=(x+57));
[] (pc=6489) -> (pc'=6488) & (x'=(x+72));
[] (pc=6488) -> (pc'=6487) & (x'=(x+50));
[] (pc=6487) -> (pc'=6486) & (x'=(x+69));
[] (pc=6486) -> (pc'=6485) & (x'=(x+93));
[] (pc=6485) -> (pc'=6484) & (x'=(x+22));
[] (pc=6484) -> (pc'=6483) & (x'=(x+1));
[] (pc=6483) -> (pc'=6482) & (x'=(x+92));
[] (pc=6482) -> (pc'=6481) & (x'=(x+19));
[] (pc=6481) -> (pc'=6480) & (x'=(x+88));
[] (pc=6480) -> (pc'=6479) & (x'=(x+28));
[] (pc=6479) -> (pc'=6478) & (x'=(x+18));
[] (pc=6478) -> (pc'=6477) & (x'=(x+6));
[] (pc=6477) -> (pc'=6476) & (x'=(x+46));
[] (pc=6476) -> (pc'=6475) & (x'=(x+73));
[] (pc=6475) -> (pc'=6474) & (x'=(x+76));
[] (pc=6474) -> (pc'=6473) & (x'=(x+94));
[] (pc=6473) -> (pc'=6472) & (x'=(x+73));
[] (pc=6472) -> (pc'=6471) & (x'=(x+54));
[] (pc=6471) -> (pc'=6470) & (x'=(x+95));
[] (pc=6470) -> (pc'=6469) & (x'=(x+86));
[] (pc=6469) -> (pc'=6468) & (x'=(x+9));
[] (pc=6468) -> (pc'=6467) & (x'=(x+64));
[] (pc=6467) -> (pc'=6466) & (x'=(x+44));
[] (pc=6466) -> (pc'=6465) & (x'=(x+93));
[] (pc=6465) -> (pc'=6464) & (x'=(x+48));
[] (pc=6464) -> (pc'=6463) & (x'=(x+14));
[] (pc=6463) -> (pc'=6462) & (x'=(x+15));
[] (pc=6462) -> (pc'=6461) & (x'=(x+46));
[] (pc=6461) -> (pc'=6460) & (x'=(x+35));
[] (pc=6460) -> (pc'=6459) & (x'=(x+70));
[] (pc=6459) -> (pc'=6458) & (x'=(x+23));
[] (pc=6458) -> (pc'=6457) & (x'=(x+62));
[] (pc=6457) -> (pc'=6456) & (x'=(x+76));
[] (pc=6456) -> (pc'=6455) & (x'=(x+12));
[] (pc=6455) -> (pc'=6454) & (x'=(x+40));
[] (pc=6454) -> (pc'=6453) & (x'=(x+88));
[] (pc=6453) -> (pc'=6452) & (x'=(x+64));
[] (pc=6452) -> (pc'=6451) & (x'=(x+40));
[] (pc=6451) -> (pc'=6450) & (x'=(x+75));
[] (pc=6450) -> (pc'=6449) & (x'=(x+26));
[] (pc=6449) -> (pc'=6448) & (x'=(x+72));
[] (pc=6448) -> (pc'=6447) & (x'=(x+75));
[] (pc=6447) -> (pc'=6446) & (x'=(x+94));
[] (pc=6446) -> (pc'=6445) & (x'=(x+54));
[] (pc=6445) -> (pc'=6444) & (x'=(x+95));
[] (pc=6444) -> (pc'=6443) & (x'=(x+34));
[] (pc=6443) -> (pc'=6442) & (x'=(x+41));
[] (pc=6442) -> (pc'=6441) & (x'=(x+76));
[] (pc=6441) -> (pc'=6440) & (x'=(x+39));
[] (pc=6440) -> (pc'=6439) & (x'=(x+17));
[] (pc=6439) -> (pc'=6438) & (x'=(x+70));
[] (pc=6438) -> (pc'=6437) & (x'=(x+37));
[] (pc=6437) -> (pc'=6436) & (x'=(x+91));
[] (pc=6436) -> (pc'=6435) & (x'=(x+83));
[] (pc=6435) -> (pc'=6434) & (x'=(x+57));
[] (pc=6434) -> (pc'=6433) & (x'=(x+95));
[] (pc=6433) -> (pc'=6432) & (x'=(x+47));
[] (pc=6432) -> (pc'=6431) & (x'=(x+88));
[] (pc=6431) -> (pc'=6430) & (x'=(x+67));
[] (pc=6430) -> (pc'=6429) & (x'=(x+69));
[] (pc=6429) -> (pc'=6428) & (x'=(x+51));
[] (pc=6428) -> (pc'=6427) & (x'=(x+50));
[] (pc=6427) -> (pc'=6426) & (x'=(x+14));
[] (pc=6426) -> (pc'=6425) & (x'=(x+63));
[] (pc=6425) -> (pc'=6424) & (x'=(x+23));
[] (pc=6424) -> (pc'=6423) & (x'=(x+3));
[] (pc=6423) -> (pc'=6422) & (x'=(x+89));
[] (pc=6422) -> (pc'=6421) & (x'=(x+13));
[] (pc=6421) -> (pc'=6420) & (x'=(x+18));
[] (pc=6420) -> (pc'=6419) & (x'=(x+18));
[] (pc=6419) -> (pc'=6418) & (x'=(x+58));
[] (pc=6418) -> (pc'=6417) & (x'=(x+70));
[] (pc=6417) -> (pc'=1) & (x'=(x+78));
[] (pc=1) -> (pc'=6568);
[] (pc=6568) -> (pc'=6568);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

