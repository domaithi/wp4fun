mdp

module TestMDP

pc : [0..6098] init 0;
x : [0..14700] init 0;
n : [0..147] init 0;

[] (pc=0) -> (pc'=6097) & (x'=0);
[] (pc=6097) -> (pc'=6096) & (n'=147);
[] (pc=6096) -> (pc'=6095) & (x'=(x+25));
[] (pc=6095) -> (pc'=6094) & (x'=(x+31));
[] (pc=6094) -> (pc'=6093) & (x'=(x+24));
[] (pc=6093) -> (pc'=6092) & (x'=(x+90));
[] (pc=6092) -> (pc'=6091) & (x'=(x+3));
[] (pc=6091) -> (pc'=6090) & (x'=(x+31));
[] (pc=6090) -> (pc'=6089) & (x'=(x+66));
[] (pc=6089) -> (pc'=6088) & (x'=(x+95));
[] (pc=6088) -> (pc'=6087) & (x'=(x+83));
[] (pc=6087) -> (pc'=6086) & (x'=(x+52));
[] (pc=6086) -> (pc'=6085) & (x'=(x+49));
[] (pc=6085) -> (pc'=6084) & (x'=(x+56));
[] (pc=6084) -> (pc'=6083) & (x'=(x+24));
[] (pc=6083) -> (pc'=6082) & (x'=(x+100));
[] (pc=6082) -> (pc'=6081) & (x'=(x+63));
[] (pc=6081) -> (pc'=6080) & (x'=(x+3));
[] (pc=6080) -> (pc'=6079) & (x'=(x+86));
[] (pc=6079) -> (pc'=6078) & (x'=(x+42));
[] (pc=6078) -> (pc'=6077) & (x'=(x+69));
[] (pc=6077) -> (pc'=6076) & (x'=(x+21));
[] (pc=6076) -> (pc'=6075) & (x'=(x+30));
[] (pc=6075) -> (pc'=6074) & (x'=(x+97));
[] (pc=6074) -> (pc'=6073) & (x'=(x+47));
[] (pc=6073) -> (pc'=6072) & (x'=(x+60));
[] (pc=6072) -> (pc'=6071) & (x'=(x+65));
[] (pc=6071) -> (pc'=6070) & (x'=(x+72));
[] (pc=6070) -> (pc'=6069) & (x'=(x+75));
[] (pc=6069) -> (pc'=6068) & (x'=(x+37));
[] (pc=6068) -> (pc'=6067) & (x'=(x+23));
[] (pc=6067) -> (pc'=6066) & (x'=(x+76));
[] (pc=6066) -> (pc'=6065) & (x'=(x+50));
[] (pc=6065) -> (pc'=6064) & (x'=(x+66));
[] (pc=6064) -> (pc'=6063) & (x'=(x+43));
[] (pc=6063) -> (pc'=6062) & (x'=(x+59));
[] (pc=6062) -> (pc'=6061) & (x'=(x+54));
[] (pc=6061) -> (pc'=6060) & (x'=(x+61));
[] (pc=6060) -> (pc'=6059) & (x'=(x+38));
[] (pc=6059) -> (pc'=6058) & (x'=(x+25));
[] (pc=6058) -> (pc'=6057) & (x'=(x+1));
[] (pc=6057) -> (pc'=6056) & (x'=(x+68));
[] (pc=6056) -> (pc'=6055) & (x'=(x+15));
[] (pc=6055) -> (pc'=6054) & (x'=(x+75));
[] (pc=6054) -> (pc'=6053) & (x'=(x+16));
[] (pc=6053) -> (pc'=6052) & (x'=(x+82));
[] (pc=6052) -> (pc'=6051) & (x'=(x+51));
[] (pc=6051) -> (pc'=6050) & (x'=(x+26));
[] (pc=6050) -> (pc'=6049) & (x'=(x+99));
[] (pc=6049) -> (pc'=6048) & (x'=(x+34));
[] (pc=6048) -> (pc'=6047) & (x'=(x+18));
[] (pc=6047) -> (pc'=6046) & (x'=(x+43));
[] (pc=6046) -> (pc'=6045) & (x'=(x+71));
[] (pc=6045) -> (pc'=6044) & (x'=(x+81));
[] (pc=6044) -> (pc'=6043) & (x'=(x+61));
[] (pc=6043) -> (pc'=6042) & (x'=(x+23));
[] (pc=6042) -> (pc'=6041) & (x'=(x+2));
[] (pc=6041) -> (pc'=6040) & (x'=(x+80));
[] (pc=6040) -> (pc'=6039) & (x'=(x+21));
[] (pc=6039) -> (pc'=6038) & (x'=(x+61));
[] (pc=6038) -> (pc'=6037) & (x'=(x+93));
[] (pc=6037) -> (pc'=6036) & (x'=(x+100));
[] (pc=6036) -> (pc'=6035) & (x'=(x+71));
[] (pc=6035) -> (pc'=6034) & (x'=(x+25));
[] (pc=6034) -> (pc'=6033) & (x'=(x+67));
[] (pc=6033) -> (pc'=6032) & (x'=(x+91));
[] (pc=6032) -> (pc'=6031) & (x'=(x+74));
[] (pc=6031) -> (pc'=6030) & (x'=(x+83));
[] (pc=6030) -> (pc'=6029) & (x'=(x+87));
[] (pc=6029) -> (pc'=6028) & (x'=(x+4));
[] (pc=6028) -> (pc'=6027) & (x'=(x+96));
[] (pc=6027) -> (pc'=6026) & (x'=(x+17));
[] (pc=6026) -> (pc'=6025) & (x'=(x+94));
[] (pc=6025) -> (pc'=6024) & (x'=(x+44));
[] (pc=6024) -> (pc'=6023) & (x'=(x+32));
[] (pc=6023) -> (pc'=6022) & (x'=(x+2));
[] (pc=6022) -> (pc'=6021) & (x'=(x+11));
[] (pc=6021) -> (pc'=6020) & (x'=(x+3));
[] (pc=6020) -> (pc'=6019) & (x'=(x+12));
[] (pc=6019) -> (pc'=6018) & (x'=(x+62));
[] (pc=6018) -> (pc'=6017) & (x'=(x+84));
[] (pc=6017) -> (pc'=6016) & (x'=(x+12));
[] (pc=6016) -> (pc'=6015) & (x'=(x+44));
[] (pc=6015) -> (pc'=6014) & (x'=(x+16));
[] (pc=6014) -> (pc'=6013) & (x'=(x+49));
[] (pc=6013) -> (pc'=6012) & (x'=(x+40));
[] (pc=6012) -> (pc'=6011) & (x'=(x+25));
[] (pc=6011) -> (pc'=6010) & (x'=(x+46));
[] (pc=6010) -> (pc'=6009) & (x'=(x+28));
[] (pc=6009) -> (pc'=6008) & (x'=(x+50));
[] (pc=6008) -> (pc'=6007) & (x'=(x+72));
[] (pc=6007) -> (pc'=6006) & (x'=(x+11));
[] (pc=6006) -> (pc'=6005) & (x'=(x+57));
[] (pc=6005) -> (pc'=6004) & (x'=(x+12));
[] (pc=6004) -> (pc'=6003) & (x'=(x+10));
[] (pc=6003) -> (pc'=6002) & (x'=(x+58));
[] (pc=6002) -> (pc'=6001) & (x'=(x+17));
[] (pc=6001) -> (pc'=6000) & (x'=(x+46));
[] (pc=6000) -> (pc'=5999) & (x'=(x+46));
[] (pc=5999) -> (pc'=5998) & (x'=(x+58));
[] (pc=5998) -> (pc'=5997) & (x'=(x+91));
[] (pc=5997) -> (pc'=5996) & (x'=(x+74));
[] (pc=5996) -> (pc'=5995) & (x'=(x+36));
[] (pc=5995) -> (pc'=5994) & (x'=(x+4));
[] (pc=5994) -> (pc'=5993) & (x'=(x+88));
[] (pc=5993) -> (pc'=5992) & (x'=(x+32));
[] (pc=5992) -> (pc'=5991) & (x'=(x+93));
[] (pc=5991) -> (pc'=5990) & (x'=(x+5));
[] (pc=5990) -> (pc'=5989) & (x'=(x+5));
[] (pc=5989) -> (pc'=5988) & (x'=(x+84));
[] (pc=5988) -> (pc'=5987) & (x'=(x+44));
[] (pc=5987) -> (pc'=5986) & (x'=(x+42));
[] (pc=5986) -> (pc'=5985) & (x'=(x+10));
[] (pc=5985) -> (pc'=5984) & (x'=(x+77));
[] (pc=5984) -> (pc'=5983) & (x'=(x+3));
[] (pc=5983) -> (pc'=5982) & (x'=(x+62));
[] (pc=5982) -> (pc'=5981) & (x'=(x+9));
[] (pc=5981) -> (pc'=5980) & (x'=(x+90));
[] (pc=5980) -> (pc'=5979) & (x'=(x+79));
[] (pc=5979) -> (pc'=5978) & (x'=(x+53));
[] (pc=5978) -> (pc'=5977) & (x'=(x+82));
[] (pc=5977) -> (pc'=5976) & (x'=(x+14));
[] (pc=5976) -> (pc'=5975) & (x'=(x+13));
[] (pc=5975) -> (pc'=5974) & (x'=(x+40));
[] (pc=5974) -> (pc'=5973) & (x'=(x+36));
[] (pc=5973) -> (pc'=5972) & (x'=(x+39));
[] (pc=5972) -> (pc'=5971) & (x'=(x+7));
[] (pc=5971) -> (pc'=5970) & (x'=(x+33));
[] (pc=5970) -> (pc'=5969) & (x'=(x+44));
[] (pc=5969) -> (pc'=5968) & (x'=(x+70));
[] (pc=5968) -> (pc'=5967) & (x'=(x+55));
[] (pc=5967) -> (pc'=5966) & (x'=(x+12));
[] (pc=5966) -> (pc'=5965) & (x'=(x+81));
[] (pc=5965) -> (pc'=5964) & (x'=(x+38));
[] (pc=5964) -> (pc'=5963) & (x'=(x+80));
[] (pc=5963) -> (pc'=5962) & (x'=(x+100));
[] (pc=5962) -> (pc'=5961) & (x'=(x+6));
[] (pc=5961) -> (pc'=5960) & (x'=(x+69));
[] (pc=5960) -> (pc'=5959) & (x'=(x+67));
[] (pc=5959) -> (pc'=5958) & (x'=(x+22));
[] (pc=5958) -> (pc'=5957) & (x'=(x+26));
[] (pc=5957) -> (pc'=5956) & (x'=(x+34));
[] (pc=5956) -> (pc'=5955) & (x'=(x+31));
[] (pc=5955) -> (pc'=5954) & (x'=(x+14));
[] (pc=5954) -> (pc'=5953) & (x'=(x+71));
[] (pc=5953) -> (pc'=5952) & (x'=(x+67));
[] (pc=5952) -> (pc'=5951) & (x'=(x+3));
[] (pc=5951) -> (pc'=5950) & (x'=(x+2));
[] (pc=5950) -> (pc'=1) & (x'=(x+25));
[] (pc=1) -> (pc'=6098);
[] (pc=6098) -> (pc'=6098);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

