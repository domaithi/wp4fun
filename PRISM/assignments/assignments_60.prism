mdp

module TestMDP

pc : [0..42237] init 0;
x : [0..6000] init 0;
n : [0..60] init 0;

[] (pc=0) -> (pc'=42236) & (x'=0);
[] (pc=42236) -> (pc'=42235) & (n'=60);
[] (pc=42235) -> (pc'=42234) & (x'=(x+10));
[] (pc=42234) -> (pc'=42233) & (x'=(x+96));
[] (pc=42233) -> (pc'=42232) & (x'=(x+22));
[] (pc=42232) -> (pc'=42231) & (x'=(x+58));
[] (pc=42231) -> (pc'=42230) & (x'=(x+98));
[] (pc=42230) -> (pc'=42229) & (x'=(x+75));
[] (pc=42229) -> (pc'=42228) & (x'=(x+7));
[] (pc=42228) -> (pc'=42227) & (x'=(x+41));
[] (pc=42227) -> (pc'=42226) & (x'=(x+75));
[] (pc=42226) -> (pc'=42225) & (x'=(x+92));
[] (pc=42225) -> (pc'=42224) & (x'=(x+74));
[] (pc=42224) -> (pc'=42223) & (x'=(x+56));
[] (pc=42223) -> (pc'=42222) & (x'=(x+95));
[] (pc=42222) -> (pc'=42221) & (x'=(x+44));
[] (pc=42221) -> (pc'=42220) & (x'=(x+12));
[] (pc=42220) -> (pc'=42219) & (x'=(x+24));
[] (pc=42219) -> (pc'=42218) & (x'=(x+88));
[] (pc=42218) -> (pc'=42217) & (x'=(x+57));
[] (pc=42217) -> (pc'=42216) & (x'=(x+63));
[] (pc=42216) -> (pc'=42215) & (x'=(x+9));
[] (pc=42215) -> (pc'=42214) & (x'=(x+64));
[] (pc=42214) -> (pc'=42213) & (x'=(x+10));
[] (pc=42213) -> (pc'=42212) & (x'=(x+43));
[] (pc=42212) -> (pc'=42211) & (x'=(x+92));
[] (pc=42211) -> (pc'=42210) & (x'=(x+89));
[] (pc=42210) -> (pc'=42209) & (x'=(x+96));
[] (pc=42209) -> (pc'=42208) & (x'=(x+7));
[] (pc=42208) -> (pc'=42207) & (x'=(x+96));
[] (pc=42207) -> (pc'=42206) & (x'=(x+53));
[] (pc=42206) -> (pc'=42205) & (x'=(x+80));
[] (pc=42205) -> (pc'=42204) & (x'=(x+28));
[] (pc=42204) -> (pc'=42203) & (x'=(x+62));
[] (pc=42203) -> (pc'=42202) & (x'=(x+46));
[] (pc=42202) -> (pc'=42201) & (x'=(x+56));
[] (pc=42201) -> (pc'=42200) & (x'=(x+73));
[] (pc=42200) -> (pc'=42199) & (x'=(x+21));
[] (pc=42199) -> (pc'=42198) & (x'=(x+19));
[] (pc=42198) -> (pc'=42197) & (x'=(x+44));
[] (pc=42197) -> (pc'=42196) & (x'=(x+80));
[] (pc=42196) -> (pc'=42195) & (x'=(x+25));
[] (pc=42195) -> (pc'=42194) & (x'=(x+55));
[] (pc=42194) -> (pc'=42193) & (x'=(x+95));
[] (pc=42193) -> (pc'=42192) & (x'=(x+38));
[] (pc=42192) -> (pc'=42191) & (x'=(x+8));
[] (pc=42191) -> (pc'=42190) & (x'=(x+26));
[] (pc=42190) -> (pc'=42189) & (x'=(x+79));
[] (pc=42189) -> (pc'=42188) & (x'=(x+48));
[] (pc=42188) -> (pc'=42187) & (x'=(x+51));
[] (pc=42187) -> (pc'=42186) & (x'=(x+38));
[] (pc=42186) -> (pc'=42185) & (x'=(x+67));
[] (pc=42185) -> (pc'=42184) & (x'=(x+5));
[] (pc=42184) -> (pc'=42183) & (x'=(x+64));
[] (pc=42183) -> (pc'=42182) & (x'=(x+86));
[] (pc=42182) -> (pc'=42181) & (x'=(x+12));
[] (pc=42181) -> (pc'=42180) & (x'=(x+26));
[] (pc=42180) -> (pc'=42179) & (x'=(x+9));
[] (pc=42179) -> (pc'=42178) & (x'=(x+13));
[] (pc=42178) -> (pc'=42177) & (x'=(x+36));
[] (pc=42177) -> (pc'=42176) & (x'=(x+43));
[] (pc=42176) -> (pc'=1) & (x'=(x+31));
[] (pc=1) -> (pc'=42237);
[] (pc=42237) -> (pc'=42237);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

