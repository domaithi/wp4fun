mdp

module TestMDP

pc : [0..41987] init 0;
x : [0..5600] init 0;
n : [0..56] init 0;

[] (pc=0) -> (pc'=41986) & (x'=0);
[] (pc=41986) -> (pc'=41985) & (n'=56);
[] (pc=41985) -> (pc'=41984) & (x'=(x+1));
[] (pc=41984) -> (pc'=41983) & (x'=(x+11));
[] (pc=41983) -> (pc'=41982) & (x'=(x+11));
[] (pc=41982) -> (pc'=41981) & (x'=(x+6));
[] (pc=41981) -> (pc'=41980) & (x'=(x+11));
[] (pc=41980) -> (pc'=41979) & (x'=(x+44));
[] (pc=41979) -> (pc'=41978) & (x'=(x+46));
[] (pc=41978) -> (pc'=41977) & (x'=(x+57));
[] (pc=41977) -> (pc'=41976) & (x'=(x+94));
[] (pc=41976) -> (pc'=41975) & (x'=(x+18));
[] (pc=41975) -> (pc'=41974) & (x'=(x+74));
[] (pc=41974) -> (pc'=41973) & (x'=(x+100));
[] (pc=41973) -> (pc'=41972) & (x'=(x+2));
[] (pc=41972) -> (pc'=41971) & (x'=(x+73));
[] (pc=41971) -> (pc'=41970) & (x'=(x+56));
[] (pc=41970) -> (pc'=41969) & (x'=(x+77));
[] (pc=41969) -> (pc'=41968) & (x'=(x+23));
[] (pc=41968) -> (pc'=41967) & (x'=(x+53));
[] (pc=41967) -> (pc'=41966) & (x'=(x+29));
[] (pc=41966) -> (pc'=41965) & (x'=(x+67));
[] (pc=41965) -> (pc'=41964) & (x'=(x+69));
[] (pc=41964) -> (pc'=41963) & (x'=(x+66));
[] (pc=41963) -> (pc'=41962) & (x'=(x+78));
[] (pc=41962) -> (pc'=41961) & (x'=(x+74));
[] (pc=41961) -> (pc'=41960) & (x'=(x+43));
[] (pc=41960) -> (pc'=41959) & (x'=(x+78));
[] (pc=41959) -> (pc'=41958) & (x'=(x+10));
[] (pc=41958) -> (pc'=41957) & (x'=(x+14));
[] (pc=41957) -> (pc'=41956) & (x'=(x+83));
[] (pc=41956) -> (pc'=41955) & (x'=(x+50));
[] (pc=41955) -> (pc'=41954) & (x'=(x+78));
[] (pc=41954) -> (pc'=41953) & (x'=(x+65));
[] (pc=41953) -> (pc'=41952) & (x'=(x+40));
[] (pc=41952) -> (pc'=41951) & (x'=(x+78));
[] (pc=41951) -> (pc'=41950) & (x'=(x+67));
[] (pc=41950) -> (pc'=41949) & (x'=(x+16));
[] (pc=41949) -> (pc'=41948) & (x'=(x+12));
[] (pc=41948) -> (pc'=41947) & (x'=(x+37));
[] (pc=41947) -> (pc'=41946) & (x'=(x+33));
[] (pc=41946) -> (pc'=41945) & (x'=(x+44));
[] (pc=41945) -> (pc'=41944) & (x'=(x+65));
[] (pc=41944) -> (pc'=41943) & (x'=(x+89));
[] (pc=41943) -> (pc'=41942) & (x'=(x+45));
[] (pc=41942) -> (pc'=41941) & (x'=(x+69));
[] (pc=41941) -> (pc'=41940) & (x'=(x+55));
[] (pc=41940) -> (pc'=41939) & (x'=(x+60));
[] (pc=41939) -> (pc'=41938) & (x'=(x+86));
[] (pc=41938) -> (pc'=41937) & (x'=(x+30));
[] (pc=41937) -> (pc'=41936) & (x'=(x+54));
[] (pc=41936) -> (pc'=41935) & (x'=(x+74));
[] (pc=41935) -> (pc'=41934) & (x'=(x+11));
[] (pc=41934) -> (pc'=41933) & (x'=(x+21));
[] (pc=41933) -> (pc'=41932) & (x'=(x+73));
[] (pc=41932) -> (pc'=41931) & (x'=(x+14));
[] (pc=41931) -> (pc'=41930) & (x'=(x+93));
[] (pc=41930) -> (pc'=1) & (x'=(x+53));
[] (pc=1) -> (pc'=41987);
[] (pc=41987) -> (pc'=41987);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

