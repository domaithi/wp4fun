mdp

module TestMDP

pc : [0..43614] init 0;
x : [0..7900] init 0;
n : [0..79] init 0;

[] (pc=0) -> (pc'=43613) & (x'=0);
[] (pc=43613) -> (pc'=43612) & (n'=79);
[] (pc=43612) -> (pc'=43611) & (x'=(x+4));
[] (pc=43611) -> (pc'=43610) & (x'=(x+61));
[] (pc=43610) -> (pc'=43609) & (x'=(x+92));
[] (pc=43609) -> (pc'=43608) & (x'=(x+17));
[] (pc=43608) -> (pc'=43607) & (x'=(x+97));
[] (pc=43607) -> (pc'=43606) & (x'=(x+87));
[] (pc=43606) -> (pc'=43605) & (x'=(x+27));
[] (pc=43605) -> (pc'=43604) & (x'=(x+59));
[] (pc=43604) -> (pc'=43603) & (x'=(x+89));
[] (pc=43603) -> (pc'=43602) & (x'=(x+55));
[] (pc=43602) -> (pc'=43601) & (x'=(x+49));
[] (pc=43601) -> (pc'=43600) & (x'=(x+1));
[] (pc=43600) -> (pc'=43599) & (x'=(x+88));
[] (pc=43599) -> (pc'=43598) & (x'=(x+49));
[] (pc=43598) -> (pc'=43597) & (x'=(x+28));
[] (pc=43597) -> (pc'=43596) & (x'=(x+93));
[] (pc=43596) -> (pc'=43595) & (x'=(x+42));
[] (pc=43595) -> (pc'=43594) & (x'=(x+34));
[] (pc=43594) -> (pc'=43593) & (x'=(x+60));
[] (pc=43593) -> (pc'=43592) & (x'=(x+76));
[] (pc=43592) -> (pc'=43591) & (x'=(x+61));
[] (pc=43591) -> (pc'=43590) & (x'=(x+99));
[] (pc=43590) -> (pc'=43589) & (x'=(x+59));
[] (pc=43589) -> (pc'=43588) & (x'=(x+25));
[] (pc=43588) -> (pc'=43587) & (x'=(x+50));
[] (pc=43587) -> (pc'=43586) & (x'=(x+9));
[] (pc=43586) -> (pc'=43585) & (x'=(x+19));
[] (pc=43585) -> (pc'=43584) & (x'=(x+49));
[] (pc=43584) -> (pc'=43583) & (x'=(x+88));
[] (pc=43583) -> (pc'=43582) & (x'=(x+84));
[] (pc=43582) -> (pc'=43581) & (x'=(x+73));
[] (pc=43581) -> (pc'=43580) & (x'=(x+1));
[] (pc=43580) -> (pc'=43579) & (x'=(x+51));
[] (pc=43579) -> (pc'=43578) & (x'=(x+7));
[] (pc=43578) -> (pc'=43577) & (x'=(x+12));
[] (pc=43577) -> (pc'=43576) & (x'=(x+89));
[] (pc=43576) -> (pc'=43575) & (x'=(x+93));
[] (pc=43575) -> (pc'=43574) & (x'=(x+85));
[] (pc=43574) -> (pc'=43573) & (x'=(x+2));
[] (pc=43573) -> (pc'=43572) & (x'=(x+97));
[] (pc=43572) -> (pc'=43571) & (x'=(x+10));
[] (pc=43571) -> (pc'=43570) & (x'=(x+59));
[] (pc=43570) -> (pc'=43569) & (x'=(x+20));
[] (pc=43569) -> (pc'=43568) & (x'=(x+64));
[] (pc=43568) -> (pc'=43567) & (x'=(x+57));
[] (pc=43567) -> (pc'=43566) & (x'=(x+12));
[] (pc=43566) -> (pc'=43565) & (x'=(x+10));
[] (pc=43565) -> (pc'=43564) & (x'=(x+93));
[] (pc=43564) -> (pc'=43563) & (x'=(x+75));
[] (pc=43563) -> (pc'=43562) & (x'=(x+81));
[] (pc=43562) -> (pc'=43561) & (x'=(x+37));
[] (pc=43561) -> (pc'=43560) & (x'=(x+43));
[] (pc=43560) -> (pc'=43559) & (x'=(x+8));
[] (pc=43559) -> (pc'=43558) & (x'=(x+43));
[] (pc=43558) -> (pc'=43557) & (x'=(x+84));
[] (pc=43557) -> (pc'=43556) & (x'=(x+18));
[] (pc=43556) -> (pc'=43555) & (x'=(x+54));
[] (pc=43555) -> (pc'=43554) & (x'=(x+12));
[] (pc=43554) -> (pc'=43553) & (x'=(x+80));
[] (pc=43553) -> (pc'=43552) & (x'=(x+37));
[] (pc=43552) -> (pc'=43551) & (x'=(x+40));
[] (pc=43551) -> (pc'=43550) & (x'=(x+62));
[] (pc=43550) -> (pc'=43549) & (x'=(x+37));
[] (pc=43549) -> (pc'=43548) & (x'=(x+45));
[] (pc=43548) -> (pc'=43547) & (x'=(x+93));
[] (pc=43547) -> (pc'=43546) & (x'=(x+31));
[] (pc=43546) -> (pc'=43545) & (x'=(x+71));
[] (pc=43545) -> (pc'=43544) & (x'=(x+98));
[] (pc=43544) -> (pc'=43543) & (x'=(x+11));
[] (pc=43543) -> (pc'=43542) & (x'=(x+1));
[] (pc=43542) -> (pc'=43541) & (x'=(x+69));
[] (pc=43541) -> (pc'=43540) & (x'=(x+16));
[] (pc=43540) -> (pc'=43539) & (x'=(x+96));
[] (pc=43539) -> (pc'=43538) & (x'=(x+36));
[] (pc=43538) -> (pc'=43537) & (x'=(x+48));
[] (pc=43537) -> (pc'=43536) & (x'=(x+94));
[] (pc=43536) -> (pc'=43535) & (x'=(x+71));
[] (pc=43535) -> (pc'=43534) & (x'=(x+95));
[] (pc=43534) -> (pc'=1) & (x'=(x+93));
[] (pc=1) -> (pc'=43614);
[] (pc=43614) -> (pc'=43614);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

