mdp

module TestMDP

pc : [0..44044] init 0;
x : [0..8400] init 0;
n : [0..84] init 0;

[] (pc=0) -> (pc'=44043) & (x'=0);
[] (pc=44043) -> (pc'=44042) & (n'=84);
[] (pc=44042) -> (pc'=44041) & (x'=(x+65));
[] (pc=44041) -> (pc'=44040) & (x'=(x+94));
[] (pc=44040) -> (pc'=44039) & (x'=(x+2));
[] (pc=44039) -> (pc'=44038) & (x'=(x+57));
[] (pc=44038) -> (pc'=44037) & (x'=(x+6));
[] (pc=44037) -> (pc'=44036) & (x'=(x+9));
[] (pc=44036) -> (pc'=44035) & (x'=(x+65));
[] (pc=44035) -> (pc'=44034) & (x'=(x+94));
[] (pc=44034) -> (pc'=44033) & (x'=(x+81));
[] (pc=44033) -> (pc'=44032) & (x'=(x+63));
[] (pc=44032) -> (pc'=44031) & (x'=(x+15));
[] (pc=44031) -> (pc'=44030) & (x'=(x+12));
[] (pc=44030) -> (pc'=44029) & (x'=(x+49));
[] (pc=44029) -> (pc'=44028) & (x'=(x+74));
[] (pc=44028) -> (pc'=44027) & (x'=(x+50));
[] (pc=44027) -> (pc'=44026) & (x'=(x+95));
[] (pc=44026) -> (pc'=44025) & (x'=(x+82));
[] (pc=44025) -> (pc'=44024) & (x'=(x+23));
[] (pc=44024) -> (pc'=44023) & (x'=(x+68));
[] (pc=44023) -> (pc'=44022) & (x'=(x+51));
[] (pc=44022) -> (pc'=44021) & (x'=(x+85));
[] (pc=44021) -> (pc'=44020) & (x'=(x+49));
[] (pc=44020) -> (pc'=44019) & (x'=(x+80));
[] (pc=44019) -> (pc'=44018) & (x'=(x+8));
[] (pc=44018) -> (pc'=44017) & (x'=(x+15));
[] (pc=44017) -> (pc'=44016) & (x'=(x+3));
[] (pc=44016) -> (pc'=44015) & (x'=(x+7));
[] (pc=44015) -> (pc'=44014) & (x'=(x+96));
[] (pc=44014) -> (pc'=44013) & (x'=(x+86));
[] (pc=44013) -> (pc'=44012) & (x'=(x+87));
[] (pc=44012) -> (pc'=44011) & (x'=(x+64));
[] (pc=44011) -> (pc'=44010) & (x'=(x+69));
[] (pc=44010) -> (pc'=44009) & (x'=(x+68));
[] (pc=44009) -> (pc'=44008) & (x'=(x+95));
[] (pc=44008) -> (pc'=44007) & (x'=(x+79));
[] (pc=44007) -> (pc'=44006) & (x'=(x+76));
[] (pc=44006) -> (pc'=44005) & (x'=(x+28));
[] (pc=44005) -> (pc'=44004) & (x'=(x+70));
[] (pc=44004) -> (pc'=44003) & (x'=(x+87));
[] (pc=44003) -> (pc'=44002) & (x'=(x+58));
[] (pc=44002) -> (pc'=44001) & (x'=(x+21));
[] (pc=44001) -> (pc'=44000) & (x'=(x+81));
[] (pc=44000) -> (pc'=43999) & (x'=(x+8));
[] (pc=43999) -> (pc'=43998) & (x'=(x+59));
[] (pc=43998) -> (pc'=43997) & (x'=(x+66));
[] (pc=43997) -> (pc'=43996) & (x'=(x+73));
[] (pc=43996) -> (pc'=43995) & (x'=(x+13));
[] (pc=43995) -> (pc'=43994) & (x'=(x+4));
[] (pc=43994) -> (pc'=43993) & (x'=(x+97));
[] (pc=43993) -> (pc'=43992) & (x'=(x+50));
[] (pc=43992) -> (pc'=43991) & (x'=(x+63));
[] (pc=43991) -> (pc'=43990) & (x'=(x+89));
[] (pc=43990) -> (pc'=43989) & (x'=(x+95));
[] (pc=43989) -> (pc'=43988) & (x'=(x+10));
[] (pc=43988) -> (pc'=43987) & (x'=(x+87));
[] (pc=43987) -> (pc'=43986) & (x'=(x+7));
[] (pc=43986) -> (pc'=43985) & (x'=(x+54));
[] (pc=43985) -> (pc'=43984) & (x'=(x+95));
[] (pc=43984) -> (pc'=43983) & (x'=(x+72));
[] (pc=43983) -> (pc'=43982) & (x'=(x+44));
[] (pc=43982) -> (pc'=43981) & (x'=(x+40));
[] (pc=43981) -> (pc'=43980) & (x'=(x+17));
[] (pc=43980) -> (pc'=43979) & (x'=(x+78));
[] (pc=43979) -> (pc'=43978) & (x'=(x+78));
[] (pc=43978) -> (pc'=43977) & (x'=(x+23));
[] (pc=43977) -> (pc'=43976) & (x'=(x+78));
[] (pc=43976) -> (pc'=43975) & (x'=(x+12));
[] (pc=43975) -> (pc'=43974) & (x'=(x+28));
[] (pc=43974) -> (pc'=43973) & (x'=(x+37));
[] (pc=43973) -> (pc'=43972) & (x'=(x+28));
[] (pc=43972) -> (pc'=43971) & (x'=(x+77));
[] (pc=43971) -> (pc'=43970) & (x'=(x+89));
[] (pc=43970) -> (pc'=43969) & (x'=(x+55));
[] (pc=43969) -> (pc'=43968) & (x'=(x+80));
[] (pc=43968) -> (pc'=43967) & (x'=(x+33));
[] (pc=43967) -> (pc'=43966) & (x'=(x+47));
[] (pc=43966) -> (pc'=43965) & (x'=(x+20));
[] (pc=43965) -> (pc'=43964) & (x'=(x+55));
[] (pc=43964) -> (pc'=43963) & (x'=(x+94));
[] (pc=43963) -> (pc'=43962) & (x'=(x+7));
[] (pc=43962) -> (pc'=43961) & (x'=(x+34));
[] (pc=43961) -> (pc'=43960) & (x'=(x+54));
[] (pc=43960) -> (pc'=43959) & (x'=(x+68));
[] (pc=43959) -> (pc'=1) & (x'=(x+91));
[] (pc=1) -> (pc'=44044);
[] (pc=44044) -> (pc'=44044);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

