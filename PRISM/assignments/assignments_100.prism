mdp

module TestMDP

pc : [0..118] init 0;
x : [0..10000] init 0;
n : [0..100] init 0;

[] (pc=0) -> (pc'=117) & (x'=0);
[] (pc=117) -> (pc'=116) & (n'=100);
[] (pc=116) -> (pc'=115) & (x'=(x+56));
[] (pc=115) -> (pc'=114) & (x'=(x+9));
[] (pc=114) -> (pc'=113) & (x'=(x+52));
[] (pc=113) -> (pc'=112) & (x'=(x+46));
[] (pc=112) -> (pc'=111) & (x'=(x+39));
[] (pc=111) -> (pc'=110) & (x'=(x+88));
[] (pc=110) -> (pc'=109) & (x'=(x+33));
[] (pc=109) -> (pc'=108) & (x'=(x+81));
[] (pc=108) -> (pc'=107) & (x'=(x+43));
[] (pc=107) -> (pc'=106) & (x'=(x+74));
[] (pc=106) -> (pc'=105) & (x'=(x+88));
[] (pc=105) -> (pc'=104) & (x'=(x+86));
[] (pc=104) -> (pc'=103) & (x'=(x+12));
[] (pc=103) -> (pc'=102) & (x'=(x+49));
[] (pc=102) -> (pc'=101) & (x'=(x+13));
[] (pc=101) -> (pc'=100) & (x'=(x+76));
[] (pc=100) -> (pc'=99) & (x'=(x+30));
[] (pc=99) -> (pc'=98) & (x'=(x+39));
[] (pc=98) -> (pc'=97) & (x'=(x+26));
[] (pc=97) -> (pc'=96) & (x'=(x+56));
[] (pc=96) -> (pc'=95) & (x'=(x+5));
[] (pc=95) -> (pc'=94) & (x'=(x+7));
[] (pc=94) -> (pc'=93) & (x'=(x+96));
[] (pc=93) -> (pc'=92) & (x'=(x+17));
[] (pc=92) -> (pc'=91) & (x'=(x+23));
[] (pc=91) -> (pc'=90) & (x'=(x+78));
[] (pc=90) -> (pc'=89) & (x'=(x+13));
[] (pc=89) -> (pc'=88) & (x'=(x+68));
[] (pc=88) -> (pc'=87) & (x'=(x+51));
[] (pc=87) -> (pc'=86) & (x'=(x+53));
[] (pc=86) -> (pc'=85) & (x'=(x+9));
[] (pc=85) -> (pc'=84) & (x'=(x+47));
[] (pc=84) -> (pc'=83) & (x'=(x+79));
[] (pc=83) -> (pc'=82) & (x'=(x+67));
[] (pc=82) -> (pc'=81) & (x'=(x+17));
[] (pc=81) -> (pc'=80) & (x'=(x+20));
[] (pc=80) -> (pc'=79) & (x'=(x+95));
[] (pc=79) -> (pc'=78) & (x'=(x+95));
[] (pc=78) -> (pc'=77) & (x'=(x+57));
[] (pc=77) -> (pc'=76) & (x'=(x+16));
[] (pc=76) -> (pc'=75) & (x'=(x+74));
[] (pc=75) -> (pc'=74) & (x'=(x+5));
[] (pc=74) -> (pc'=73) & (x'=(x+29));
[] (pc=73) -> (pc'=72) & (x'=(x+20));
[] (pc=72) -> (pc'=71) & (x'=(x+14));
[] (pc=71) -> (pc'=70) & (x'=(x+73));
[] (pc=70) -> (pc'=69) & (x'=(x+41));
[] (pc=69) -> (pc'=68) & (x'=(x+59));
[] (pc=68) -> (pc'=67) & (x'=(x+78));
[] (pc=67) -> (pc'=66) & (x'=(x+23));
[] (pc=66) -> (pc'=65) & (x'=(x+59));
[] (pc=65) -> (pc'=64) & (x'=(x+25));
[] (pc=64) -> (pc'=63) & (x'=(x+100));
[] (pc=63) -> (pc'=62) & (x'=(x+77));
[] (pc=62) -> (pc'=61) & (x'=(x+53));
[] (pc=61) -> (pc'=60) & (x'=(x+14));
[] (pc=60) -> (pc'=59) & (x'=(x+94));
[] (pc=59) -> (pc'=58) & (x'=(x+27));
[] (pc=58) -> (pc'=57) & (x'=(x+31));
[] (pc=57) -> (pc'=56) & (x'=(x+49));
[] (pc=56) -> (pc'=55) & (x'=(x+47));
[] (pc=55) -> (pc'=54) & (x'=(x+70));
[] (pc=54) -> (pc'=53) & (x'=(x+3));
[] (pc=53) -> (pc'=52) & (x'=(x+6));
[] (pc=52) -> (pc'=51) & (x'=(x+23));
[] (pc=51) -> (pc'=50) & (x'=(x+60));
[] (pc=50) -> (pc'=49) & (x'=(x+19));
[] (pc=49) -> (pc'=48) & (x'=(x+71));
[] (pc=48) -> (pc'=47) & (x'=(x+23));
[] (pc=47) -> (pc'=46) & (x'=(x+44));
[] (pc=46) -> (pc'=45) & (x'=(x+51));
[] (pc=45) -> (pc'=44) & (x'=(x+59));
[] (pc=44) -> (pc'=43) & (x'=(x+80));
[] (pc=43) -> (pc'=42) & (x'=(x+89));
[] (pc=42) -> (pc'=41) & (x'=(x+19));
[] (pc=41) -> (pc'=40) & (x'=(x+2));
[] (pc=40) -> (pc'=39) & (x'=(x+78));
[] (pc=39) -> (pc'=38) & (x'=(x+32));
[] (pc=38) -> (pc'=37) & (x'=(x+48));
[] (pc=37) -> (pc'=36) & (x'=(x+8));
[] (pc=36) -> (pc'=35) & (x'=(x+31));
[] (pc=35) -> (pc'=34) & (x'=(x+36));
[] (pc=34) -> (pc'=33) & (x'=(x+36));
[] (pc=33) -> (pc'=32) & (x'=(x+12));
[] (pc=32) -> (pc'=31) & (x'=(x+68));
[] (pc=31) -> (pc'=30) & (x'=(x+86));
[] (pc=30) -> (pc'=29) & (x'=(x+22));
[] (pc=29) -> (pc'=28) & (x'=(x+68));
[] (pc=28) -> (pc'=27) & (x'=(x+72));
[] (pc=27) -> (pc'=26) & (x'=(x+72));
[] (pc=26) -> (pc'=25) & (x'=(x+12));
[] (pc=25) -> (pc'=24) & (x'=(x+29));
[] (pc=24) -> (pc'=23) & (x'=(x+12));
[] (pc=23) -> (pc'=22) & (x'=(x+5));
[] (pc=22) -> (pc'=21) & (x'=(x+54));
[] (pc=21) -> (pc'=20) & (x'=(x+17));
[] (pc=20) -> (pc'=19) & (x'=(x+57));
[] (pc=19) -> (pc'=18) & (x'=(x+78));
[] (pc=18) -> (pc'=17) & (x'=(x+71));
[] (pc=17) -> (pc'=1) & (x'=(x+31));
[] (pc=1) -> (pc'=118);
[] (pc=118) -> (pc'=118);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

