mdp

module TestMDP

pc : [0..1433] init 0;
x : [0..11200] init 0;
n : [0..112] init 0;

[] (pc=0) -> (pc'=1432) & (x'=0);
[] (pc=1432) -> (pc'=1431) & (n'=112);
[] (pc=1431) -> (pc'=1430) & (x'=(x+99));
[] (pc=1430) -> (pc'=1429) & (x'=(x+14));
[] (pc=1429) -> (pc'=1428) & (x'=(x+46));
[] (pc=1428) -> (pc'=1427) & (x'=(x+38));
[] (pc=1427) -> (pc'=1426) & (x'=(x+60));
[] (pc=1426) -> (pc'=1425) & (x'=(x+11));
[] (pc=1425) -> (pc'=1424) & (x'=(x+85));
[] (pc=1424) -> (pc'=1423) & (x'=(x+100));
[] (pc=1423) -> (pc'=1422) & (x'=(x+89));
[] (pc=1422) -> (pc'=1421) & (x'=(x+33));
[] (pc=1421) -> (pc'=1420) & (x'=(x+85));
[] (pc=1420) -> (pc'=1419) & (x'=(x+66));
[] (pc=1419) -> (pc'=1418) & (x'=(x+21));
[] (pc=1418) -> (pc'=1417) & (x'=(x+98));
[] (pc=1417) -> (pc'=1416) & (x'=(x+83));
[] (pc=1416) -> (pc'=1415) & (x'=(x+68));
[] (pc=1415) -> (pc'=1414) & (x'=(x+78));
[] (pc=1414) -> (pc'=1413) & (x'=(x+58));
[] (pc=1413) -> (pc'=1412) & (x'=(x+32));
[] (pc=1412) -> (pc'=1411) & (x'=(x+1));
[] (pc=1411) -> (pc'=1410) & (x'=(x+64));
[] (pc=1410) -> (pc'=1409) & (x'=(x+96));
[] (pc=1409) -> (pc'=1408) & (x'=(x+37));
[] (pc=1408) -> (pc'=1407) & (x'=(x+79));
[] (pc=1407) -> (pc'=1406) & (x'=(x+36));
[] (pc=1406) -> (pc'=1405) & (x'=(x+8));
[] (pc=1405) -> (pc'=1404) & (x'=(x+94));
[] (pc=1404) -> (pc'=1403) & (x'=(x+16));
[] (pc=1403) -> (pc'=1402) & (x'=(x+69));
[] (pc=1402) -> (pc'=1401) & (x'=(x+56));
[] (pc=1401) -> (pc'=1400) & (x'=(x+11));
[] (pc=1400) -> (pc'=1399) & (x'=(x+36));
[] (pc=1399) -> (pc'=1398) & (x'=(x+83));
[] (pc=1398) -> (pc'=1397) & (x'=(x+56));
[] (pc=1397) -> (pc'=1396) & (x'=(x+37));
[] (pc=1396) -> (pc'=1395) & (x'=(x+20));
[] (pc=1395) -> (pc'=1394) & (x'=(x+28));
[] (pc=1394) -> (pc'=1393) & (x'=(x+78));
[] (pc=1393) -> (pc'=1392) & (x'=(x+96));
[] (pc=1392) -> (pc'=1391) & (x'=(x+86));
[] (pc=1391) -> (pc'=1390) & (x'=(x+30));
[] (pc=1390) -> (pc'=1389) & (x'=(x+39));
[] (pc=1389) -> (pc'=1388) & (x'=(x+55));
[] (pc=1388) -> (pc'=1387) & (x'=(x+79));
[] (pc=1387) -> (pc'=1386) & (x'=(x+75));
[] (pc=1386) -> (pc'=1385) & (x'=(x+32));
[] (pc=1385) -> (pc'=1384) & (x'=(x+25));
[] (pc=1384) -> (pc'=1383) & (x'=(x+67));
[] (pc=1383) -> (pc'=1382) & (x'=(x+43));
[] (pc=1382) -> (pc'=1381) & (x'=(x+28));
[] (pc=1381) -> (pc'=1380) & (x'=(x+64));
[] (pc=1380) -> (pc'=1379) & (x'=(x+7));
[] (pc=1379) -> (pc'=1378) & (x'=(x+90));
[] (pc=1378) -> (pc'=1377) & (x'=(x+18));
[] (pc=1377) -> (pc'=1376) & (x'=(x+72));
[] (pc=1376) -> (pc'=1375) & (x'=(x+57));
[] (pc=1375) -> (pc'=1374) & (x'=(x+12));
[] (pc=1374) -> (pc'=1373) & (x'=(x+57));
[] (pc=1373) -> (pc'=1372) & (x'=(x+21));
[] (pc=1372) -> (pc'=1371) & (x'=(x+40));
[] (pc=1371) -> (pc'=1370) & (x'=(x+37));
[] (pc=1370) -> (pc'=1369) & (x'=(x+92));
[] (pc=1369) -> (pc'=1368) & (x'=(x+97));
[] (pc=1368) -> (pc'=1367) & (x'=(x+94));
[] (pc=1367) -> (pc'=1366) & (x'=(x+41));
[] (pc=1366) -> (pc'=1365) & (x'=(x+8));
[] (pc=1365) -> (pc'=1364) & (x'=(x+38));
[] (pc=1364) -> (pc'=1363) & (x'=(x+9));
[] (pc=1363) -> (pc'=1362) & (x'=(x+59));
[] (pc=1362) -> (pc'=1361) & (x'=(x+87));
[] (pc=1361) -> (pc'=1360) & (x'=(x+38));
[] (pc=1360) -> (pc'=1359) & (x'=(x+78));
[] (pc=1359) -> (pc'=1358) & (x'=(x+96));
[] (pc=1358) -> (pc'=1357) & (x'=(x+95));
[] (pc=1357) -> (pc'=1356) & (x'=(x+61));
[] (pc=1356) -> (pc'=1355) & (x'=(x+88));
[] (pc=1355) -> (pc'=1354) & (x'=(x+90));
[] (pc=1354) -> (pc'=1353) & (x'=(x+42));
[] (pc=1353) -> (pc'=1352) & (x'=(x+21));
[] (pc=1352) -> (pc'=1351) & (x'=(x+80));
[] (pc=1351) -> (pc'=1350) & (x'=(x+61));
[] (pc=1350) -> (pc'=1349) & (x'=(x+33));
[] (pc=1349) -> (pc'=1348) & (x'=(x+25));
[] (pc=1348) -> (pc'=1347) & (x'=(x+2));
[] (pc=1347) -> (pc'=1346) & (x'=(x+11));
[] (pc=1346) -> (pc'=1345) & (x'=(x+62));
[] (pc=1345) -> (pc'=1344) & (x'=(x+60));
[] (pc=1344) -> (pc'=1343) & (x'=(x+47));
[] (pc=1343) -> (pc'=1342) & (x'=(x+59));
[] (pc=1342) -> (pc'=1341) & (x'=(x+66));
[] (pc=1341) -> (pc'=1340) & (x'=(x+32));
[] (pc=1340) -> (pc'=1339) & (x'=(x+93));
[] (pc=1339) -> (pc'=1338) & (x'=(x+63));
[] (pc=1338) -> (pc'=1337) & (x'=(x+35));
[] (pc=1337) -> (pc'=1336) & (x'=(x+5));
[] (pc=1336) -> (pc'=1335) & (x'=(x+58));
[] (pc=1335) -> (pc'=1334) & (x'=(x+91));
[] (pc=1334) -> (pc'=1333) & (x'=(x+26));
[] (pc=1333) -> (pc'=1332) & (x'=(x+47));
[] (pc=1332) -> (pc'=1331) & (x'=(x+38));
[] (pc=1331) -> (pc'=1330) & (x'=(x+77));
[] (pc=1330) -> (pc'=1329) & (x'=(x+32));
[] (pc=1329) -> (pc'=1328) & (x'=(x+75));
[] (pc=1328) -> (pc'=1327) & (x'=(x+18));
[] (pc=1327) -> (pc'=1326) & (x'=(x+18));
[] (pc=1326) -> (pc'=1325) & (x'=(x+51));
[] (pc=1325) -> (pc'=1324) & (x'=(x+52));
[] (pc=1324) -> (pc'=1323) & (x'=(x+60));
[] (pc=1323) -> (pc'=1322) & (x'=(x+79));
[] (pc=1322) -> (pc'=1321) & (x'=(x+76));
[] (pc=1321) -> (pc'=1320) & (x'=(x+5));
[] (pc=1320) -> (pc'=1) & (x'=(x+16));
[] (pc=1) -> (pc'=1433);
[] (pc=1433) -> (pc'=1433);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

