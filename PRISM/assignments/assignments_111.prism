mdp

module TestMDP

pc : [0..1319] init 0;
x : [0..11100] init 0;
n : [0..111] init 0;

[] (pc=0) -> (pc'=1318) & (x'=0);
[] (pc=1318) -> (pc'=1317) & (n'=111);
[] (pc=1317) -> (pc'=1316) & (x'=(x+78));
[] (pc=1316) -> (pc'=1315) & (x'=(x+89));
[] (pc=1315) -> (pc'=1314) & (x'=(x+15));
[] (pc=1314) -> (pc'=1313) & (x'=(x+72));
[] (pc=1313) -> (pc'=1312) & (x'=(x+95));
[] (pc=1312) -> (pc'=1311) & (x'=(x+71));
[] (pc=1311) -> (pc'=1310) & (x'=(x+57));
[] (pc=1310) -> (pc'=1309) & (x'=(x+36));
[] (pc=1309) -> (pc'=1308) & (x'=(x+21));
[] (pc=1308) -> (pc'=1307) & (x'=(x+20));
[] (pc=1307) -> (pc'=1306) & (x'=(x+45));
[] (pc=1306) -> (pc'=1305) & (x'=(x+92));
[] (pc=1305) -> (pc'=1304) & (x'=(x+59));
[] (pc=1304) -> (pc'=1303) & (x'=(x+72));
[] (pc=1303) -> (pc'=1302) & (x'=(x+94));
[] (pc=1302) -> (pc'=1301) & (x'=(x+15));
[] (pc=1301) -> (pc'=1300) & (x'=(x+49));
[] (pc=1300) -> (pc'=1299) & (x'=(x+20));
[] (pc=1299) -> (pc'=1298) & (x'=(x+46));
[] (pc=1298) -> (pc'=1297) & (x'=(x+98));
[] (pc=1297) -> (pc'=1296) & (x'=(x+44));
[] (pc=1296) -> (pc'=1295) & (x'=(x+83));
[] (pc=1295) -> (pc'=1294) & (x'=(x+75));
[] (pc=1294) -> (pc'=1293) & (x'=(x+69));
[] (pc=1293) -> (pc'=1292) & (x'=(x+47));
[] (pc=1292) -> (pc'=1291) & (x'=(x+77));
[] (pc=1291) -> (pc'=1290) & (x'=(x+21));
[] (pc=1290) -> (pc'=1289) & (x'=(x+9));
[] (pc=1289) -> (pc'=1288) & (x'=(x+69));
[] (pc=1288) -> (pc'=1287) & (x'=(x+96));
[] (pc=1287) -> (pc'=1286) & (x'=(x+2));
[] (pc=1286) -> (pc'=1285) & (x'=(x+82));
[] (pc=1285) -> (pc'=1284) & (x'=(x+57));
[] (pc=1284) -> (pc'=1283) & (x'=(x+86));
[] (pc=1283) -> (pc'=1282) & (x'=(x+16));
[] (pc=1282) -> (pc'=1281) & (x'=(x+45));
[] (pc=1281) -> (pc'=1280) & (x'=(x+20));
[] (pc=1280) -> (pc'=1279) & (x'=(x+80));
[] (pc=1279) -> (pc'=1278) & (x'=(x+1));
[] (pc=1278) -> (pc'=1277) & (x'=(x+40));
[] (pc=1277) -> (pc'=1276) & (x'=(x+64));
[] (pc=1276) -> (pc'=1275) & (x'=(x+58));
[] (pc=1275) -> (pc'=1274) & (x'=(x+97));
[] (pc=1274) -> (pc'=1273) & (x'=(x+86));
[] (pc=1273) -> (pc'=1272) & (x'=(x+32));
[] (pc=1272) -> (pc'=1271) & (x'=(x+16));
[] (pc=1271) -> (pc'=1270) & (x'=(x+76));
[] (pc=1270) -> (pc'=1269) & (x'=(x+89));
[] (pc=1269) -> (pc'=1268) & (x'=(x+32));
[] (pc=1268) -> (pc'=1267) & (x'=(x+81));
[] (pc=1267) -> (pc'=1266) & (x'=(x+30));
[] (pc=1266) -> (pc'=1265) & (x'=(x+33));
[] (pc=1265) -> (pc'=1264) & (x'=(x+28));
[] (pc=1264) -> (pc'=1263) & (x'=(x+72));
[] (pc=1263) -> (pc'=1262) & (x'=(x+37));
[] (pc=1262) -> (pc'=1261) & (x'=(x+36));
[] (pc=1261) -> (pc'=1260) & (x'=(x+91));
[] (pc=1260) -> (pc'=1259) & (x'=(x+27));
[] (pc=1259) -> (pc'=1258) & (x'=(x+23));
[] (pc=1258) -> (pc'=1257) & (x'=(x+66));
[] (pc=1257) -> (pc'=1256) & (x'=(x+84));
[] (pc=1256) -> (pc'=1255) & (x'=(x+38));
[] (pc=1255) -> (pc'=1254) & (x'=(x+99));
[] (pc=1254) -> (pc'=1253) & (x'=(x+34));
[] (pc=1253) -> (pc'=1252) & (x'=(x+27));
[] (pc=1252) -> (pc'=1251) & (x'=(x+22));
[] (pc=1251) -> (pc'=1250) & (x'=(x+15));
[] (pc=1250) -> (pc'=1249) & (x'=(x+56));
[] (pc=1249) -> (pc'=1248) & (x'=(x+39));
[] (pc=1248) -> (pc'=1247) & (x'=(x+77));
[] (pc=1247) -> (pc'=1246) & (x'=(x+29));
[] (pc=1246) -> (pc'=1245) & (x'=(x+47));
[] (pc=1245) -> (pc'=1244) & (x'=(x+97));
[] (pc=1244) -> (pc'=1243) & (x'=(x+86));
[] (pc=1243) -> (pc'=1242) & (x'=(x+81));
[] (pc=1242) -> (pc'=1241) & (x'=(x+4));
[] (pc=1241) -> (pc'=1240) & (x'=(x+89));
[] (pc=1240) -> (pc'=1239) & (x'=(x+14));
[] (pc=1239) -> (pc'=1238) & (x'=(x+97));
[] (pc=1238) -> (pc'=1237) & (x'=(x+89));
[] (pc=1237) -> (pc'=1236) & (x'=(x+92));
[] (pc=1236) -> (pc'=1235) & (x'=(x+77));
[] (pc=1235) -> (pc'=1234) & (x'=(x+90));
[] (pc=1234) -> (pc'=1233) & (x'=(x+40));
[] (pc=1233) -> (pc'=1232) & (x'=(x+6));
[] (pc=1232) -> (pc'=1231) & (x'=(x+85));
[] (pc=1231) -> (pc'=1230) & (x'=(x+50));
[] (pc=1230) -> (pc'=1229) & (x'=(x+95));
[] (pc=1229) -> (pc'=1228) & (x'=(x+4));
[] (pc=1228) -> (pc'=1227) & (x'=(x+47));
[] (pc=1227) -> (pc'=1226) & (x'=(x+73));
[] (pc=1226) -> (pc'=1225) & (x'=(x+50));
[] (pc=1225) -> (pc'=1224) & (x'=(x+32));
[] (pc=1224) -> (pc'=1223) & (x'=(x+59));
[] (pc=1223) -> (pc'=1222) & (x'=(x+7));
[] (pc=1222) -> (pc'=1221) & (x'=(x+31));
[] (pc=1221) -> (pc'=1220) & (x'=(x+92));
[] (pc=1220) -> (pc'=1219) & (x'=(x+1));
[] (pc=1219) -> (pc'=1218) & (x'=(x+53));
[] (pc=1218) -> (pc'=1217) & (x'=(x+66));
[] (pc=1217) -> (pc'=1216) & (x'=(x+42));
[] (pc=1216) -> (pc'=1215) & (x'=(x+44));
[] (pc=1215) -> (pc'=1214) & (x'=(x+59));
[] (pc=1214) -> (pc'=1213) & (x'=(x+64));
[] (pc=1213) -> (pc'=1212) & (x'=(x+94));
[] (pc=1212) -> (pc'=1211) & (x'=(x+74));
[] (pc=1211) -> (pc'=1210) & (x'=(x+42));
[] (pc=1210) -> (pc'=1209) & (x'=(x+81));
[] (pc=1209) -> (pc'=1208) & (x'=(x+88));
[] (pc=1208) -> (pc'=1207) & (x'=(x+29));
[] (pc=1207) -> (pc'=1) & (x'=(x+76));
[] (pc=1) -> (pc'=1319);
[] (pc=1319) -> (pc'=1319);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

