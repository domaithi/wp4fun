mdp

module TestMDP

pc : [0..44970] init 0;
x : [0..9400] init 0;
n : [0..94] init 0;

[] (pc=0) -> (pc'=44969) & (x'=0);
[] (pc=44969) -> (pc'=44968) & (n'=94);
[] (pc=44968) -> (pc'=44967) & (x'=(x+100));
[] (pc=44967) -> (pc'=44966) & (x'=(x+97));
[] (pc=44966) -> (pc'=44965) & (x'=(x+76));
[] (pc=44965) -> (pc'=44964) & (x'=(x+68));
[] (pc=44964) -> (pc'=44963) & (x'=(x+56));
[] (pc=44963) -> (pc'=44962) & (x'=(x+4));
[] (pc=44962) -> (pc'=44961) & (x'=(x+98));
[] (pc=44961) -> (pc'=44960) & (x'=(x+92));
[] (pc=44960) -> (pc'=44959) & (x'=(x+79));
[] (pc=44959) -> (pc'=44958) & (x'=(x+91));
[] (pc=44958) -> (pc'=44957) & (x'=(x+24));
[] (pc=44957) -> (pc'=44956) & (x'=(x+32));
[] (pc=44956) -> (pc'=44955) & (x'=(x+16));
[] (pc=44955) -> (pc'=44954) & (x'=(x+62));
[] (pc=44954) -> (pc'=44953) & (x'=(x+49));
[] (pc=44953) -> (pc'=44952) & (x'=(x+55));
[] (pc=44952) -> (pc'=44951) & (x'=(x+92));
[] (pc=44951) -> (pc'=44950) & (x'=(x+59));
[] (pc=44950) -> (pc'=44949) & (x'=(x+4));
[] (pc=44949) -> (pc'=44948) & (x'=(x+95));
[] (pc=44948) -> (pc'=44947) & (x'=(x+94));
[] (pc=44947) -> (pc'=44946) & (x'=(x+62));
[] (pc=44946) -> (pc'=44945) & (x'=(x+39));
[] (pc=44945) -> (pc'=44944) & (x'=(x+4));
[] (pc=44944) -> (pc'=44943) & (x'=(x+4));
[] (pc=44943) -> (pc'=44942) & (x'=(x+69));
[] (pc=44942) -> (pc'=44941) & (x'=(x+71));
[] (pc=44941) -> (pc'=44940) & (x'=(x+91));
[] (pc=44940) -> (pc'=44939) & (x'=(x+56));
[] (pc=44939) -> (pc'=44938) & (x'=(x+78));
[] (pc=44938) -> (pc'=44937) & (x'=(x+51));
[] (pc=44937) -> (pc'=44936) & (x'=(x+71));
[] (pc=44936) -> (pc'=44935) & (x'=(x+50));
[] (pc=44935) -> (pc'=44934) & (x'=(x+81));
[] (pc=44934) -> (pc'=44933) & (x'=(x+84));
[] (pc=44933) -> (pc'=44932) & (x'=(x+4));
[] (pc=44932) -> (pc'=44931) & (x'=(x+29));
[] (pc=44931) -> (pc'=44930) & (x'=(x+6));
[] (pc=44930) -> (pc'=44929) & (x'=(x+93));
[] (pc=44929) -> (pc'=44928) & (x'=(x+61));
[] (pc=44928) -> (pc'=44927) & (x'=(x+94));
[] (pc=44927) -> (pc'=44926) & (x'=(x+81));
[] (pc=44926) -> (pc'=44925) & (x'=(x+67));
[] (pc=44925) -> (pc'=44924) & (x'=(x+9));
[] (pc=44924) -> (pc'=44923) & (x'=(x+51));
[] (pc=44923) -> (pc'=44922) & (x'=(x+16));
[] (pc=44922) -> (pc'=44921) & (x'=(x+81));
[] (pc=44921) -> (pc'=44920) & (x'=(x+40));
[] (pc=44920) -> (pc'=44919) & (x'=(x+67));
[] (pc=44919) -> (pc'=44918) & (x'=(x+71));
[] (pc=44918) -> (pc'=44917) & (x'=(x+90));
[] (pc=44917) -> (pc'=44916) & (x'=(x+24));
[] (pc=44916) -> (pc'=44915) & (x'=(x+92));
[] (pc=44915) -> (pc'=44914) & (x'=(x+30));
[] (pc=44914) -> (pc'=44913) & (x'=(x+67));
[] (pc=44913) -> (pc'=44912) & (x'=(x+75));
[] (pc=44912) -> (pc'=44911) & (x'=(x+9));
[] (pc=44911) -> (pc'=44910) & (x'=(x+50));
[] (pc=44910) -> (pc'=44909) & (x'=(x+68));
[] (pc=44909) -> (pc'=44908) & (x'=(x+80));
[] (pc=44908) -> (pc'=44907) & (x'=(x+68));
[] (pc=44907) -> (pc'=44906) & (x'=(x+34));
[] (pc=44906) -> (pc'=44905) & (x'=(x+3));
[] (pc=44905) -> (pc'=44904) & (x'=(x+68));
[] (pc=44904) -> (pc'=44903) & (x'=(x+59));
[] (pc=44903) -> (pc'=44902) & (x'=(x+19));
[] (pc=44902) -> (pc'=44901) & (x'=(x+42));
[] (pc=44901) -> (pc'=44900) & (x'=(x+9));
[] (pc=44900) -> (pc'=44899) & (x'=(x+68));
[] (pc=44899) -> (pc'=44898) & (x'=(x+46));
[] (pc=44898) -> (pc'=44897) & (x'=(x+49));
[] (pc=44897) -> (pc'=44896) & (x'=(x+21));
[] (pc=44896) -> (pc'=44895) & (x'=(x+100));
[] (pc=44895) -> (pc'=44894) & (x'=(x+93));
[] (pc=44894) -> (pc'=44893) & (x'=(x+79));
[] (pc=44893) -> (pc'=44892) & (x'=(x+69));
[] (pc=44892) -> (pc'=44891) & (x'=(x+25));
[] (pc=44891) -> (pc'=44890) & (x'=(x+89));
[] (pc=44890) -> (pc'=44889) & (x'=(x+37));
[] (pc=44889) -> (pc'=44888) & (x'=(x+67));
[] (pc=44888) -> (pc'=44887) & (x'=(x+37));
[] (pc=44887) -> (pc'=44886) & (x'=(x+98));
[] (pc=44886) -> (pc'=44885) & (x'=(x+45));
[] (pc=44885) -> (pc'=44884) & (x'=(x+19));
[] (pc=44884) -> (pc'=44883) & (x'=(x+49));
[] (pc=44883) -> (pc'=44882) & (x'=(x+24));
[] (pc=44882) -> (pc'=44881) & (x'=(x+1));
[] (pc=44881) -> (pc'=44880) & (x'=(x+5));
[] (pc=44880) -> (pc'=44879) & (x'=(x+96));
[] (pc=44879) -> (pc'=44878) & (x'=(x+35));
[] (pc=44878) -> (pc'=44877) & (x'=(x+8));
[] (pc=44877) -> (pc'=44876) & (x'=(x+88));
[] (pc=44876) -> (pc'=44875) & (x'=(x+30));
[] (pc=44875) -> (pc'=1) & (x'=(x+42));
[] (pc=1) -> (pc'=44970);
[] (pc=44970) -> (pc'=44970);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

