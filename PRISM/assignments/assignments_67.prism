mdp

module TestMDP

pc : [0..42699] init 0;
x : [0..6700] init 0;
n : [0..67] init 0;

[] (pc=0) -> (pc'=42698) & (x'=0);
[] (pc=42698) -> (pc'=42697) & (n'=67);
[] (pc=42697) -> (pc'=42696) & (x'=(x+4));
[] (pc=42696) -> (pc'=42695) & (x'=(x+57));
[] (pc=42695) -> (pc'=42694) & (x'=(x+15));
[] (pc=42694) -> (pc'=42693) & (x'=(x+59));
[] (pc=42693) -> (pc'=42692) & (x'=(x+4));
[] (pc=42692) -> (pc'=42691) & (x'=(x+55));
[] (pc=42691) -> (pc'=42690) & (x'=(x+64));
[] (pc=42690) -> (pc'=42689) & (x'=(x+58));
[] (pc=42689) -> (pc'=42688) & (x'=(x+100));
[] (pc=42688) -> (pc'=42687) & (x'=(x+55));
[] (pc=42687) -> (pc'=42686) & (x'=(x+13));
[] (pc=42686) -> (pc'=42685) & (x'=(x+84));
[] (pc=42685) -> (pc'=42684) & (x'=(x+14));
[] (pc=42684) -> (pc'=42683) & (x'=(x+8));
[] (pc=42683) -> (pc'=42682) & (x'=(x+9));
[] (pc=42682) -> (pc'=42681) & (x'=(x+14));
[] (pc=42681) -> (pc'=42680) & (x'=(x+13));
[] (pc=42680) -> (pc'=42679) & (x'=(x+80));
[] (pc=42679) -> (pc'=42678) & (x'=(x+36));
[] (pc=42678) -> (pc'=42677) & (x'=(x+80));
[] (pc=42677) -> (pc'=42676) & (x'=(x+3));
[] (pc=42676) -> (pc'=42675) & (x'=(x+81));
[] (pc=42675) -> (pc'=42674) & (x'=(x+96));
[] (pc=42674) -> (pc'=42673) & (x'=(x+12));
[] (pc=42673) -> (pc'=42672) & (x'=(x+2));
[] (pc=42672) -> (pc'=42671) & (x'=(x+53));
[] (pc=42671) -> (pc'=42670) & (x'=(x+13));
[] (pc=42670) -> (pc'=42669) & (x'=(x+75));
[] (pc=42669) -> (pc'=42668) & (x'=(x+16));
[] (pc=42668) -> (pc'=42667) & (x'=(x+97));
[] (pc=42667) -> (pc'=42666) & (x'=(x+20));
[] (pc=42666) -> (pc'=42665) & (x'=(x+68));
[] (pc=42665) -> (pc'=42664) & (x'=(x+56));
[] (pc=42664) -> (pc'=42663) & (x'=(x+18));
[] (pc=42663) -> (pc'=42662) & (x'=(x+68));
[] (pc=42662) -> (pc'=42661) & (x'=(x+79));
[] (pc=42661) -> (pc'=42660) & (x'=(x+13));
[] (pc=42660) -> (pc'=42659) & (x'=(x+92));
[] (pc=42659) -> (pc'=42658) & (x'=(x+28));
[] (pc=42658) -> (pc'=42657) & (x'=(x+48));
[] (pc=42657) -> (pc'=42656) & (x'=(x+1));
[] (pc=42656) -> (pc'=42655) & (x'=(x+6));
[] (pc=42655) -> (pc'=42654) & (x'=(x+18));
[] (pc=42654) -> (pc'=42653) & (x'=(x+68));
[] (pc=42653) -> (pc'=42652) & (x'=(x+92));
[] (pc=42652) -> (pc'=42651) & (x'=(x+83));
[] (pc=42651) -> (pc'=42650) & (x'=(x+64));
[] (pc=42650) -> (pc'=42649) & (x'=(x+3));
[] (pc=42649) -> (pc'=42648) & (x'=(x+56));
[] (pc=42648) -> (pc'=42647) & (x'=(x+73));
[] (pc=42647) -> (pc'=42646) & (x'=(x+17));
[] (pc=42646) -> (pc'=42645) & (x'=(x+79));
[] (pc=42645) -> (pc'=42644) & (x'=(x+62));
[] (pc=42644) -> (pc'=42643) & (x'=(x+28));
[] (pc=42643) -> (pc'=42642) & (x'=(x+65));
[] (pc=42642) -> (pc'=42641) & (x'=(x+69));
[] (pc=42641) -> (pc'=42640) & (x'=(x+25));
[] (pc=42640) -> (pc'=42639) & (x'=(x+12));
[] (pc=42639) -> (pc'=42638) & (x'=(x+79));
[] (pc=42638) -> (pc'=42637) & (x'=(x+95));
[] (pc=42637) -> (pc'=42636) & (x'=(x+75));
[] (pc=42636) -> (pc'=42635) & (x'=(x+26));
[] (pc=42635) -> (pc'=42634) & (x'=(x+53));
[] (pc=42634) -> (pc'=42633) & (x'=(x+30));
[] (pc=42633) -> (pc'=42632) & (x'=(x+35));
[] (pc=42632) -> (pc'=42631) & (x'=(x+78));
[] (pc=42631) -> (pc'=1) & (x'=(x+65));
[] (pc=1) -> (pc'=42699);
[] (pc=42699) -> (pc'=42699);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

