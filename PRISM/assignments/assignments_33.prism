mdp

module TestMDP

pc : [0..40893] init 0;
x : [0..3300] init 0;
n : [0..33] init 0;

[] (pc=0) -> (pc'=40892) & (x'=0);
[] (pc=40892) -> (pc'=40891) & (n'=33);
[] (pc=40891) -> (pc'=40890) & (x'=(x+98));
[] (pc=40890) -> (pc'=40889) & (x'=(x+14));
[] (pc=40889) -> (pc'=40888) & (x'=(x+81));
[] (pc=40888) -> (pc'=40887) & (x'=(x+79));
[] (pc=40887) -> (pc'=40886) & (x'=(x+68));
[] (pc=40886) -> (pc'=40885) & (x'=(x+56));
[] (pc=40885) -> (pc'=40884) & (x'=(x+10));
[] (pc=40884) -> (pc'=40883) & (x'=(x+9));
[] (pc=40883) -> (pc'=40882) & (x'=(x+68));
[] (pc=40882) -> (pc'=40881) & (x'=(x+3));
[] (pc=40881) -> (pc'=40880) & (x'=(x+88));
[] (pc=40880) -> (pc'=40879) & (x'=(x+91));
[] (pc=40879) -> (pc'=40878) & (x'=(x+2));
[] (pc=40878) -> (pc'=40877) & (x'=(x+63));
[] (pc=40877) -> (pc'=40876) & (x'=(x+83));
[] (pc=40876) -> (pc'=40875) & (x'=(x+51));
[] (pc=40875) -> (pc'=40874) & (x'=(x+13));
[] (pc=40874) -> (pc'=40873) & (x'=(x+4));
[] (pc=40873) -> (pc'=40872) & (x'=(x+79));
[] (pc=40872) -> (pc'=40871) & (x'=(x+9));
[] (pc=40871) -> (pc'=40870) & (x'=(x+3));
[] (pc=40870) -> (pc'=40869) & (x'=(x+32));
[] (pc=40869) -> (pc'=40868) & (x'=(x+90));
[] (pc=40868) -> (pc'=40867) & (x'=(x+11));
[] (pc=40867) -> (pc'=40866) & (x'=(x+14));
[] (pc=40866) -> (pc'=40865) & (x'=(x+100));
[] (pc=40865) -> (pc'=40864) & (x'=(x+65));
[] (pc=40864) -> (pc'=40863) & (x'=(x+9));
[] (pc=40863) -> (pc'=40862) & (x'=(x+25));
[] (pc=40862) -> (pc'=40861) & (x'=(x+67));
[] (pc=40861) -> (pc'=40860) & (x'=(x+41));
[] (pc=40860) -> (pc'=40859) & (x'=(x+92));
[] (pc=40859) -> (pc'=1) & (x'=(x+28));
[] (pc=1) -> (pc'=40893);
[] (pc=40893) -> (pc'=40893);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

