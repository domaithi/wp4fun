mdp

module TestMDP

pc : [0..43873] init 0;
x : [0..8200] init 0;
n : [0..82] init 0;

[] (pc=0) -> (pc'=43872) & (x'=0);
[] (pc=43872) -> (pc'=43871) & (n'=82);
[] (pc=43871) -> (pc'=43870) & (x'=(x+46));
[] (pc=43870) -> (pc'=43869) & (x'=(x+78));
[] (pc=43869) -> (pc'=43868) & (x'=(x+68));
[] (pc=43868) -> (pc'=43867) & (x'=(x+98));
[] (pc=43867) -> (pc'=43866) & (x'=(x+15));
[] (pc=43866) -> (pc'=43865) & (x'=(x+64));
[] (pc=43865) -> (pc'=43864) & (x'=(x+97));
[] (pc=43864) -> (pc'=43863) & (x'=(x+58));
[] (pc=43863) -> (pc'=43862) & (x'=(x+12));
[] (pc=43862) -> (pc'=43861) & (x'=(x+94));
[] (pc=43861) -> (pc'=43860) & (x'=(x+16));
[] (pc=43860) -> (pc'=43859) & (x'=(x+51));
[] (pc=43859) -> (pc'=43858) & (x'=(x+69));
[] (pc=43858) -> (pc'=43857) & (x'=(x+31));
[] (pc=43857) -> (pc'=43856) & (x'=(x+58));
[] (pc=43856) -> (pc'=43855) & (x'=(x+26));
[] (pc=43855) -> (pc'=43854) & (x'=(x+74));
[] (pc=43854) -> (pc'=43853) & (x'=(x+26));
[] (pc=43853) -> (pc'=43852) & (x'=(x+70));
[] (pc=43852) -> (pc'=43851) & (x'=(x+8));
[] (pc=43851) -> (pc'=43850) & (x'=(x+51));
[] (pc=43850) -> (pc'=43849) & (x'=(x+9));
[] (pc=43849) -> (pc'=43848) & (x'=(x+12));
[] (pc=43848) -> (pc'=43847) & (x'=(x+4));
[] (pc=43847) -> (pc'=43846) & (x'=(x+72));
[] (pc=43846) -> (pc'=43845) & (x'=(x+76));
[] (pc=43845) -> (pc'=43844) & (x'=(x+51));
[] (pc=43844) -> (pc'=43843) & (x'=(x+80));
[] (pc=43843) -> (pc'=43842) & (x'=(x+50));
[] (pc=43842) -> (pc'=43841) & (x'=(x+78));
[] (pc=43841) -> (pc'=43840) & (x'=(x+77));
[] (pc=43840) -> (pc'=43839) & (x'=(x+10));
[] (pc=43839) -> (pc'=43838) & (x'=(x+7));
[] (pc=43838) -> (pc'=43837) & (x'=(x+37));
[] (pc=43837) -> (pc'=43836) & (x'=(x+43));
[] (pc=43836) -> (pc'=43835) & (x'=(x+38));
[] (pc=43835) -> (pc'=43834) & (x'=(x+19));
[] (pc=43834) -> (pc'=43833) & (x'=(x+48));
[] (pc=43833) -> (pc'=43832) & (x'=(x+28));
[] (pc=43832) -> (pc'=43831) & (x'=(x+96));
[] (pc=43831) -> (pc'=43830) & (x'=(x+62));
[] (pc=43830) -> (pc'=43829) & (x'=(x+86));
[] (pc=43829) -> (pc'=43828) & (x'=(x+90));
[] (pc=43828) -> (pc'=43827) & (x'=(x+44));
[] (pc=43827) -> (pc'=43826) & (x'=(x+50));
[] (pc=43826) -> (pc'=43825) & (x'=(x+55));
[] (pc=43825) -> (pc'=43824) & (x'=(x+44));
[] (pc=43824) -> (pc'=43823) & (x'=(x+38));
[] (pc=43823) -> (pc'=43822) & (x'=(x+65));
[] (pc=43822) -> (pc'=43821) & (x'=(x+6));
[] (pc=43821) -> (pc'=43820) & (x'=(x+43));
[] (pc=43820) -> (pc'=43819) & (x'=(x+60));
[] (pc=43819) -> (pc'=43818) & (x'=(x+47));
[] (pc=43818) -> (pc'=43817) & (x'=(x+8));
[] (pc=43817) -> (pc'=43816) & (x'=(x+60));
[] (pc=43816) -> (pc'=43815) & (x'=(x+86));
[] (pc=43815) -> (pc'=43814) & (x'=(x+11));
[] (pc=43814) -> (pc'=43813) & (x'=(x+14));
[] (pc=43813) -> (pc'=43812) & (x'=(x+57));
[] (pc=43812) -> (pc'=43811) & (x'=(x+32));
[] (pc=43811) -> (pc'=43810) & (x'=(x+6));
[] (pc=43810) -> (pc'=43809) & (x'=(x+10));
[] (pc=43809) -> (pc'=43808) & (x'=(x+32));
[] (pc=43808) -> (pc'=43807) & (x'=(x+31));
[] (pc=43807) -> (pc'=43806) & (x'=(x+27));
[] (pc=43806) -> (pc'=43805) & (x'=(x+79));
[] (pc=43805) -> (pc'=43804) & (x'=(x+96));
[] (pc=43804) -> (pc'=43803) & (x'=(x+96));
[] (pc=43803) -> (pc'=43802) & (x'=(x+53));
[] (pc=43802) -> (pc'=43801) & (x'=(x+59));
[] (pc=43801) -> (pc'=43800) & (x'=(x+40));
[] (pc=43800) -> (pc'=43799) & (x'=(x+15));
[] (pc=43799) -> (pc'=43798) & (x'=(x+10));
[] (pc=43798) -> (pc'=43797) & (x'=(x+98));
[] (pc=43797) -> (pc'=43796) & (x'=(x+15));
[] (pc=43796) -> (pc'=43795) & (x'=(x+5));
[] (pc=43795) -> (pc'=43794) & (x'=(x+20));
[] (pc=43794) -> (pc'=43793) & (x'=(x+62));
[] (pc=43793) -> (pc'=43792) & (x'=(x+36));
[] (pc=43792) -> (pc'=43791) & (x'=(x+32));
[] (pc=43791) -> (pc'=43790) & (x'=(x+59));
[] (pc=43790) -> (pc'=1) & (x'=(x+75));
[] (pc=1) -> (pc'=43873);
[] (pc=43873) -> (pc'=43873);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

