mdp

module TestMDP

pc : [0..43958] init 0;
x : [0..8300] init 0;
n : [0..83] init 0;

[] (pc=0) -> (pc'=43957) & (x'=0);
[] (pc=43957) -> (pc'=43956) & (n'=83);
[] (pc=43956) -> (pc'=43955) & (x'=(x+6));
[] (pc=43955) -> (pc'=43954) & (x'=(x+65));
[] (pc=43954) -> (pc'=43953) & (x'=(x+27));
[] (pc=43953) -> (pc'=43952) & (x'=(x+5));
[] (pc=43952) -> (pc'=43951) & (x'=(x+19));
[] (pc=43951) -> (pc'=43950) & (x'=(x+33));
[] (pc=43950) -> (pc'=43949) & (x'=(x+22));
[] (pc=43949) -> (pc'=43948) & (x'=(x+4));
[] (pc=43948) -> (pc'=43947) & (x'=(x+49));
[] (pc=43947) -> (pc'=43946) & (x'=(x+100));
[] (pc=43946) -> (pc'=43945) & (x'=(x+66));
[] (pc=43945) -> (pc'=43944) & (x'=(x+10));
[] (pc=43944) -> (pc'=43943) & (x'=(x+1));
[] (pc=43943) -> (pc'=43942) & (x'=(x+33));
[] (pc=43942) -> (pc'=43941) & (x'=(x+32));
[] (pc=43941) -> (pc'=43940) & (x'=(x+87));
[] (pc=43940) -> (pc'=43939) & (x'=(x+48));
[] (pc=43939) -> (pc'=43938) & (x'=(x+46));
[] (pc=43938) -> (pc'=43937) & (x'=(x+9));
[] (pc=43937) -> (pc'=43936) & (x'=(x+1));
[] (pc=43936) -> (pc'=43935) & (x'=(x+47));
[] (pc=43935) -> (pc'=43934) & (x'=(x+87));
[] (pc=43934) -> (pc'=43933) & (x'=(x+85));
[] (pc=43933) -> (pc'=43932) & (x'=(x+71));
[] (pc=43932) -> (pc'=43931) & (x'=(x+50));
[] (pc=43931) -> (pc'=43930) & (x'=(x+20));
[] (pc=43930) -> (pc'=43929) & (x'=(x+70));
[] (pc=43929) -> (pc'=43928) & (x'=(x+93));
[] (pc=43928) -> (pc'=43927) & (x'=(x+34));
[] (pc=43927) -> (pc'=43926) & (x'=(x+81));
[] (pc=43926) -> (pc'=43925) & (x'=(x+54));
[] (pc=43925) -> (pc'=43924) & (x'=(x+34));
[] (pc=43924) -> (pc'=43923) & (x'=(x+40));
[] (pc=43923) -> (pc'=43922) & (x'=(x+60));
[] (pc=43922) -> (pc'=43921) & (x'=(x+28));
[] (pc=43921) -> (pc'=43920) & (x'=(x+56));
[] (pc=43920) -> (pc'=43919) & (x'=(x+23));
[] (pc=43919) -> (pc'=43918) & (x'=(x+23));
[] (pc=43918) -> (pc'=43917) & (x'=(x+44));
[] (pc=43917) -> (pc'=43916) & (x'=(x+82));
[] (pc=43916) -> (pc'=43915) & (x'=(x+87));
[] (pc=43915) -> (pc'=43914) & (x'=(x+7));
[] (pc=43914) -> (pc'=43913) & (x'=(x+15));
[] (pc=43913) -> (pc'=43912) & (x'=(x+17));
[] (pc=43912) -> (pc'=43911) & (x'=(x+30));
[] (pc=43911) -> (pc'=43910) & (x'=(x+14));
[] (pc=43910) -> (pc'=43909) & (x'=(x+79));
[] (pc=43909) -> (pc'=43908) & (x'=(x+69));
[] (pc=43908) -> (pc'=43907) & (x'=(x+75));
[] (pc=43907) -> (pc'=43906) & (x'=(x+99));
[] (pc=43906) -> (pc'=43905) & (x'=(x+81));
[] (pc=43905) -> (pc'=43904) & (x'=(x+85));
[] (pc=43904) -> (pc'=43903) & (x'=(x+58));
[] (pc=43903) -> (pc'=43902) & (x'=(x+39));
[] (pc=43902) -> (pc'=43901) & (x'=(x+21));
[] (pc=43901) -> (pc'=43900) & (x'=(x+84));
[] (pc=43900) -> (pc'=43899) & (x'=(x+83));
[] (pc=43899) -> (pc'=43898) & (x'=(x+91));
[] (pc=43898) -> (pc'=43897) & (x'=(x+41));
[] (pc=43897) -> (pc'=43896) & (x'=(x+34));
[] (pc=43896) -> (pc'=43895) & (x'=(x+85));
[] (pc=43895) -> (pc'=43894) & (x'=(x+34));
[] (pc=43894) -> (pc'=43893) & (x'=(x+93));
[] (pc=43893) -> (pc'=43892) & (x'=(x+96));
[] (pc=43892) -> (pc'=43891) & (x'=(x+54));
[] (pc=43891) -> (pc'=43890) & (x'=(x+64));
[] (pc=43890) -> (pc'=43889) & (x'=(x+77));
[] (pc=43889) -> (pc'=43888) & (x'=(x+36));
[] (pc=43888) -> (pc'=43887) & (x'=(x+91));
[] (pc=43887) -> (pc'=43886) & (x'=(x+60));
[] (pc=43886) -> (pc'=43885) & (x'=(x+82));
[] (pc=43885) -> (pc'=43884) & (x'=(x+33));
[] (pc=43884) -> (pc'=43883) & (x'=(x+51));
[] (pc=43883) -> (pc'=43882) & (x'=(x+32));
[] (pc=43882) -> (pc'=43881) & (x'=(x+75));
[] (pc=43881) -> (pc'=43880) & (x'=(x+4));
[] (pc=43880) -> (pc'=43879) & (x'=(x+5));
[] (pc=43879) -> (pc'=43878) & (x'=(x+12));
[] (pc=43878) -> (pc'=43877) & (x'=(x+68));
[] (pc=43877) -> (pc'=43876) & (x'=(x+22));
[] (pc=43876) -> (pc'=43875) & (x'=(x+34));
[] (pc=43875) -> (pc'=43874) & (x'=(x+37));
[] (pc=43874) -> (pc'=1) & (x'=(x+18));
[] (pc=1) -> (pc'=43958);
[] (pc=43958) -> (pc'=43958);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

