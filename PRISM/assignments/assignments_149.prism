mdp

module TestMDP

pc : [0..6399] init 0;
x : [0..14900] init 0;
n : [0..149] init 0;

[] (pc=0) -> (pc'=6398) & (x'=0);
[] (pc=6398) -> (pc'=6397) & (n'=149);
[] (pc=6397) -> (pc'=6396) & (x'=(x+96));
[] (pc=6396) -> (pc'=6395) & (x'=(x+96));
[] (pc=6395) -> (pc'=6394) & (x'=(x+62));
[] (pc=6394) -> (pc'=6393) & (x'=(x+100));
[] (pc=6393) -> (pc'=6392) & (x'=(x+76));
[] (pc=6392) -> (pc'=6391) & (x'=(x+56));
[] (pc=6391) -> (pc'=6390) & (x'=(x+12));
[] (pc=6390) -> (pc'=6389) & (x'=(x+57));
[] (pc=6389) -> (pc'=6388) & (x'=(x+68));
[] (pc=6388) -> (pc'=6387) & (x'=(x+13));
[] (pc=6387) -> (pc'=6386) & (x'=(x+12));
[] (pc=6386) -> (pc'=6385) & (x'=(x+87));
[] (pc=6385) -> (pc'=6384) & (x'=(x+7));
[] (pc=6384) -> (pc'=6383) & (x'=(x+90));
[] (pc=6383) -> (pc'=6382) & (x'=(x+40));
[] (pc=6382) -> (pc'=6381) & (x'=(x+75));
[] (pc=6381) -> (pc'=6380) & (x'=(x+78));
[] (pc=6380) -> (pc'=6379) & (x'=(x+98));
[] (pc=6379) -> (pc'=6378) & (x'=(x+65));
[] (pc=6378) -> (pc'=6377) & (x'=(x+25));
[] (pc=6377) -> (pc'=6376) & (x'=(x+66));
[] (pc=6376) -> (pc'=6375) & (x'=(x+60));
[] (pc=6375) -> (pc'=6374) & (x'=(x+20));
[] (pc=6374) -> (pc'=6373) & (x'=(x+61));
[] (pc=6373) -> (pc'=6372) & (x'=(x+17));
[] (pc=6372) -> (pc'=6371) & (x'=(x+18));
[] (pc=6371) -> (pc'=6370) & (x'=(x+10));
[] (pc=6370) -> (pc'=6369) & (x'=(x+56));
[] (pc=6369) -> (pc'=6368) & (x'=(x+32));
[] (pc=6368) -> (pc'=6367) & (x'=(x+52));
[] (pc=6367) -> (pc'=6366) & (x'=(x+48));
[] (pc=6366) -> (pc'=6365) & (x'=(x+14));
[] (pc=6365) -> (pc'=6364) & (x'=(x+35));
[] (pc=6364) -> (pc'=6363) & (x'=(x+56));
[] (pc=6363) -> (pc'=6362) & (x'=(x+80));
[] (pc=6362) -> (pc'=6361) & (x'=(x+81));
[] (pc=6361) -> (pc'=6360) & (x'=(x+92));
[] (pc=6360) -> (pc'=6359) & (x'=(x+13));
[] (pc=6359) -> (pc'=6358) & (x'=(x+7));
[] (pc=6358) -> (pc'=6357) & (x'=(x+47));
[] (pc=6357) -> (pc'=6356) & (x'=(x+99));
[] (pc=6356) -> (pc'=6355) & (x'=(x+31));
[] (pc=6355) -> (pc'=6354) & (x'=(x+99));
[] (pc=6354) -> (pc'=6353) & (x'=(x+78));
[] (pc=6353) -> (pc'=6352) & (x'=(x+3));
[] (pc=6352) -> (pc'=6351) & (x'=(x+90));
[] (pc=6351) -> (pc'=6350) & (x'=(x+27));
[] (pc=6350) -> (pc'=6349) & (x'=(x+54));
[] (pc=6349) -> (pc'=6348) & (x'=(x+24));
[] (pc=6348) -> (pc'=6347) & (x'=(x+80));
[] (pc=6347) -> (pc'=6346) & (x'=(x+83));
[] (pc=6346) -> (pc'=6345) & (x'=(x+34));
[] (pc=6345) -> (pc'=6344) & (x'=(x+96));
[] (pc=6344) -> (pc'=6343) & (x'=(x+9));
[] (pc=6343) -> (pc'=6342) & (x'=(x+60));
[] (pc=6342) -> (pc'=6341) & (x'=(x+97));
[] (pc=6341) -> (pc'=6340) & (x'=(x+89));
[] (pc=6340) -> (pc'=6339) & (x'=(x+56));
[] (pc=6339) -> (pc'=6338) & (x'=(x+61));
[] (pc=6338) -> (pc'=6337) & (x'=(x+50));
[] (pc=6337) -> (pc'=6336) & (x'=(x+59));
[] (pc=6336) -> (pc'=6335) & (x'=(x+27));
[] (pc=6335) -> (pc'=6334) & (x'=(x+45));
[] (pc=6334) -> (pc'=6333) & (x'=(x+64));
[] (pc=6333) -> (pc'=6332) & (x'=(x+97));
[] (pc=6332) -> (pc'=6331) & (x'=(x+26));
[] (pc=6331) -> (pc'=6330) & (x'=(x+1));
[] (pc=6330) -> (pc'=6329) & (x'=(x+43));
[] (pc=6329) -> (pc'=6328) & (x'=(x+55));
[] (pc=6328) -> (pc'=6327) & (x'=(x+40));
[] (pc=6327) -> (pc'=6326) & (x'=(x+87));
[] (pc=6326) -> (pc'=6325) & (x'=(x+3));
[] (pc=6325) -> (pc'=6324) & (x'=(x+83));
[] (pc=6324) -> (pc'=6323) & (x'=(x+15));
[] (pc=6323) -> (pc'=6322) & (x'=(x+89));
[] (pc=6322) -> (pc'=6321) & (x'=(x+78));
[] (pc=6321) -> (pc'=6320) & (x'=(x+51));
[] (pc=6320) -> (pc'=6319) & (x'=(x+78));
[] (pc=6319) -> (pc'=6318) & (x'=(x+68));
[] (pc=6318) -> (pc'=6317) & (x'=(x+89));
[] (pc=6317) -> (pc'=6316) & (x'=(x+12));
[] (pc=6316) -> (pc'=6315) & (x'=(x+31));
[] (pc=6315) -> (pc'=6314) & (x'=(x+30));
[] (pc=6314) -> (pc'=6313) & (x'=(x+80));
[] (pc=6313) -> (pc'=6312) & (x'=(x+89));
[] (pc=6312) -> (pc'=6311) & (x'=(x+1));
[] (pc=6311) -> (pc'=6310) & (x'=(x+25));
[] (pc=6310) -> (pc'=6309) & (x'=(x+58));
[] (pc=6309) -> (pc'=6308) & (x'=(x+69));
[] (pc=6308) -> (pc'=6307) & (x'=(x+66));
[] (pc=6307) -> (pc'=6306) & (x'=(x+57));
[] (pc=6306) -> (pc'=6305) & (x'=(x+95));
[] (pc=6305) -> (pc'=6304) & (x'=(x+54));
[] (pc=6304) -> (pc'=6303) & (x'=(x+54));
[] (pc=6303) -> (pc'=6302) & (x'=(x+94));
[] (pc=6302) -> (pc'=6301) & (x'=(x+7));
[] (pc=6301) -> (pc'=6300) & (x'=(x+99));
[] (pc=6300) -> (pc'=6299) & (x'=(x+22));
[] (pc=6299) -> (pc'=6298) & (x'=(x+51));
[] (pc=6298) -> (pc'=6297) & (x'=(x+34));
[] (pc=6297) -> (pc'=6296) & (x'=(x+7));
[] (pc=6296) -> (pc'=6295) & (x'=(x+75));
[] (pc=6295) -> (pc'=6294) & (x'=(x+82));
[] (pc=6294) -> (pc'=6293) & (x'=(x+94));
[] (pc=6293) -> (pc'=6292) & (x'=(x+49));
[] (pc=6292) -> (pc'=6291) & (x'=(x+83));
[] (pc=6291) -> (pc'=6290) & (x'=(x+76));
[] (pc=6290) -> (pc'=6289) & (x'=(x+2));
[] (pc=6289) -> (pc'=6288) & (x'=(x+98));
[] (pc=6288) -> (pc'=6287) & (x'=(x+81));
[] (pc=6287) -> (pc'=6286) & (x'=(x+75));
[] (pc=6286) -> (pc'=6285) & (x'=(x+74));
[] (pc=6285) -> (pc'=6284) & (x'=(x+50));
[] (pc=6284) -> (pc'=6283) & (x'=(x+19));
[] (pc=6283) -> (pc'=6282) & (x'=(x+35));
[] (pc=6282) -> (pc'=6281) & (x'=(x+60));
[] (pc=6281) -> (pc'=6280) & (x'=(x+38));
[] (pc=6280) -> (pc'=6279) & (x'=(x+40));
[] (pc=6279) -> (pc'=6278) & (x'=(x+57));
[] (pc=6278) -> (pc'=6277) & (x'=(x+42));
[] (pc=6277) -> (pc'=6276) & (x'=(x+84));
[] (pc=6276) -> (pc'=6275) & (x'=(x+52));
[] (pc=6275) -> (pc'=6274) & (x'=(x+68));
[] (pc=6274) -> (pc'=6273) & (x'=(x+82));
[] (pc=6273) -> (pc'=6272) & (x'=(x+24));
[] (pc=6272) -> (pc'=6271) & (x'=(x+4));
[] (pc=6271) -> (pc'=6270) & (x'=(x+32));
[] (pc=6270) -> (pc'=6269) & (x'=(x+23));
[] (pc=6269) -> (pc'=6268) & (x'=(x+80));
[] (pc=6268) -> (pc'=6267) & (x'=(x+82));
[] (pc=6267) -> (pc'=6266) & (x'=(x+95));
[] (pc=6266) -> (pc'=6265) & (x'=(x+53));
[] (pc=6265) -> (pc'=6264) & (x'=(x+85));
[] (pc=6264) -> (pc'=6263) & (x'=(x+18));
[] (pc=6263) -> (pc'=6262) & (x'=(x+35));
[] (pc=6262) -> (pc'=6261) & (x'=(x+50));
[] (pc=6261) -> (pc'=6260) & (x'=(x+74));
[] (pc=6260) -> (pc'=6259) & (x'=(x+57));
[] (pc=6259) -> (pc'=6258) & (x'=(x+89));
[] (pc=6258) -> (pc'=6257) & (x'=(x+41));
[] (pc=6257) -> (pc'=6256) & (x'=(x+54));
[] (pc=6256) -> (pc'=6255) & (x'=(x+96));
[] (pc=6255) -> (pc'=6254) & (x'=(x+36));
[] (pc=6254) -> (pc'=6253) & (x'=(x+31));
[] (pc=6253) -> (pc'=6252) & (x'=(x+37));
[] (pc=6252) -> (pc'=6251) & (x'=(x+78));
[] (pc=6251) -> (pc'=6250) & (x'=(x+63));
[] (pc=6250) -> (pc'=6249) & (x'=(x+65));
[] (pc=6249) -> (pc'=1) & (x'=(x+31));
[] (pc=1) -> (pc'=6399);
[] (pc=6399) -> (pc'=6399);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

