mdp

module TestMDP

pc : [0..6721] init 0;
x : [0..15100] init 0;
n : [0..151] init 0;

[] (pc=0) -> (pc'=6720) & (x'=0);
[] (pc=6720) -> (pc'=6719) & (n'=151);
[] (pc=6719) -> (pc'=6718) & (x'=(x+12));
[] (pc=6718) -> (pc'=6717) & (x'=(x+22));
[] (pc=6717) -> (pc'=6716) & (x'=(x+63));
[] (pc=6716) -> (pc'=6715) & (x'=(x+10));
[] (pc=6715) -> (pc'=6714) & (x'=(x+7));
[] (pc=6714) -> (pc'=6713) & (x'=(x+100));
[] (pc=6713) -> (pc'=6712) & (x'=(x+38));
[] (pc=6712) -> (pc'=6711) & (x'=(x+63));
[] (pc=6711) -> (pc'=6710) & (x'=(x+35));
[] (pc=6710) -> (pc'=6709) & (x'=(x+64));
[] (pc=6709) -> (pc'=6708) & (x'=(x+51));
[] (pc=6708) -> (pc'=6707) & (x'=(x+2));
[] (pc=6707) -> (pc'=6706) & (x'=(x+58));
[] (pc=6706) -> (pc'=6705) & (x'=(x+99));
[] (pc=6705) -> (pc'=6704) & (x'=(x+80));
[] (pc=6704) -> (pc'=6703) & (x'=(x+100));
[] (pc=6703) -> (pc'=6702) & (x'=(x+98));
[] (pc=6702) -> (pc'=6701) & (x'=(x+13));
[] (pc=6701) -> (pc'=6700) & (x'=(x+82));
[] (pc=6700) -> (pc'=6699) & (x'=(x+54));
[] (pc=6699) -> (pc'=6698) & (x'=(x+22));
[] (pc=6698) -> (pc'=6697) & (x'=(x+83));
[] (pc=6697) -> (pc'=6696) & (x'=(x+48));
[] (pc=6696) -> (pc'=6695) & (x'=(x+52));
[] (pc=6695) -> (pc'=6694) & (x'=(x+41));
[] (pc=6694) -> (pc'=6693) & (x'=(x+33));
[] (pc=6693) -> (pc'=6692) & (x'=(x+61));
[] (pc=6692) -> (pc'=6691) & (x'=(x+3));
[] (pc=6691) -> (pc'=6690) & (x'=(x+67));
[] (pc=6690) -> (pc'=6689) & (x'=(x+11));
[] (pc=6689) -> (pc'=6688) & (x'=(x+78));
[] (pc=6688) -> (pc'=6687) & (x'=(x+41));
[] (pc=6687) -> (pc'=6686) & (x'=(x+9));
[] (pc=6686) -> (pc'=6685) & (x'=(x+71));
[] (pc=6685) -> (pc'=6684) & (x'=(x+97));
[] (pc=6684) -> (pc'=6683) & (x'=(x+34));
[] (pc=6683) -> (pc'=6682) & (x'=(x+61));
[] (pc=6682) -> (pc'=6681) & (x'=(x+80));
[] (pc=6681) -> (pc'=6680) & (x'=(x+55));
[] (pc=6680) -> (pc'=6679) & (x'=(x+11));
[] (pc=6679) -> (pc'=6678) & (x'=(x+55));
[] (pc=6678) -> (pc'=6677) & (x'=(x+85));
[] (pc=6677) -> (pc'=6676) & (x'=(x+60));
[] (pc=6676) -> (pc'=6675) & (x'=(x+22));
[] (pc=6675) -> (pc'=6674) & (x'=(x+26));
[] (pc=6674) -> (pc'=6673) & (x'=(x+99));
[] (pc=6673) -> (pc'=6672) & (x'=(x+33));
[] (pc=6672) -> (pc'=6671) & (x'=(x+53));
[] (pc=6671) -> (pc'=6670) & (x'=(x+65));
[] (pc=6670) -> (pc'=6669) & (x'=(x+92));
[] (pc=6669) -> (pc'=6668) & (x'=(x+46));
[] (pc=6668) -> (pc'=6667) & (x'=(x+6));
[] (pc=6667) -> (pc'=6666) & (x'=(x+54));
[] (pc=6666) -> (pc'=6665) & (x'=(x+8));
[] (pc=6665) -> (pc'=6664) & (x'=(x+91));
[] (pc=6664) -> (pc'=6663) & (x'=(x+14));
[] (pc=6663) -> (pc'=6662) & (x'=(x+61));
[] (pc=6662) -> (pc'=6661) & (x'=(x+19));
[] (pc=6661) -> (pc'=6660) & (x'=(x+80));
[] (pc=6660) -> (pc'=6659) & (x'=(x+49));
[] (pc=6659) -> (pc'=6658) & (x'=(x+53));
[] (pc=6658) -> (pc'=6657) & (x'=(x+55));
[] (pc=6657) -> (pc'=6656) & (x'=(x+20));
[] (pc=6656) -> (pc'=6655) & (x'=(x+100));
[] (pc=6655) -> (pc'=6654) & (x'=(x+44));
[] (pc=6654) -> (pc'=6653) & (x'=(x+29));
[] (pc=6653) -> (pc'=6652) & (x'=(x+99));
[] (pc=6652) -> (pc'=6651) & (x'=(x+23));
[] (pc=6651) -> (pc'=6650) & (x'=(x+7));
[] (pc=6650) -> (pc'=6649) & (x'=(x+52));
[] (pc=6649) -> (pc'=6648) & (x'=(x+22));
[] (pc=6648) -> (pc'=6647) & (x'=(x+24));
[] (pc=6647) -> (pc'=6646) & (x'=(x+32));
[] (pc=6646) -> (pc'=6645) & (x'=(x+83));
[] (pc=6645) -> (pc'=6644) & (x'=(x+6));
[] (pc=6644) -> (pc'=6643) & (x'=(x+39));
[] (pc=6643) -> (pc'=6642) & (x'=(x+68));
[] (pc=6642) -> (pc'=6641) & (x'=(x+26));
[] (pc=6641) -> (pc'=6640) & (x'=(x+66));
[] (pc=6640) -> (pc'=6639) & (x'=(x+55));
[] (pc=6639) -> (pc'=6638) & (x'=(x+90));
[] (pc=6638) -> (pc'=6637) & (x'=(x+49));
[] (pc=6637) -> (pc'=6636) & (x'=(x+91));
[] (pc=6636) -> (pc'=6635) & (x'=(x+31));
[] (pc=6635) -> (pc'=6634) & (x'=(x+98));
[] (pc=6634) -> (pc'=6633) & (x'=(x+57));
[] (pc=6633) -> (pc'=6632) & (x'=(x+59));
[] (pc=6632) -> (pc'=6631) & (x'=(x+67));
[] (pc=6631) -> (pc'=6630) & (x'=(x+61));
[] (pc=6630) -> (pc'=6629) & (x'=(x+88));
[] (pc=6629) -> (pc'=6628) & (x'=(x+31));
[] (pc=6628) -> (pc'=6627) & (x'=(x+47));
[] (pc=6627) -> (pc'=6626) & (x'=(x+56));
[] (pc=6626) -> (pc'=6625) & (x'=(x+60));
[] (pc=6625) -> (pc'=6624) & (x'=(x+20));
[] (pc=6624) -> (pc'=6623) & (x'=(x+75));
[] (pc=6623) -> (pc'=6622) & (x'=(x+69));
[] (pc=6622) -> (pc'=6621) & (x'=(x+84));
[] (pc=6621) -> (pc'=6620) & (x'=(x+94));
[] (pc=6620) -> (pc'=6619) & (x'=(x+15));
[] (pc=6619) -> (pc'=6618) & (x'=(x+29));
[] (pc=6618) -> (pc'=6617) & (x'=(x+27));
[] (pc=6617) -> (pc'=6616) & (x'=(x+47));
[] (pc=6616) -> (pc'=6615) & (x'=(x+91));
[] (pc=6615) -> (pc'=6614) & (x'=(x+7));
[] (pc=6614) -> (pc'=6613) & (x'=(x+57));
[] (pc=6613) -> (pc'=6612) & (x'=(x+66));
[] (pc=6612) -> (pc'=6611) & (x'=(x+68));
[] (pc=6611) -> (pc'=6610) & (x'=(x+35));
[] (pc=6610) -> (pc'=6609) & (x'=(x+1));
[] (pc=6609) -> (pc'=6608) & (x'=(x+35));
[] (pc=6608) -> (pc'=6607) & (x'=(x+80));
[] (pc=6607) -> (pc'=6606) & (x'=(x+51));
[] (pc=6606) -> (pc'=6605) & (x'=(x+83));
[] (pc=6605) -> (pc'=6604) & (x'=(x+66));
[] (pc=6604) -> (pc'=6603) & (x'=(x+86));
[] (pc=6603) -> (pc'=6602) & (x'=(x+11));
[] (pc=6602) -> (pc'=6601) & (x'=(x+72));
[] (pc=6601) -> (pc'=6600) & (x'=(x+41));
[] (pc=6600) -> (pc'=6599) & (x'=(x+53));
[] (pc=6599) -> (pc'=6598) & (x'=(x+20));
[] (pc=6598) -> (pc'=6597) & (x'=(x+76));
[] (pc=6597) -> (pc'=6596) & (x'=(x+42));
[] (pc=6596) -> (pc'=6595) & (x'=(x+16));
[] (pc=6595) -> (pc'=6594) & (x'=(x+17));
[] (pc=6594) -> (pc'=6593) & (x'=(x+43));
[] (pc=6593) -> (pc'=6592) & (x'=(x+32));
[] (pc=6592) -> (pc'=6591) & (x'=(x+91));
[] (pc=6591) -> (pc'=6590) & (x'=(x+93));
[] (pc=6590) -> (pc'=6589) & (x'=(x+9));
[] (pc=6589) -> (pc'=6588) & (x'=(x+61));
[] (pc=6588) -> (pc'=6587) & (x'=(x+93));
[] (pc=6587) -> (pc'=6586) & (x'=(x+58));
[] (pc=6586) -> (pc'=6585) & (x'=(x+47));
[] (pc=6585) -> (pc'=6584) & (x'=(x+91));
[] (pc=6584) -> (pc'=6583) & (x'=(x+37));
[] (pc=6583) -> (pc'=6582) & (x'=(x+58));
[] (pc=6582) -> (pc'=6581) & (x'=(x+3));
[] (pc=6581) -> (pc'=6580) & (x'=(x+19));
[] (pc=6580) -> (pc'=6579) & (x'=(x+61));
[] (pc=6579) -> (pc'=6578) & (x'=(x+100));
[] (pc=6578) -> (pc'=6577) & (x'=(x+11));
[] (pc=6577) -> (pc'=6576) & (x'=(x+20));
[] (pc=6576) -> (pc'=6575) & (x'=(x+61));
[] (pc=6575) -> (pc'=6574) & (x'=(x+3));
[] (pc=6574) -> (pc'=6573) & (x'=(x+70));
[] (pc=6573) -> (pc'=6572) & (x'=(x+3));
[] (pc=6572) -> (pc'=6571) & (x'=(x+89));
[] (pc=6571) -> (pc'=6570) & (x'=(x+14));
[] (pc=6570) -> (pc'=6569) & (x'=(x+13));
[] (pc=6569) -> (pc'=1) & (x'=(x+24));
[] (pc=1) -> (pc'=6721);
[] (pc=6721) -> (pc'=6721);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

