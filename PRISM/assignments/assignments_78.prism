mdp

module TestMDP

pc : [0..43533] init 0;
x : [0..7800] init 0;
n : [0..78] init 0;

[] (pc=0) -> (pc'=43532) & (x'=0);
[] (pc=43532) -> (pc'=43531) & (n'=78);
[] (pc=43531) -> (pc'=43530) & (x'=(x+63));
[] (pc=43530) -> (pc'=43529) & (x'=(x+7));
[] (pc=43529) -> (pc'=43528) & (x'=(x+79));
[] (pc=43528) -> (pc'=43527) & (x'=(x+30));
[] (pc=43527) -> (pc'=43526) & (x'=(x+55));
[] (pc=43526) -> (pc'=43525) & (x'=(x+43));
[] (pc=43525) -> (pc'=43524) & (x'=(x+65));
[] (pc=43524) -> (pc'=43523) & (x'=(x+59));
[] (pc=43523) -> (pc'=43522) & (x'=(x+89));
[] (pc=43522) -> (pc'=43521) & (x'=(x+42));
[] (pc=43521) -> (pc'=43520) & (x'=(x+91));
[] (pc=43520) -> (pc'=43519) & (x'=(x+63));
[] (pc=43519) -> (pc'=43518) & (x'=(x+53));
[] (pc=43518) -> (pc'=43517) & (x'=(x+42));
[] (pc=43517) -> (pc'=43516) & (x'=(x+72));
[] (pc=43516) -> (pc'=43515) & (x'=(x+29));
[] (pc=43515) -> (pc'=43514) & (x'=(x+69));
[] (pc=43514) -> (pc'=43513) & (x'=(x+24));
[] (pc=43513) -> (pc'=43512) & (x'=(x+91));
[] (pc=43512) -> (pc'=43511) & (x'=(x+97));
[] (pc=43511) -> (pc'=43510) & (x'=(x+89));
[] (pc=43510) -> (pc'=43509) & (x'=(x+18));
[] (pc=43509) -> (pc'=43508) & (x'=(x+62));
[] (pc=43508) -> (pc'=43507) & (x'=(x+12));
[] (pc=43507) -> (pc'=43506) & (x'=(x+12));
[] (pc=43506) -> (pc'=43505) & (x'=(x+68));
[] (pc=43505) -> (pc'=43504) & (x'=(x+13));
[] (pc=43504) -> (pc'=43503) & (x'=(x+50));
[] (pc=43503) -> (pc'=43502) & (x'=(x+43));
[] (pc=43502) -> (pc'=43501) & (x'=(x+54));
[] (pc=43501) -> (pc'=43500) & (x'=(x+52));
[] (pc=43500) -> (pc'=43499) & (x'=(x+81));
[] (pc=43499) -> (pc'=43498) & (x'=(x+92));
[] (pc=43498) -> (pc'=43497) & (x'=(x+75));
[] (pc=43497) -> (pc'=43496) & (x'=(x+52));
[] (pc=43496) -> (pc'=43495) & (x'=(x+51));
[] (pc=43495) -> (pc'=43494) & (x'=(x+3));
[] (pc=43494) -> (pc'=43493) & (x'=(x+96));
[] (pc=43493) -> (pc'=43492) & (x'=(x+32));
[] (pc=43492) -> (pc'=43491) & (x'=(x+3));
[] (pc=43491) -> (pc'=43490) & (x'=(x+26));
[] (pc=43490) -> (pc'=43489) & (x'=(x+30));
[] (pc=43489) -> (pc'=43488) & (x'=(x+48));
[] (pc=43488) -> (pc'=43487) & (x'=(x+41));
[] (pc=43487) -> (pc'=43486) & (x'=(x+4));
[] (pc=43486) -> (pc'=43485) & (x'=(x+70));
[] (pc=43485) -> (pc'=43484) & (x'=(x+15));
[] (pc=43484) -> (pc'=43483) & (x'=(x+100));
[] (pc=43483) -> (pc'=43482) & (x'=(x+14));
[] (pc=43482) -> (pc'=43481) & (x'=(x+80));
[] (pc=43481) -> (pc'=43480) & (x'=(x+77));
[] (pc=43480) -> (pc'=43479) & (x'=(x+5));
[] (pc=43479) -> (pc'=43478) & (x'=(x+10));
[] (pc=43478) -> (pc'=43477) & (x'=(x+95));
[] (pc=43477) -> (pc'=43476) & (x'=(x+9));
[] (pc=43476) -> (pc'=43475) & (x'=(x+45));
[] (pc=43475) -> (pc'=43474) & (x'=(x+15));
[] (pc=43474) -> (pc'=43473) & (x'=(x+16));
[] (pc=43473) -> (pc'=43472) & (x'=(x+11));
[] (pc=43472) -> (pc'=43471) & (x'=(x+30));
[] (pc=43471) -> (pc'=43470) & (x'=(x+30));
[] (pc=43470) -> (pc'=43469) & (x'=(x+3));
[] (pc=43469) -> (pc'=43468) & (x'=(x+58));
[] (pc=43468) -> (pc'=43467) & (x'=(x+70));
[] (pc=43467) -> (pc'=43466) & (x'=(x+19));
[] (pc=43466) -> (pc'=43465) & (x'=(x+50));
[] (pc=43465) -> (pc'=43464) & (x'=(x+51));
[] (pc=43464) -> (pc'=43463) & (x'=(x+38));
[] (pc=43463) -> (pc'=43462) & (x'=(x+48));
[] (pc=43462) -> (pc'=43461) & (x'=(x+90));
[] (pc=43461) -> (pc'=43460) & (x'=(x+18));
[] (pc=43460) -> (pc'=43459) & (x'=(x+87));
[] (pc=43459) -> (pc'=43458) & (x'=(x+32));
[] (pc=43458) -> (pc'=43457) & (x'=(x+41));
[] (pc=43457) -> (pc'=43456) & (x'=(x+23));
[] (pc=43456) -> (pc'=43455) & (x'=(x+78));
[] (pc=43455) -> (pc'=43454) & (x'=(x+1));
[] (pc=43454) -> (pc'=1) & (x'=(x+77));
[] (pc=1) -> (pc'=43533);
[] (pc=43533) -> (pc'=43533);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

