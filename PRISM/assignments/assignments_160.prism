mdp

module TestMDP

pc : [0..8161] init 0;
x : [0..16000] init 0;
n : [0..160] init 0;

[] (pc=0) -> (pc'=8160) & (x'=0);
[] (pc=8160) -> (pc'=8159) & (n'=160);
[] (pc=8159) -> (pc'=8158) & (x'=(x+36));
[] (pc=8158) -> (pc'=8157) & (x'=(x+26));
[] (pc=8157) -> (pc'=8156) & (x'=(x+3));
[] (pc=8156) -> (pc'=8155) & (x'=(x+98));
[] (pc=8155) -> (pc'=8154) & (x'=(x+16));
[] (pc=8154) -> (pc'=8153) & (x'=(x+67));
[] (pc=8153) -> (pc'=8152) & (x'=(x+52));
[] (pc=8152) -> (pc'=8151) & (x'=(x+49));
[] (pc=8151) -> (pc'=8150) & (x'=(x+2));
[] (pc=8150) -> (pc'=8149) & (x'=(x+4));
[] (pc=8149) -> (pc'=8148) & (x'=(x+59));
[] (pc=8148) -> (pc'=8147) & (x'=(x+20));
[] (pc=8147) -> (pc'=8146) & (x'=(x+72));
[] (pc=8146) -> (pc'=8145) & (x'=(x+51));
[] (pc=8145) -> (pc'=8144) & (x'=(x+2));
[] (pc=8144) -> (pc'=8143) & (x'=(x+56));
[] (pc=8143) -> (pc'=8142) & (x'=(x+92));
[] (pc=8142) -> (pc'=8141) & (x'=(x+34));
[] (pc=8141) -> (pc'=8140) & (x'=(x+29));
[] (pc=8140) -> (pc'=8139) & (x'=(x+62));
[] (pc=8139) -> (pc'=8138) & (x'=(x+85));
[] (pc=8138) -> (pc'=8137) & (x'=(x+94));
[] (pc=8137) -> (pc'=8136) & (x'=(x+63));
[] (pc=8136) -> (pc'=8135) & (x'=(x+62));
[] (pc=8135) -> (pc'=8134) & (x'=(x+48));
[] (pc=8134) -> (pc'=8133) & (x'=(x+10));
[] (pc=8133) -> (pc'=8132) & (x'=(x+38));
[] (pc=8132) -> (pc'=8131) & (x'=(x+46));
[] (pc=8131) -> (pc'=8130) & (x'=(x+59));
[] (pc=8130) -> (pc'=8129) & (x'=(x+1));
[] (pc=8129) -> (pc'=8128) & (x'=(x+80));
[] (pc=8128) -> (pc'=8127) & (x'=(x+34));
[] (pc=8127) -> (pc'=8126) & (x'=(x+7));
[] (pc=8126) -> (pc'=8125) & (x'=(x+30));
[] (pc=8125) -> (pc'=8124) & (x'=(x+53));
[] (pc=8124) -> (pc'=8123) & (x'=(x+35));
[] (pc=8123) -> (pc'=8122) & (x'=(x+89));
[] (pc=8122) -> (pc'=8121) & (x'=(x+43));
[] (pc=8121) -> (pc'=8120) & (x'=(x+54));
[] (pc=8120) -> (pc'=8119) & (x'=(x+85));
[] (pc=8119) -> (pc'=8118) & (x'=(x+9));
[] (pc=8118) -> (pc'=8117) & (x'=(x+5));
[] (pc=8117) -> (pc'=8116) & (x'=(x+50));
[] (pc=8116) -> (pc'=8115) & (x'=(x+18));
[] (pc=8115) -> (pc'=8114) & (x'=(x+96));
[] (pc=8114) -> (pc'=8113) & (x'=(x+7));
[] (pc=8113) -> (pc'=8112) & (x'=(x+51));
[] (pc=8112) -> (pc'=8111) & (x'=(x+88));
[] (pc=8111) -> (pc'=8110) & (x'=(x+23));
[] (pc=8110) -> (pc'=8109) & (x'=(x+52));
[] (pc=8109) -> (pc'=8108) & (x'=(x+19));
[] (pc=8108) -> (pc'=8107) & (x'=(x+17));
[] (pc=8107) -> (pc'=8106) & (x'=(x+1));
[] (pc=8106) -> (pc'=8105) & (x'=(x+53));
[] (pc=8105) -> (pc'=8104) & (x'=(x+40));
[] (pc=8104) -> (pc'=8103) & (x'=(x+62));
[] (pc=8103) -> (pc'=8102) & (x'=(x+84));
[] (pc=8102) -> (pc'=8101) & (x'=(x+97));
[] (pc=8101) -> (pc'=8100) & (x'=(x+55));
[] (pc=8100) -> (pc'=8099) & (x'=(x+83));
[] (pc=8099) -> (pc'=8098) & (x'=(x+48));
[] (pc=8098) -> (pc'=8097) & (x'=(x+8));
[] (pc=8097) -> (pc'=8096) & (x'=(x+59));
[] (pc=8096) -> (pc'=8095) & (x'=(x+29));
[] (pc=8095) -> (pc'=8094) & (x'=(x+52));
[] (pc=8094) -> (pc'=8093) & (x'=(x+53));
[] (pc=8093) -> (pc'=8092) & (x'=(x+47));
[] (pc=8092) -> (pc'=8091) & (x'=(x+18));
[] (pc=8091) -> (pc'=8090) & (x'=(x+55));
[] (pc=8090) -> (pc'=8089) & (x'=(x+16));
[] (pc=8089) -> (pc'=8088) & (x'=(x+34));
[] (pc=8088) -> (pc'=8087) & (x'=(x+79));
[] (pc=8087) -> (pc'=8086) & (x'=(x+29));
[] (pc=8086) -> (pc'=8085) & (x'=(x+9));
[] (pc=8085) -> (pc'=8084) & (x'=(x+11));
[] (pc=8084) -> (pc'=8083) & (x'=(x+81));
[] (pc=8083) -> (pc'=8082) & (x'=(x+20));
[] (pc=8082) -> (pc'=8081) & (x'=(x+43));
[] (pc=8081) -> (pc'=8080) & (x'=(x+17));
[] (pc=8080) -> (pc'=8079) & (x'=(x+39));
[] (pc=8079) -> (pc'=8078) & (x'=(x+50));
[] (pc=8078) -> (pc'=8077) & (x'=(x+58));
[] (pc=8077) -> (pc'=8076) & (x'=(x+10));
[] (pc=8076) -> (pc'=8075) & (x'=(x+20));
[] (pc=8075) -> (pc'=8074) & (x'=(x+55));
[] (pc=8074) -> (pc'=8073) & (x'=(x+25));
[] (pc=8073) -> (pc'=8072) & (x'=(x+5));
[] (pc=8072) -> (pc'=8071) & (x'=(x+71));
[] (pc=8071) -> (pc'=8070) & (x'=(x+74));
[] (pc=8070) -> (pc'=8069) & (x'=(x+54));
[] (pc=8069) -> (pc'=8068) & (x'=(x+12));
[] (pc=8068) -> (pc'=8067) & (x'=(x+17));
[] (pc=8067) -> (pc'=8066) & (x'=(x+74));
[] (pc=8066) -> (pc'=8065) & (x'=(x+75));
[] (pc=8065) -> (pc'=8064) & (x'=(x+62));
[] (pc=8064) -> (pc'=8063) & (x'=(x+79));
[] (pc=8063) -> (pc'=8062) & (x'=(x+93));
[] (pc=8062) -> (pc'=8061) & (x'=(x+49));
[] (pc=8061) -> (pc'=8060) & (x'=(x+36));
[] (pc=8060) -> (pc'=8059) & (x'=(x+87));
[] (pc=8059) -> (pc'=8058) & (x'=(x+67));
[] (pc=8058) -> (pc'=8057) & (x'=(x+64));
[] (pc=8057) -> (pc'=8056) & (x'=(x+18));
[] (pc=8056) -> (pc'=8055) & (x'=(x+20));
[] (pc=8055) -> (pc'=8054) & (x'=(x+5));
[] (pc=8054) -> (pc'=8053) & (x'=(x+4));
[] (pc=8053) -> (pc'=8052) & (x'=(x+60));
[] (pc=8052) -> (pc'=8051) & (x'=(x+64));
[] (pc=8051) -> (pc'=8050) & (x'=(x+77));
[] (pc=8050) -> (pc'=8049) & (x'=(x+9));
[] (pc=8049) -> (pc'=8048) & (x'=(x+87));
[] (pc=8048) -> (pc'=8047) & (x'=(x+59));
[] (pc=8047) -> (pc'=8046) & (x'=(x+19));
[] (pc=8046) -> (pc'=8045) & (x'=(x+100));
[] (pc=8045) -> (pc'=8044) & (x'=(x+6));
[] (pc=8044) -> (pc'=8043) & (x'=(x+43));
[] (pc=8043) -> (pc'=8042) & (x'=(x+87));
[] (pc=8042) -> (pc'=8041) & (x'=(x+91));
[] (pc=8041) -> (pc'=8040) & (x'=(x+46));
[] (pc=8040) -> (pc'=8039) & (x'=(x+57));
[] (pc=8039) -> (pc'=8038) & (x'=(x+98));
[] (pc=8038) -> (pc'=8037) & (x'=(x+51));
[] (pc=8037) -> (pc'=8036) & (x'=(x+99));
[] (pc=8036) -> (pc'=8035) & (x'=(x+17));
[] (pc=8035) -> (pc'=8034) & (x'=(x+95));
[] (pc=8034) -> (pc'=8033) & (x'=(x+94));
[] (pc=8033) -> (pc'=8032) & (x'=(x+58));
[] (pc=8032) -> (pc'=8031) & (x'=(x+71));
[] (pc=8031) -> (pc'=8030) & (x'=(x+47));
[] (pc=8030) -> (pc'=8029) & (x'=(x+22));
[] (pc=8029) -> (pc'=8028) & (x'=(x+97));
[] (pc=8028) -> (pc'=8027) & (x'=(x+27));
[] (pc=8027) -> (pc'=8026) & (x'=(x+16));
[] (pc=8026) -> (pc'=8025) & (x'=(x+51));
[] (pc=8025) -> (pc'=8024) & (x'=(x+2));
[] (pc=8024) -> (pc'=8023) & (x'=(x+5));
[] (pc=8023) -> (pc'=8022) & (x'=(x+21));
[] (pc=8022) -> (pc'=8021) & (x'=(x+80));
[] (pc=8021) -> (pc'=8020) & (x'=(x+39));
[] (pc=8020) -> (pc'=8019) & (x'=(x+23));
[] (pc=8019) -> (pc'=8018) & (x'=(x+52));
[] (pc=8018) -> (pc'=8017) & (x'=(x+80));
[] (pc=8017) -> (pc'=8016) & (x'=(x+90));
[] (pc=8016) -> (pc'=8015) & (x'=(x+80));
[] (pc=8015) -> (pc'=8014) & (x'=(x+27));
[] (pc=8014) -> (pc'=8013) & (x'=(x+33));
[] (pc=8013) -> (pc'=8012) & (x'=(x+76));
[] (pc=8012) -> (pc'=8011) & (x'=(x+51));
[] (pc=8011) -> (pc'=8010) & (x'=(x+4));
[] (pc=8010) -> (pc'=8009) & (x'=(x+6));
[] (pc=8009) -> (pc'=8008) & (x'=(x+41));
[] (pc=8008) -> (pc'=8007) & (x'=(x+11));
[] (pc=8007) -> (pc'=8006) & (x'=(x+55));
[] (pc=8006) -> (pc'=8005) & (x'=(x+90));
[] (pc=8005) -> (pc'=8004) & (x'=(x+39));
[] (pc=8004) -> (pc'=8003) & (x'=(x+66));
[] (pc=8003) -> (pc'=8002) & (x'=(x+76));
[] (pc=8002) -> (pc'=8001) & (x'=(x+63));
[] (pc=8001) -> (pc'=8000) & (x'=(x+23));
[] (pc=8000) -> (pc'=1) & (x'=(x+66));
[] (pc=1) -> (pc'=8161);
[] (pc=8161) -> (pc'=8161);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

