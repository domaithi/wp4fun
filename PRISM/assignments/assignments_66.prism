mdp

module TestMDP

pc : [0..42630] init 0;
x : [0..6600] init 0;
n : [0..66] init 0;

[] (pc=0) -> (pc'=42629) & (x'=0);
[] (pc=42629) -> (pc'=42628) & (n'=66);
[] (pc=42628) -> (pc'=42627) & (x'=(x+99));
[] (pc=42627) -> (pc'=42626) & (x'=(x+24));
[] (pc=42626) -> (pc'=42625) & (x'=(x+61));
[] (pc=42625) -> (pc'=42624) & (x'=(x+81));
[] (pc=42624) -> (pc'=42623) & (x'=(x+6));
[] (pc=42623) -> (pc'=42622) & (x'=(x+69));
[] (pc=42622) -> (pc'=42621) & (x'=(x+3));
[] (pc=42621) -> (pc'=42620) & (x'=(x+100));
[] (pc=42620) -> (pc'=42619) & (x'=(x+61));
[] (pc=42619) -> (pc'=42618) & (x'=(x+24));
[] (pc=42618) -> (pc'=42617) & (x'=(x+47));
[] (pc=42617) -> (pc'=42616) & (x'=(x+76));
[] (pc=42616) -> (pc'=42615) & (x'=(x+91));
[] (pc=42615) -> (pc'=42614) & (x'=(x+24));
[] (pc=42614) -> (pc'=42613) & (x'=(x+69));
[] (pc=42613) -> (pc'=42612) & (x'=(x+86));
[] (pc=42612) -> (pc'=42611) & (x'=(x+46));
[] (pc=42611) -> (pc'=42610) & (x'=(x+81));
[] (pc=42610) -> (pc'=42609) & (x'=(x+78));
[] (pc=42609) -> (pc'=42608) & (x'=(x+75));
[] (pc=42608) -> (pc'=42607) & (x'=(x+57));
[] (pc=42607) -> (pc'=42606) & (x'=(x+68));
[] (pc=42606) -> (pc'=42605) & (x'=(x+67));
[] (pc=42605) -> (pc'=42604) & (x'=(x+38));
[] (pc=42604) -> (pc'=42603) & (x'=(x+67));
[] (pc=42603) -> (pc'=42602) & (x'=(x+95));
[] (pc=42602) -> (pc'=42601) & (x'=(x+16));
[] (pc=42601) -> (pc'=42600) & (x'=(x+12));
[] (pc=42600) -> (pc'=42599) & (x'=(x+45));
[] (pc=42599) -> (pc'=42598) & (x'=(x+57));
[] (pc=42598) -> (pc'=42597) & (x'=(x+96));
[] (pc=42597) -> (pc'=42596) & (x'=(x+56));
[] (pc=42596) -> (pc'=42595) & (x'=(x+41));
[] (pc=42595) -> (pc'=42594) & (x'=(x+72));
[] (pc=42594) -> (pc'=42593) & (x'=(x+44));
[] (pc=42593) -> (pc'=42592) & (x'=(x+72));
[] (pc=42592) -> (pc'=42591) & (x'=(x+32));
[] (pc=42591) -> (pc'=42590) & (x'=(x+24));
[] (pc=42590) -> (pc'=42589) & (x'=(x+23));
[] (pc=42589) -> (pc'=42588) & (x'=(x+60));
[] (pc=42588) -> (pc'=42587) & (x'=(x+17));
[] (pc=42587) -> (pc'=42586) & (x'=(x+4));
[] (pc=42586) -> (pc'=42585) & (x'=(x+81));
[] (pc=42585) -> (pc'=42584) & (x'=(x+55));
[] (pc=42584) -> (pc'=42583) & (x'=(x+61));
[] (pc=42583) -> (pc'=42582) & (x'=(x+29));
[] (pc=42582) -> (pc'=42581) & (x'=(x+1));
[] (pc=42581) -> (pc'=42580) & (x'=(x+65));
[] (pc=42580) -> (pc'=42579) & (x'=(x+60));
[] (pc=42579) -> (pc'=42578) & (x'=(x+32));
[] (pc=42578) -> (pc'=42577) & (x'=(x+7));
[] (pc=42577) -> (pc'=42576) & (x'=(x+46));
[] (pc=42576) -> (pc'=42575) & (x'=(x+60));
[] (pc=42575) -> (pc'=42574) & (x'=(x+91));
[] (pc=42574) -> (pc'=42573) & (x'=(x+73));
[] (pc=42573) -> (pc'=42572) & (x'=(x+88));
[] (pc=42572) -> (pc'=42571) & (x'=(x+60));
[] (pc=42571) -> (pc'=42570) & (x'=(x+68));
[] (pc=42570) -> (pc'=42569) & (x'=(x+84));
[] (pc=42569) -> (pc'=42568) & (x'=(x+7));
[] (pc=42568) -> (pc'=42567) & (x'=(x+74));
[] (pc=42567) -> (pc'=42566) & (x'=(x+14));
[] (pc=42566) -> (pc'=42565) & (x'=(x+99));
[] (pc=42565) -> (pc'=42564) & (x'=(x+76));
[] (pc=42564) -> (pc'=42563) & (x'=(x+33));
[] (pc=42563) -> (pc'=1) & (x'=(x+98));
[] (pc=1) -> (pc'=42630);
[] (pc=42630) -> (pc'=42630);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

