mdp

module TestMDP

pc : [0..10730] init 0;
x : [0..17500] init 0;
n : [0..175] init 0;

[] (pc=0) -> (pc'=10729) & (x'=0);
[] (pc=10729) -> (pc'=10728) & (n'=175);
[] (pc=10728) -> (pc'=10727) & (x'=(x+46));
[] (pc=10727) -> (pc'=10726) & (x'=(x+22));
[] (pc=10726) -> (pc'=10725) & (x'=(x+40));
[] (pc=10725) -> (pc'=10724) & (x'=(x+66));
[] (pc=10724) -> (pc'=10723) & (x'=(x+93));
[] (pc=10723) -> (pc'=10722) & (x'=(x+13));
[] (pc=10722) -> (pc'=10721) & (x'=(x+5));
[] (pc=10721) -> (pc'=10720) & (x'=(x+17));
[] (pc=10720) -> (pc'=10719) & (x'=(x+8));
[] (pc=10719) -> (pc'=10718) & (x'=(x+40));
[] (pc=10718) -> (pc'=10717) & (x'=(x+43));
[] (pc=10717) -> (pc'=10716) & (x'=(x+77));
[] (pc=10716) -> (pc'=10715) & (x'=(x+52));
[] (pc=10715) -> (pc'=10714) & (x'=(x+5));
[] (pc=10714) -> (pc'=10713) & (x'=(x+40));
[] (pc=10713) -> (pc'=10712) & (x'=(x+36));
[] (pc=10712) -> (pc'=10711) & (x'=(x+47));
[] (pc=10711) -> (pc'=10710) & (x'=(x+62));
[] (pc=10710) -> (pc'=10709) & (x'=(x+13));
[] (pc=10709) -> (pc'=10708) & (x'=(x+48));
[] (pc=10708) -> (pc'=10707) & (x'=(x+64));
[] (pc=10707) -> (pc'=10706) & (x'=(x+89));
[] (pc=10706) -> (pc'=10705) & (x'=(x+52));
[] (pc=10705) -> (pc'=10704) & (x'=(x+81));
[] (pc=10704) -> (pc'=10703) & (x'=(x+12));
[] (pc=10703) -> (pc'=10702) & (x'=(x+79));
[] (pc=10702) -> (pc'=10701) & (x'=(x+51));
[] (pc=10701) -> (pc'=10700) & (x'=(x+1));
[] (pc=10700) -> (pc'=10699) & (x'=(x+69));
[] (pc=10699) -> (pc'=10698) & (x'=(x+14));
[] (pc=10698) -> (pc'=10697) & (x'=(x+87));
[] (pc=10697) -> (pc'=10696) & (x'=(x+24));
[] (pc=10696) -> (pc'=10695) & (x'=(x+8));
[] (pc=10695) -> (pc'=10694) & (x'=(x+4));
[] (pc=10694) -> (pc'=10693) & (x'=(x+91));
[] (pc=10693) -> (pc'=10692) & (x'=(x+2));
[] (pc=10692) -> (pc'=10691) & (x'=(x+63));
[] (pc=10691) -> (pc'=10690) & (x'=(x+94));
[] (pc=10690) -> (pc'=10689) & (x'=(x+66));
[] (pc=10689) -> (pc'=10688) & (x'=(x+7));
[] (pc=10688) -> (pc'=10687) & (x'=(x+70));
[] (pc=10687) -> (pc'=10686) & (x'=(x+37));
[] (pc=10686) -> (pc'=10685) & (x'=(x+96));
[] (pc=10685) -> (pc'=10684) & (x'=(x+42));
[] (pc=10684) -> (pc'=10683) & (x'=(x+30));
[] (pc=10683) -> (pc'=10682) & (x'=(x+77));
[] (pc=10682) -> (pc'=10681) & (x'=(x+79));
[] (pc=10681) -> (pc'=10680) & (x'=(x+72));
[] (pc=10680) -> (pc'=10679) & (x'=(x+49));
[] (pc=10679) -> (pc'=10678) & (x'=(x+60));
[] (pc=10678) -> (pc'=10677) & (x'=(x+3));
[] (pc=10677) -> (pc'=10676) & (x'=(x+64));
[] (pc=10676) -> (pc'=10675) & (x'=(x+59));
[] (pc=10675) -> (pc'=10674) & (x'=(x+24));
[] (pc=10674) -> (pc'=10673) & (x'=(x+86));
[] (pc=10673) -> (pc'=10672) & (x'=(x+45));
[] (pc=10672) -> (pc'=10671) & (x'=(x+3));
[] (pc=10671) -> (pc'=10670) & (x'=(x+35));
[] (pc=10670) -> (pc'=10669) & (x'=(x+66));
[] (pc=10669) -> (pc'=10668) & (x'=(x+36));
[] (pc=10668) -> (pc'=10667) & (x'=(x+65));
[] (pc=10667) -> (pc'=10666) & (x'=(x+91));
[] (pc=10666) -> (pc'=10665) & (x'=(x+94));
[] (pc=10665) -> (pc'=10664) & (x'=(x+21));
[] (pc=10664) -> (pc'=10663) & (x'=(x+7));
[] (pc=10663) -> (pc'=10662) & (x'=(x+72));
[] (pc=10662) -> (pc'=10661) & (x'=(x+90));
[] (pc=10661) -> (pc'=10660) & (x'=(x+56));
[] (pc=10660) -> (pc'=10659) & (x'=(x+84));
[] (pc=10659) -> (pc'=10658) & (x'=(x+47));
[] (pc=10658) -> (pc'=10657) & (x'=(x+31));
[] (pc=10657) -> (pc'=10656) & (x'=(x+33));
[] (pc=10656) -> (pc'=10655) & (x'=(x+62));
[] (pc=10655) -> (pc'=10654) & (x'=(x+28));
[] (pc=10654) -> (pc'=10653) & (x'=(x+35));
[] (pc=10653) -> (pc'=10652) & (x'=(x+31));
[] (pc=10652) -> (pc'=10651) & (x'=(x+17));
[] (pc=10651) -> (pc'=10650) & (x'=(x+57));
[] (pc=10650) -> (pc'=10649) & (x'=(x+38));
[] (pc=10649) -> (pc'=10648) & (x'=(x+79));
[] (pc=10648) -> (pc'=10647) & (x'=(x+62));
[] (pc=10647) -> (pc'=10646) & (x'=(x+85));
[] (pc=10646) -> (pc'=10645) & (x'=(x+35));
[] (pc=10645) -> (pc'=10644) & (x'=(x+50));
[] (pc=10644) -> (pc'=10643) & (x'=(x+5));
[] (pc=10643) -> (pc'=10642) & (x'=(x+10));
[] (pc=10642) -> (pc'=10641) & (x'=(x+85));
[] (pc=10641) -> (pc'=10640) & (x'=(x+64));
[] (pc=10640) -> (pc'=10639) & (x'=(x+57));
[] (pc=10639) -> (pc'=10638) & (x'=(x+87));
[] (pc=10638) -> (pc'=10637) & (x'=(x+51));
[] (pc=10637) -> (pc'=10636) & (x'=(x+98));
[] (pc=10636) -> (pc'=10635) & (x'=(x+67));
[] (pc=10635) -> (pc'=10634) & (x'=(x+31));
[] (pc=10634) -> (pc'=10633) & (x'=(x+2));
[] (pc=10633) -> (pc'=10632) & (x'=(x+58));
[] (pc=10632) -> (pc'=10631) & (x'=(x+92));
[] (pc=10631) -> (pc'=10630) & (x'=(x+93));
[] (pc=10630) -> (pc'=10629) & (x'=(x+81));
[] (pc=10629) -> (pc'=10628) & (x'=(x+48));
[] (pc=10628) -> (pc'=10627) & (x'=(x+72));
[] (pc=10627) -> (pc'=10626) & (x'=(x+43));
[] (pc=10626) -> (pc'=10625) & (x'=(x+28));
[] (pc=10625) -> (pc'=10624) & (x'=(x+41));
[] (pc=10624) -> (pc'=10623) & (x'=(x+38));
[] (pc=10623) -> (pc'=10622) & (x'=(x+21));
[] (pc=10622) -> (pc'=10621) & (x'=(x+41));
[] (pc=10621) -> (pc'=10620) & (x'=(x+14));
[] (pc=10620) -> (pc'=10619) & (x'=(x+19));
[] (pc=10619) -> (pc'=10618) & (x'=(x+67));
[] (pc=10618) -> (pc'=10617) & (x'=(x+55));
[] (pc=10617) -> (pc'=10616) & (x'=(x+28));
[] (pc=10616) -> (pc'=10615) & (x'=(x+74));
[] (pc=10615) -> (pc'=10614) & (x'=(x+20));
[] (pc=10614) -> (pc'=10613) & (x'=(x+38));
[] (pc=10613) -> (pc'=10612) & (x'=(x+89));
[] (pc=10612) -> (pc'=10611) & (x'=(x+90));
[] (pc=10611) -> (pc'=10610) & (x'=(x+48));
[] (pc=10610) -> (pc'=10609) & (x'=(x+60));
[] (pc=10609) -> (pc'=10608) & (x'=(x+82));
[] (pc=10608) -> (pc'=10607) & (x'=(x+97));
[] (pc=10607) -> (pc'=10606) & (x'=(x+2));
[] (pc=10606) -> (pc'=10605) & (x'=(x+74));
[] (pc=10605) -> (pc'=10604) & (x'=(x+44));
[] (pc=10604) -> (pc'=10603) & (x'=(x+24));
[] (pc=10603) -> (pc'=10602) & (x'=(x+76));
[] (pc=10602) -> (pc'=10601) & (x'=(x+73));
[] (pc=10601) -> (pc'=10600) & (x'=(x+98));
[] (pc=10600) -> (pc'=10599) & (x'=(x+77));
[] (pc=10599) -> (pc'=10598) & (x'=(x+19));
[] (pc=10598) -> (pc'=10597) & (x'=(x+52));
[] (pc=10597) -> (pc'=10596) & (x'=(x+3));
[] (pc=10596) -> (pc'=10595) & (x'=(x+9));
[] (pc=10595) -> (pc'=10594) & (x'=(x+78));
[] (pc=10594) -> (pc'=10593) & (x'=(x+99));
[] (pc=10593) -> (pc'=10592) & (x'=(x+30));
[] (pc=10592) -> (pc'=10591) & (x'=(x+94));
[] (pc=10591) -> (pc'=10590) & (x'=(x+58));
[] (pc=10590) -> (pc'=10589) & (x'=(x+77));
[] (pc=10589) -> (pc'=10588) & (x'=(x+67));
[] (pc=10588) -> (pc'=10587) & (x'=(x+35));
[] (pc=10587) -> (pc'=10586) & (x'=(x+82));
[] (pc=10586) -> (pc'=10585) & (x'=(x+66));
[] (pc=10585) -> (pc'=10584) & (x'=(x+56));
[] (pc=10584) -> (pc'=10583) & (x'=(x+31));
[] (pc=10583) -> (pc'=10582) & (x'=(x+86));
[] (pc=10582) -> (pc'=10581) & (x'=(x+10));
[] (pc=10581) -> (pc'=10580) & (x'=(x+85));
[] (pc=10580) -> (pc'=10579) & (x'=(x+20));
[] (pc=10579) -> (pc'=10578) & (x'=(x+59));
[] (pc=10578) -> (pc'=10577) & (x'=(x+34));
[] (pc=10577) -> (pc'=10576) & (x'=(x+10));
[] (pc=10576) -> (pc'=10575) & (x'=(x+30));
[] (pc=10575) -> (pc'=10574) & (x'=(x+35));
[] (pc=10574) -> (pc'=10573) & (x'=(x+88));
[] (pc=10573) -> (pc'=10572) & (x'=(x+24));
[] (pc=10572) -> (pc'=10571) & (x'=(x+94));
[] (pc=10571) -> (pc'=10570) & (x'=(x+44));
[] (pc=10570) -> (pc'=10569) & (x'=(x+9));
[] (pc=10569) -> (pc'=10568) & (x'=(x+75));
[] (pc=10568) -> (pc'=10567) & (x'=(x+56));
[] (pc=10567) -> (pc'=10566) & (x'=(x+15));
[] (pc=10566) -> (pc'=10565) & (x'=(x+75));
[] (pc=10565) -> (pc'=10564) & (x'=(x+52));
[] (pc=10564) -> (pc'=10563) & (x'=(x+89));
[] (pc=10563) -> (pc'=10562) & (x'=(x+5));
[] (pc=10562) -> (pc'=10561) & (x'=(x+57));
[] (pc=10561) -> (pc'=10560) & (x'=(x+35));
[] (pc=10560) -> (pc'=10559) & (x'=(x+19));
[] (pc=10559) -> (pc'=10558) & (x'=(x+20));
[] (pc=10558) -> (pc'=10557) & (x'=(x+73));
[] (pc=10557) -> (pc'=10556) & (x'=(x+44));
[] (pc=10556) -> (pc'=10555) & (x'=(x+28));
[] (pc=10555) -> (pc'=10554) & (x'=(x+64));
[] (pc=10554) -> (pc'=1) & (x'=(x+6));
[] (pc=1) -> (pc'=10730);
[] (pc=10730) -> (pc'=10730);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

