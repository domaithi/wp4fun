mdp

module TestMDP

pc : [0..8488] init 0;
x : [0..16200] init 0;
n : [0..162] init 0;

[] (pc=0) -> (pc'=8487) & (x'=0);
[] (pc=8487) -> (pc'=8486) & (n'=162);
[] (pc=8486) -> (pc'=8485) & (x'=(x+16));
[] (pc=8485) -> (pc'=8484) & (x'=(x+90));
[] (pc=8484) -> (pc'=8483) & (x'=(x+54));
[] (pc=8483) -> (pc'=8482) & (x'=(x+98));
[] (pc=8482) -> (pc'=8481) & (x'=(x+44));
[] (pc=8481) -> (pc'=8480) & (x'=(x+31));
[] (pc=8480) -> (pc'=8479) & (x'=(x+16));
[] (pc=8479) -> (pc'=8478) & (x'=(x+29));
[] (pc=8478) -> (pc'=8477) & (x'=(x+36));
[] (pc=8477) -> (pc'=8476) & (x'=(x+94));
[] (pc=8476) -> (pc'=8475) & (x'=(x+90));
[] (pc=8475) -> (pc'=8474) & (x'=(x+46));
[] (pc=8474) -> (pc'=8473) & (x'=(x+22));
[] (pc=8473) -> (pc'=8472) & (x'=(x+17));
[] (pc=8472) -> (pc'=8471) & (x'=(x+57));
[] (pc=8471) -> (pc'=8470) & (x'=(x+27));
[] (pc=8470) -> (pc'=8469) & (x'=(x+40));
[] (pc=8469) -> (pc'=8468) & (x'=(x+6));
[] (pc=8468) -> (pc'=8467) & (x'=(x+45));
[] (pc=8467) -> (pc'=8466) & (x'=(x+31));
[] (pc=8466) -> (pc'=8465) & (x'=(x+86));
[] (pc=8465) -> (pc'=8464) & (x'=(x+61));
[] (pc=8464) -> (pc'=8463) & (x'=(x+76));
[] (pc=8463) -> (pc'=8462) & (x'=(x+36));
[] (pc=8462) -> (pc'=8461) & (x'=(x+12));
[] (pc=8461) -> (pc'=8460) & (x'=(x+95));
[] (pc=8460) -> (pc'=8459) & (x'=(x+4));
[] (pc=8459) -> (pc'=8458) & (x'=(x+42));
[] (pc=8458) -> (pc'=8457) & (x'=(x+69));
[] (pc=8457) -> (pc'=8456) & (x'=(x+73));
[] (pc=8456) -> (pc'=8455) & (x'=(x+32));
[] (pc=8455) -> (pc'=8454) & (x'=(x+13));
[] (pc=8454) -> (pc'=8453) & (x'=(x+85));
[] (pc=8453) -> (pc'=8452) & (x'=(x+63));
[] (pc=8452) -> (pc'=8451) & (x'=(x+93));
[] (pc=8451) -> (pc'=8450) & (x'=(x+36));
[] (pc=8450) -> (pc'=8449) & (x'=(x+73));
[] (pc=8449) -> (pc'=8448) & (x'=(x+11));
[] (pc=8448) -> (pc'=8447) & (x'=(x+89));
[] (pc=8447) -> (pc'=8446) & (x'=(x+89));
[] (pc=8446) -> (pc'=8445) & (x'=(x+82));
[] (pc=8445) -> (pc'=8444) & (x'=(x+35));
[] (pc=8444) -> (pc'=8443) & (x'=(x+73));
[] (pc=8443) -> (pc'=8442) & (x'=(x+60));
[] (pc=8442) -> (pc'=8441) & (x'=(x+25));
[] (pc=8441) -> (pc'=8440) & (x'=(x+45));
[] (pc=8440) -> (pc'=8439) & (x'=(x+43));
[] (pc=8439) -> (pc'=8438) & (x'=(x+89));
[] (pc=8438) -> (pc'=8437) & (x'=(x+50));
[] (pc=8437) -> (pc'=8436) & (x'=(x+72));
[] (pc=8436) -> (pc'=8435) & (x'=(x+82));
[] (pc=8435) -> (pc'=8434) & (x'=(x+68));
[] (pc=8434) -> (pc'=8433) & (x'=(x+71));
[] (pc=8433) -> (pc'=8432) & (x'=(x+59));
[] (pc=8432) -> (pc'=8431) & (x'=(x+25));
[] (pc=8431) -> (pc'=8430) & (x'=(x+44));
[] (pc=8430) -> (pc'=8429) & (x'=(x+75));
[] (pc=8429) -> (pc'=8428) & (x'=(x+13));
[] (pc=8428) -> (pc'=8427) & (x'=(x+79));
[] (pc=8427) -> (pc'=8426) & (x'=(x+55));
[] (pc=8426) -> (pc'=8425) & (x'=(x+5));
[] (pc=8425) -> (pc'=8424) & (x'=(x+45));
[] (pc=8424) -> (pc'=8423) & (x'=(x+94));
[] (pc=8423) -> (pc'=8422) & (x'=(x+73));
[] (pc=8422) -> (pc'=8421) & (x'=(x+5));
[] (pc=8421) -> (pc'=8420) & (x'=(x+23));
[] (pc=8420) -> (pc'=8419) & (x'=(x+13));
[] (pc=8419) -> (pc'=8418) & (x'=(x+64));
[] (pc=8418) -> (pc'=8417) & (x'=(x+50));
[] (pc=8417) -> (pc'=8416) & (x'=(x+64));
[] (pc=8416) -> (pc'=8415) & (x'=(x+83));
[] (pc=8415) -> (pc'=8414) & (x'=(x+10));
[] (pc=8414) -> (pc'=8413) & (x'=(x+75));
[] (pc=8413) -> (pc'=8412) & (x'=(x+26));
[] (pc=8412) -> (pc'=8411) & (x'=(x+61));
[] (pc=8411) -> (pc'=8410) & (x'=(x+77));
[] (pc=8410) -> (pc'=8409) & (x'=(x+93));
[] (pc=8409) -> (pc'=8408) & (x'=(x+36));
[] (pc=8408) -> (pc'=8407) & (x'=(x+64));
[] (pc=8407) -> (pc'=8406) & (x'=(x+30));
[] (pc=8406) -> (pc'=8405) & (x'=(x+4));
[] (pc=8405) -> (pc'=8404) & (x'=(x+9));
[] (pc=8404) -> (pc'=8403) & (x'=(x+33));
[] (pc=8403) -> (pc'=8402) & (x'=(x+99));
[] (pc=8402) -> (pc'=8401) & (x'=(x+72));
[] (pc=8401) -> (pc'=8400) & (x'=(x+2));
[] (pc=8400) -> (pc'=8399) & (x'=(x+36));
[] (pc=8399) -> (pc'=8398) & (x'=(x+25));
[] (pc=8398) -> (pc'=8397) & (x'=(x+75));
[] (pc=8397) -> (pc'=8396) & (x'=(x+96));
[] (pc=8396) -> (pc'=8395) & (x'=(x+99));
[] (pc=8395) -> (pc'=8394) & (x'=(x+6));
[] (pc=8394) -> (pc'=8393) & (x'=(x+48));
[] (pc=8393) -> (pc'=8392) & (x'=(x+92));
[] (pc=8392) -> (pc'=8391) & (x'=(x+51));
[] (pc=8391) -> (pc'=8390) & (x'=(x+61));
[] (pc=8390) -> (pc'=8389) & (x'=(x+97));
[] (pc=8389) -> (pc'=8388) & (x'=(x+98));
[] (pc=8388) -> (pc'=8387) & (x'=(x+81));
[] (pc=8387) -> (pc'=8386) & (x'=(x+90));
[] (pc=8386) -> (pc'=8385) & (x'=(x+84));
[] (pc=8385) -> (pc'=8384) & (x'=(x+42));
[] (pc=8384) -> (pc'=8383) & (x'=(x+99));
[] (pc=8383) -> (pc'=8382) & (x'=(x+68));
[] (pc=8382) -> (pc'=8381) & (x'=(x+39));
[] (pc=8381) -> (pc'=8380) & (x'=(x+10));
[] (pc=8380) -> (pc'=8379) & (x'=(x+2));
[] (pc=8379) -> (pc'=8378) & (x'=(x+6));
[] (pc=8378) -> (pc'=8377) & (x'=(x+88));
[] (pc=8377) -> (pc'=8376) & (x'=(x+50));
[] (pc=8376) -> (pc'=8375) & (x'=(x+10));
[] (pc=8375) -> (pc'=8374) & (x'=(x+47));
[] (pc=8374) -> (pc'=8373) & (x'=(x+95));
[] (pc=8373) -> (pc'=8372) & (x'=(x+19));
[] (pc=8372) -> (pc'=8371) & (x'=(x+41));
[] (pc=8371) -> (pc'=8370) & (x'=(x+12));
[] (pc=8370) -> (pc'=8369) & (x'=(x+70));
[] (pc=8369) -> (pc'=8368) & (x'=(x+46));
[] (pc=8368) -> (pc'=8367) & (x'=(x+21));
[] (pc=8367) -> (pc'=8366) & (x'=(x+15));
[] (pc=8366) -> (pc'=8365) & (x'=(x+67));
[] (pc=8365) -> (pc'=8364) & (x'=(x+83));
[] (pc=8364) -> (pc'=8363) & (x'=(x+4));
[] (pc=8363) -> (pc'=8362) & (x'=(x+98));
[] (pc=8362) -> (pc'=8361) & (x'=(x+27));
[] (pc=8361) -> (pc'=8360) & (x'=(x+85));
[] (pc=8360) -> (pc'=8359) & (x'=(x+73));
[] (pc=8359) -> (pc'=8358) & (x'=(x+75));
[] (pc=8358) -> (pc'=8357) & (x'=(x+51));
[] (pc=8357) -> (pc'=8356) & (x'=(x+68));
[] (pc=8356) -> (pc'=8355) & (x'=(x+1));
[] (pc=8355) -> (pc'=8354) & (x'=(x+91));
[] (pc=8354) -> (pc'=8353) & (x'=(x+11));
[] (pc=8353) -> (pc'=8352) & (x'=(x+68));
[] (pc=8352) -> (pc'=8351) & (x'=(x+81));
[] (pc=8351) -> (pc'=8350) & (x'=(x+89));
[] (pc=8350) -> (pc'=8349) & (x'=(x+35));
[] (pc=8349) -> (pc'=8348) & (x'=(x+10));
[] (pc=8348) -> (pc'=8347) & (x'=(x+90));
[] (pc=8347) -> (pc'=8346) & (x'=(x+70));
[] (pc=8346) -> (pc'=8345) & (x'=(x+9));
[] (pc=8345) -> (pc'=8344) & (x'=(x+77));
[] (pc=8344) -> (pc'=8343) & (x'=(x+98));
[] (pc=8343) -> (pc'=8342) & (x'=(x+78));
[] (pc=8342) -> (pc'=8341) & (x'=(x+59));
[] (pc=8341) -> (pc'=8340) & (x'=(x+23));
[] (pc=8340) -> (pc'=8339) & (x'=(x+15));
[] (pc=8339) -> (pc'=8338) & (x'=(x+7));
[] (pc=8338) -> (pc'=8337) & (x'=(x+54));
[] (pc=8337) -> (pc'=8336) & (x'=(x+93));
[] (pc=8336) -> (pc'=8335) & (x'=(x+28));
[] (pc=8335) -> (pc'=8334) & (x'=(x+10));
[] (pc=8334) -> (pc'=8333) & (x'=(x+11));
[] (pc=8333) -> (pc'=8332) & (x'=(x+74));
[] (pc=8332) -> (pc'=8331) & (x'=(x+24));
[] (pc=8331) -> (pc'=8330) & (x'=(x+44));
[] (pc=8330) -> (pc'=8329) & (x'=(x+72));
[] (pc=8329) -> (pc'=8328) & (x'=(x+79));
[] (pc=8328) -> (pc'=8327) & (x'=(x+14));
[] (pc=8327) -> (pc'=8326) & (x'=(x+100));
[] (pc=8326) -> (pc'=8325) & (x'=(x+36));
[] (pc=8325) -> (pc'=1) & (x'=(x+28));
[] (pc=1) -> (pc'=8488);
[] (pc=8488) -> (pc'=8488);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

