mdp

module TestMDP

pc : [0..42106] init 0;
x : [0..5800] init 0;
n : [0..58] init 0;

[] (pc=0) -> (pc'=42105) & (x'=0);
[] (pc=42105) -> (pc'=42104) & (n'=58);
[] (pc=42104) -> (pc'=42103) & (x'=(x+66));
[] (pc=42103) -> (pc'=42102) & (x'=(x+46));
[] (pc=42102) -> (pc'=42101) & (x'=(x+30));
[] (pc=42101) -> (pc'=42100) & (x'=(x+7));
[] (pc=42100) -> (pc'=42099) & (x'=(x+91));
[] (pc=42099) -> (pc'=42098) & (x'=(x+93));
[] (pc=42098) -> (pc'=42097) & (x'=(x+81));
[] (pc=42097) -> (pc'=42096) & (x'=(x+100));
[] (pc=42096) -> (pc'=42095) & (x'=(x+83));
[] (pc=42095) -> (pc'=42094) & (x'=(x+24));
[] (pc=42094) -> (pc'=42093) & (x'=(x+5));
[] (pc=42093) -> (pc'=42092) & (x'=(x+89));
[] (pc=42092) -> (pc'=42091) & (x'=(x+54));
[] (pc=42091) -> (pc'=42090) & (x'=(x+83));
[] (pc=42090) -> (pc'=42089) & (x'=(x+45));
[] (pc=42089) -> (pc'=42088) & (x'=(x+29));
[] (pc=42088) -> (pc'=42087) & (x'=(x+13));
[] (pc=42087) -> (pc'=42086) & (x'=(x+8));
[] (pc=42086) -> (pc'=42085) & (x'=(x+8));
[] (pc=42085) -> (pc'=42084) & (x'=(x+67));
[] (pc=42084) -> (pc'=42083) & (x'=(x+60));
[] (pc=42083) -> (pc'=42082) & (x'=(x+88));
[] (pc=42082) -> (pc'=42081) & (x'=(x+13));
[] (pc=42081) -> (pc'=42080) & (x'=(x+48));
[] (pc=42080) -> (pc'=42079) & (x'=(x+92));
[] (pc=42079) -> (pc'=42078) & (x'=(x+63));
[] (pc=42078) -> (pc'=42077) & (x'=(x+100));
[] (pc=42077) -> (pc'=42076) & (x'=(x+47));
[] (pc=42076) -> (pc'=42075) & (x'=(x+64));
[] (pc=42075) -> (pc'=42074) & (x'=(x+75));
[] (pc=42074) -> (pc'=42073) & (x'=(x+97));
[] (pc=42073) -> (pc'=42072) & (x'=(x+56));
[] (pc=42072) -> (pc'=42071) & (x'=(x+64));
[] (pc=42071) -> (pc'=42070) & (x'=(x+79));
[] (pc=42070) -> (pc'=42069) & (x'=(x+93));
[] (pc=42069) -> (pc'=42068) & (x'=(x+31));
[] (pc=42068) -> (pc'=42067) & (x'=(x+88));
[] (pc=42067) -> (pc'=42066) & (x'=(x+30));
[] (pc=42066) -> (pc'=42065) & (x'=(x+18));
[] (pc=42065) -> (pc'=42064) & (x'=(x+32));
[] (pc=42064) -> (pc'=42063) & (x'=(x+8));
[] (pc=42063) -> (pc'=42062) & (x'=(x+89));
[] (pc=42062) -> (pc'=42061) & (x'=(x+32));
[] (pc=42061) -> (pc'=42060) & (x'=(x+51));
[] (pc=42060) -> (pc'=42059) & (x'=(x+71));
[] (pc=42059) -> (pc'=42058) & (x'=(x+74));
[] (pc=42058) -> (pc'=42057) & (x'=(x+23));
[] (pc=42057) -> (pc'=42056) & (x'=(x+41));
[] (pc=42056) -> (pc'=42055) & (x'=(x+20));
[] (pc=42055) -> (pc'=42054) & (x'=(x+55));
[] (pc=42054) -> (pc'=42053) & (x'=(x+63));
[] (pc=42053) -> (pc'=42052) & (x'=(x+76));
[] (pc=42052) -> (pc'=42051) & (x'=(x+41));
[] (pc=42051) -> (pc'=42050) & (x'=(x+15));
[] (pc=42050) -> (pc'=42049) & (x'=(x+72));
[] (pc=42049) -> (pc'=42048) & (x'=(x+84));
[] (pc=42048) -> (pc'=42047) & (x'=(x+45));
[] (pc=42047) -> (pc'=1) & (x'=(x+24));
[] (pc=1) -> (pc'=42106);
[] (pc=42106) -> (pc'=42106);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

