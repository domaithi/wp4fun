mdp

module TestMDP

pc : [0..3277] init 0;
x : [0..12700] init 0;
n : [0..127] init 0;

[] (pc=0) -> (pc'=3276) & (x'=0);
[] (pc=3276) -> (pc'=3275) & (n'=127);
[] (pc=3275) -> (pc'=3274) & (x'=(x+18));
[] (pc=3274) -> (pc'=3273) & (x'=(x+61));
[] (pc=3273) -> (pc'=3272) & (x'=(x+5));
[] (pc=3272) -> (pc'=3271) & (x'=(x+82));
[] (pc=3271) -> (pc'=3270) & (x'=(x+38));
[] (pc=3270) -> (pc'=3269) & (x'=(x+42));
[] (pc=3269) -> (pc'=3268) & (x'=(x+61));
[] (pc=3268) -> (pc'=3267) & (x'=(x+56));
[] (pc=3267) -> (pc'=3266) & (x'=(x+1));
[] (pc=3266) -> (pc'=3265) & (x'=(x+28));
[] (pc=3265) -> (pc'=3264) & (x'=(x+58));
[] (pc=3264) -> (pc'=3263) & (x'=(x+100));
[] (pc=3263) -> (pc'=3262) & (x'=(x+78));
[] (pc=3262) -> (pc'=3261) & (x'=(x+80));
[] (pc=3261) -> (pc'=3260) & (x'=(x+99));
[] (pc=3260) -> (pc'=3259) & (x'=(x+38));
[] (pc=3259) -> (pc'=3258) & (x'=(x+88));
[] (pc=3258) -> (pc'=3257) & (x'=(x+45));
[] (pc=3257) -> (pc'=3256) & (x'=(x+97));
[] (pc=3256) -> (pc'=3255) & (x'=(x+73));
[] (pc=3255) -> (pc'=3254) & (x'=(x+44));
[] (pc=3254) -> (pc'=3253) & (x'=(x+26));
[] (pc=3253) -> (pc'=3252) & (x'=(x+18));
[] (pc=3252) -> (pc'=3251) & (x'=(x+2));
[] (pc=3251) -> (pc'=3250) & (x'=(x+69));
[] (pc=3250) -> (pc'=3249) & (x'=(x+94));
[] (pc=3249) -> (pc'=3248) & (x'=(x+56));
[] (pc=3248) -> (pc'=3247) & (x'=(x+32));
[] (pc=3247) -> (pc'=3246) & (x'=(x+27));
[] (pc=3246) -> (pc'=3245) & (x'=(x+27));
[] (pc=3245) -> (pc'=3244) & (x'=(x+88));
[] (pc=3244) -> (pc'=3243) & (x'=(x+67));
[] (pc=3243) -> (pc'=3242) & (x'=(x+80));
[] (pc=3242) -> (pc'=3241) & (x'=(x+13));
[] (pc=3241) -> (pc'=3240) & (x'=(x+73));
[] (pc=3240) -> (pc'=3239) & (x'=(x+21));
[] (pc=3239) -> (pc'=3238) & (x'=(x+99));
[] (pc=3238) -> (pc'=3237) & (x'=(x+100));
[] (pc=3237) -> (pc'=3236) & (x'=(x+74));
[] (pc=3236) -> (pc'=3235) & (x'=(x+53));
[] (pc=3235) -> (pc'=3234) & (x'=(x+66));
[] (pc=3234) -> (pc'=3233) & (x'=(x+32));
[] (pc=3233) -> (pc'=3232) & (x'=(x+49));
[] (pc=3232) -> (pc'=3231) & (x'=(x+69));
[] (pc=3231) -> (pc'=3230) & (x'=(x+37));
[] (pc=3230) -> (pc'=3229) & (x'=(x+92));
[] (pc=3229) -> (pc'=3228) & (x'=(x+19));
[] (pc=3228) -> (pc'=3227) & (x'=(x+18));
[] (pc=3227) -> (pc'=3226) & (x'=(x+19));
[] (pc=3226) -> (pc'=3225) & (x'=(x+44));
[] (pc=3225) -> (pc'=3224) & (x'=(x+9));
[] (pc=3224) -> (pc'=3223) & (x'=(x+28));
[] (pc=3223) -> (pc'=3222) & (x'=(x+96));
[] (pc=3222) -> (pc'=3221) & (x'=(x+20));
[] (pc=3221) -> (pc'=3220) & (x'=(x+81));
[] (pc=3220) -> (pc'=3219) & (x'=(x+39));
[] (pc=3219) -> (pc'=3218) & (x'=(x+77));
[] (pc=3218) -> (pc'=3217) & (x'=(x+65));
[] (pc=3217) -> (pc'=3216) & (x'=(x+79));
[] (pc=3216) -> (pc'=3215) & (x'=(x+50));
[] (pc=3215) -> (pc'=3214) & (x'=(x+97));
[] (pc=3214) -> (pc'=3213) & (x'=(x+82));
[] (pc=3213) -> (pc'=3212) & (x'=(x+34));
[] (pc=3212) -> (pc'=3211) & (x'=(x+92));
[] (pc=3211) -> (pc'=3210) & (x'=(x+81));
[] (pc=3210) -> (pc'=3209) & (x'=(x+36));
[] (pc=3209) -> (pc'=3208) & (x'=(x+12));
[] (pc=3208) -> (pc'=3207) & (x'=(x+34));
[] (pc=3207) -> (pc'=3206) & (x'=(x+36));
[] (pc=3206) -> (pc'=3205) & (x'=(x+2));
[] (pc=3205) -> (pc'=3204) & (x'=(x+6));
[] (pc=3204) -> (pc'=3203) & (x'=(x+18));
[] (pc=3203) -> (pc'=3202) & (x'=(x+81));
[] (pc=3202) -> (pc'=3201) & (x'=(x+61));
[] (pc=3201) -> (pc'=3200) & (x'=(x+80));
[] (pc=3200) -> (pc'=3199) & (x'=(x+93));
[] (pc=3199) -> (pc'=3198) & (x'=(x+57));
[] (pc=3198) -> (pc'=3197) & (x'=(x+89));
[] (pc=3197) -> (pc'=3196) & (x'=(x+72));
[] (pc=3196) -> (pc'=3195) & (x'=(x+6));
[] (pc=3195) -> (pc'=3194) & (x'=(x+50));
[] (pc=3194) -> (pc'=3193) & (x'=(x+17));
[] (pc=3193) -> (pc'=3192) & (x'=(x+7));
[] (pc=3192) -> (pc'=3191) & (x'=(x+47));
[] (pc=3191) -> (pc'=3190) & (x'=(x+21));
[] (pc=3190) -> (pc'=3189) & (x'=(x+12));
[] (pc=3189) -> (pc'=3188) & (x'=(x+79));
[] (pc=3188) -> (pc'=3187) & (x'=(x+97));
[] (pc=3187) -> (pc'=3186) & (x'=(x+50));
[] (pc=3186) -> (pc'=3185) & (x'=(x+36));
[] (pc=3185) -> (pc'=3184) & (x'=(x+91));
[] (pc=3184) -> (pc'=3183) & (x'=(x+38));
[] (pc=3183) -> (pc'=3182) & (x'=(x+78));
[] (pc=3182) -> (pc'=3181) & (x'=(x+30));
[] (pc=3181) -> (pc'=3180) & (x'=(x+13));
[] (pc=3180) -> (pc'=3179) & (x'=(x+49));
[] (pc=3179) -> (pc'=3178) & (x'=(x+67));
[] (pc=3178) -> (pc'=3177) & (x'=(x+68));
[] (pc=3177) -> (pc'=3176) & (x'=(x+76));
[] (pc=3176) -> (pc'=3175) & (x'=(x+59));
[] (pc=3175) -> (pc'=3174) & (x'=(x+50));
[] (pc=3174) -> (pc'=3173) & (x'=(x+17));
[] (pc=3173) -> (pc'=3172) & (x'=(x+7));
[] (pc=3172) -> (pc'=3171) & (x'=(x+46));
[] (pc=3171) -> (pc'=3170) & (x'=(x+30));
[] (pc=3170) -> (pc'=3169) & (x'=(x+23));
[] (pc=3169) -> (pc'=3168) & (x'=(x+55));
[] (pc=3168) -> (pc'=3167) & (x'=(x+48));
[] (pc=3167) -> (pc'=3166) & (x'=(x+35));
[] (pc=3166) -> (pc'=3165) & (x'=(x+25));
[] (pc=3165) -> (pc'=3164) & (x'=(x+53));
[] (pc=3164) -> (pc'=3163) & (x'=(x+10));
[] (pc=3163) -> (pc'=3162) & (x'=(x+38));
[] (pc=3162) -> (pc'=3161) & (x'=(x+30));
[] (pc=3161) -> (pc'=3160) & (x'=(x+20));
[] (pc=3160) -> (pc'=3159) & (x'=(x+4));
[] (pc=3159) -> (pc'=3158) & (x'=(x+2));
[] (pc=3158) -> (pc'=3157) & (x'=(x+10));
[] (pc=3157) -> (pc'=3156) & (x'=(x+84));
[] (pc=3156) -> (pc'=3155) & (x'=(x+74));
[] (pc=3155) -> (pc'=3154) & (x'=(x+64));
[] (pc=3154) -> (pc'=3153) & (x'=(x+44));
[] (pc=3153) -> (pc'=3152) & (x'=(x+66));
[] (pc=3152) -> (pc'=3151) & (x'=(x+14));
[] (pc=3151) -> (pc'=3150) & (x'=(x+76));
[] (pc=3150) -> (pc'=3149) & (x'=(x+72));
[] (pc=3149) -> (pc'=1) & (x'=(x+90));
[] (pc=1) -> (pc'=3277);
[] (pc=3277) -> (pc'=3277);

endmodule

rewards "post"

pc=1 : (x/n);

endrewards

