mdp

module TestMDP

pc : [0..34] init 0;
y : [0..32] init 0;

[] (pc=0) -> (pc'=2) & (y'=32);
[] (pc=2) & ((y>1)) -> (pc'=3);
[] (pc=3) & ((y>2)) -> (pc'=5);
[] (pc=5) & ((y>3)) -> (pc'=7);
[] (pc=7) & ((y>4)) -> (pc'=9);
[] (pc=9) & ((y>5)) -> (pc'=11);
[] (pc=11) & ((y>6)) -> (pc'=13);
[] (pc=13) & ((y>7)) -> (pc'=15);
[] (pc=15) & ((y>8)) -> (pc'=17);
[] (pc=17) & ((y>9)) -> (pc'=19);
[] (pc=19) & ((y>10)) -> (pc'=21);
[] (pc=21) & ((y>11)) -> (pc'=23);
[] (pc=23) & ((y>12)) -> (pc'=25);
[] (pc=25) & ((y>13)) -> (pc'=27);
[] (pc=27) & ((y>14)) -> (pc'=29);
[] (pc=29) & ((y>15)) -> (pc'=31);
[] (pc=31) & ((y>16)) -> (pc'=33);
[] (pc=33) -> (pc'=31) & (y'=(y-1));
[] (pc=31) & (!((y>16))) -> (pc'=32);
[] (pc=32) -> (pc'=29) & (y'=(y-1));
[] (pc=29) & (!((y>15))) -> (pc'=30);
[] (pc=30) -> (pc'=27) & (y'=(y-1));
[] (pc=27) & (!((y>14))) -> (pc'=28);
[] (pc=28) -> (pc'=25) & (y'=(y-1));
[] (pc=25) & (!((y>13))) -> (pc'=26);
[] (pc=26) -> (pc'=23) & (y'=(y-1));
[] (pc=23) & (!((y>12))) -> (pc'=24);
[] (pc=24) -> (pc'=21) & (y'=(y-1));
[] (pc=21) & (!((y>11))) -> (pc'=22);
[] (pc=22) -> (pc'=19) & (y'=(y-1));
[] (pc=19) & (!((y>10))) -> (pc'=20);
[] (pc=20) -> (pc'=17) & (y'=(y-1));
[] (pc=17) & (!((y>9))) -> (pc'=18);
[] (pc=18) -> (pc'=15) & (y'=(y-1));
[] (pc=15) & (!((y>8))) -> (pc'=16);
[] (pc=16) -> (pc'=13) & (y'=(y-1));
[] (pc=13) & (!((y>7))) -> (pc'=14);
[] (pc=14) -> (pc'=11) & (y'=(y-1));
[] (pc=11) & (!((y>6))) -> (pc'=12);
[] (pc=12) -> (pc'=9) & (y'=(y-1));
[] (pc=9) & (!((y>5))) -> (pc'=10);
[] (pc=10) -> (pc'=7) & (y'=(y-1));
[] (pc=7) & (!((y>4))) -> (pc'=8);
[] (pc=8) -> (pc'=5) & (y'=(y-1));
[] (pc=5) & (!((y>3))) -> (pc'=6);
[] (pc=6) -> (pc'=3) & (y'=(y-1));
[] (pc=3) & (!((y>2))) -> (pc'=4);
[] (pc=4) -> (pc'=2) & (y'=(y-1));
[] (pc=2) & (!((y>1))) -> (pc'=1);
[] (pc=1) -> (pc'=34);
[] (pc=34) -> (pc'=34);

endmodule

rewards "post"

pc=1 : y;

endrewards

